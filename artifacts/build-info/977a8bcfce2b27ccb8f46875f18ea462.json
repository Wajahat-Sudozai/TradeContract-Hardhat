{"id":"977a8bcfce2b27ccb8f46875f18ea462","_format":"hh-sol-build-info-1","solcVersion":"0.8.9","solcLongVersion":"0.8.9+commit.e5eed63a","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IAccessControl.sol\";\nimport \"../utils/Context.sol\";\nimport \"../utils/Strings.sol\";\nimport \"../utils/introspection/ERC165.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it.\n */\nabstract contract AccessControl is Context, IAccessControl, ERC165 {\n    struct RoleData {\n        mapping(address => bool) members;\n        bytes32 adminRole;\n    }\n\n    mapping(bytes32 => RoleData) private _roles;\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with a standardized message including the required role.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     *\n     * _Available since v4.1._\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual override returns (bool) {\n        return _roles[role].members[account];\n    }\n\n    /**\n     * @dev Revert with a standard message if `_msgSender()` is missing `role`.\n     * Overriding this function changes the behavior of the {onlyRole} modifier.\n     *\n     * Format of the revert message is described in {_checkRole}.\n     *\n     * _Available since v4.6._\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Revert with a standard message if `account` is missing `role`.\n     *\n     * The format of the revert reason is given by the following regular expression:\n     *\n     *  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert(\n                string(\n                    abi.encodePacked(\n                        \"AccessControl: account \",\n                        Strings.toHexString(account),\n                        \" is missing role \",\n                        Strings.toHexString(uint256(role), 32)\n                    )\n                )\n            );\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual override returns (bytes32) {\n        return _roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual override onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address account) public virtual override {\n        require(account == _msgSender(), \"AccessControl: can only renounce roles for self\");\n\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event. Note that unlike {grantRole}, this function doesn't perform any\n     * checks on the calling account.\n     *\n     * May emit a {RoleGranted} event.\n     *\n     * [WARNING]\n     * ====\n     * This function should only be called from the constructor when setting\n     * up the initial roles for the system.\n     *\n     * Using this function in any other way is effectively circumventing the admin\n     * system imposed by {AccessControl}.\n     * ====\n     *\n     * NOTE: This function is deprecated in favor of {_grantRole}.\n     */\n    function _setupRole(bytes32 role, address account) internal virtual {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        _roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual {\n        if (!hasRole(role, account)) {\n            _roles[role].members[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n        }\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual {\n        if (hasRole(role, account)) {\n            _roles[role].members[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n        }\n    }\n}\n"},"@openzeppelin/contracts/access/IAccessControl.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (access/IAccessControl.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     *\n     * _Available since v3.1._\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `account`.\n     */\n    function renounceRole(bytes32 role, address account) external;\n}\n"},"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC20.sol\";\nimport \"./extensions/IERC20Metadata.sol\";\nimport \"../../utils/Context.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n * For a generic mechanism see {ERC20PresetMinterPauser}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n *\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n * functions have been added to mitigate the well-known issues around setting\n * allowances. See {IERC20-approve}.\n */\ncontract ERC20 is Context, IERC20, IERC20Metadata {\n    mapping(address => uint256) private _balances;\n\n    mapping(address => mapping(address => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * The default value of {decimals} is 18. To select a different value for\n     * {decimals} you should overload it.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual override returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual override returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\n     * overridden;\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual override returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual override returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual override returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `amount`.\n     */\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, amount);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `amount`.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) public virtual override returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, amount);\n        _transfer(from, to, amount);\n        return true;\n    }\n\n    /**\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\n        return true;\n    }\n\n    /**\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\n     *\n     * This is an alternative to {approve} that can be used as a mitigation for\n     * problems described in {IERC20-approve}.\n     *\n     * Emits an {Approval} event indicating the updated allowance.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `spender` must have allowance for the caller of at least\n     * `subtractedValue`.\n     */\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\n        address owner = _msgSender();\n        uint256 currentAllowance = allowance(owner, spender);\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\n        unchecked {\n            _approve(owner, spender, currentAllowance - subtractedValue);\n        }\n\n        return true;\n    }\n\n    /**\n     * @dev Moves `amount` of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `from` must have a balance of at least `amount`.\n     */\n    function _transfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {\n        require(from != address(0), \"ERC20: transfer from the zero address\");\n        require(to != address(0), \"ERC20: transfer to the zero address\");\n\n        _beforeTokenTransfer(from, to, amount);\n\n        uint256 fromBalance = _balances[from];\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\n        unchecked {\n            _balances[from] = fromBalance - amount;\n            // Overflow not possible: the sum of all balances is capped by totalSupply, and the sum is preserved by\n            // decrementing then incrementing.\n            _balances[to] += amount;\n        }\n\n        emit Transfer(from, to, amount);\n\n        _afterTokenTransfer(from, to, amount);\n    }\n\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\n     * the total supply.\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function _mint(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: mint to the zero address\");\n\n        _beforeTokenTransfer(address(0), account, amount);\n\n        _totalSupply += amount;\n        unchecked {\n            // Overflow not possible: balance + amount is at most totalSupply + amount, which is checked above.\n            _balances[account] += amount;\n        }\n        emit Transfer(address(0), account, amount);\n\n        _afterTokenTransfer(address(0), account, amount);\n    }\n\n    /**\n     * @dev Destroys `amount` tokens from `account`, reducing the\n     * total supply.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     * - `account` must have at least `amount` tokens.\n     */\n    function _burn(address account, uint256 amount) internal virtual {\n        require(account != address(0), \"ERC20: burn from the zero address\");\n\n        _beforeTokenTransfer(account, address(0), amount);\n\n        uint256 accountBalance = _balances[account];\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\n        unchecked {\n            _balances[account] = accountBalance - amount;\n            // Overflow not possible: amount <= accountBalance <= totalSupply.\n            _totalSupply -= amount;\n        }\n\n        emit Transfer(account, address(0), amount);\n\n        _afterTokenTransfer(account, address(0), amount);\n    }\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     */\n    function _approve(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        require(owner != address(0), \"ERC20: approve from the zero address\");\n        require(spender != address(0), \"ERC20: approve to the zero address\");\n\n        _allowances[owner][spender] = amount;\n        emit Approval(owner, spender, amount);\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n     *\n     * Does not update the allowance amount in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Might emit an {Approval} event.\n     */\n    function _spendAllowance(\n        address owner,\n        address spender,\n        uint256 amount\n    ) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\n            unchecked {\n                _approve(owner, spender, currentAllowance - amount);\n            }\n        }\n    }\n\n    /**\n     * @dev Hook that is called before any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * will be transferred to `to`.\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _beforeTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n\n    /**\n     * @dev Hook that is called after any transfer of tokens. This includes\n     * minting and burning.\n     *\n     * Calling conditions:\n     *\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n     * has been transferred to `to`.\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n     * - `from` and `to` are never both zero.\n     *\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\n     */\n    function _afterTokenTransfer(\n        address from,\n        address to,\n        uint256 amount\n    ) internal virtual {}\n}\n"},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n *\n * _Available since v4.1._\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./IERC165.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n *\n * Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\n */\nabstract contract ERC165 is IERC165 {\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"},"@openzeppelin/contracts/utils/math/Math.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    enum Rounding {\n        Down, // Toward negative infinity\n        Up, // Toward infinity\n        Zero // Toward zero\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n     * with further edits by Uniswap Labs also under MIT license.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator\n    ) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod0 := mul(x, y)\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            require(denominator > prod1);\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator. Always >= 1.\n            // See https://cs.stackexchange.com/q/138556/92363.\n\n            // Does not overflow because the denominator cannot be zero at this stage in the function.\n            uint256 twos = denominator & (~denominator + 1);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also works\n            // in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(\n        uint256 x,\n        uint256 y,\n        uint256 denominator,\n        Rounding rounding\n    ) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (rounding == Rounding.Up && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (rounding == Rounding.Up && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (rounding == Rounding.Up && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10**64) {\n                value /= 10**64;\n                result += 64;\n            }\n            if (value >= 10**32) {\n                value /= 10**32;\n                result += 32;\n            }\n            if (value >= 10**16) {\n                value /= 10**16;\n                result += 16;\n            }\n            if (value >= 10**8) {\n                value /= 10**8;\n                result += 8;\n            }\n            if (value >= 10**4) {\n                value /= 10**4;\n                result += 4;\n            }\n            if (value >= 10**2) {\n                value /= 10**2;\n                result += 2;\n            }\n            if (value >= 10**1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (rounding == Rounding.Up && 10**result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256, rounded down, of a positive value.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (rounding == Rounding.Up && 1 << (result * 8) < value ? 1 : 0);\n        }\n    }\n}\n"},"@openzeppelin/contracts/utils/Strings.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/Strings.sol)\n\npragma solidity ^0.8.0;\n\nimport \"./math/Math.sol\";\n\n/**\n * @dev String operations.\n */\nlibrary Strings {\n    bytes16 private constant _SYMBOLS = \"0123456789abcdef\";\n    uint8 private constant _ADDRESS_LENGTH = 20;\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` decimal representation.\n     */\n    function toString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            uint256 length = Math.log10(value) + 1;\n            string memory buffer = new string(length);\n            uint256 ptr;\n            /// @solidity memory-safe-assembly\n            assembly {\n                ptr := add(buffer, add(32, length))\n            }\n            while (true) {\n                ptr--;\n                /// @solidity memory-safe-assembly\n                assembly {\n                    mstore8(ptr, byte(mod(value, 10), _SYMBOLS))\n                }\n                value /= 10;\n                if (value == 0) break;\n            }\n            return buffer;\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation.\n     */\n    function toHexString(uint256 value) internal pure returns (string memory) {\n        unchecked {\n            return toHexString(value, Math.log256(value) + 1);\n        }\n    }\n\n    /**\n     * @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length.\n     */\n    function toHexString(uint256 value, uint256 length) internal pure returns (string memory) {\n        bytes memory buffer = new bytes(2 * length + 2);\n        buffer[0] = \"0\";\n        buffer[1] = \"x\";\n        for (uint256 i = 2 * length + 1; i > 1; --i) {\n            buffer[i] = _SYMBOLS[value & 0xf];\n            value >>= 4;\n        }\n        require(value == 0, \"Strings: hex length insufficient\");\n        return string(buffer);\n    }\n\n    /**\n     * @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation.\n     */\n    function toHexString(address addr) internal pure returns (string memory) {\n        return toHexString(uint256(uint160(addr)), _ADDRESS_LENGTH);\n    }\n}\n"},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/structs/EnumerableSet.sol)\n// This file was procedurally generated from scripts/generate/templates/EnumerableSet.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Library for managing\n * https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n * types.\n *\n * Sets have the following properties:\n *\n * - Elements are added, removed, and checked for existence in constant time\n * (O(1)).\n * - Elements are enumerated in O(n). No guarantees are made on the ordering.\n *\n * ```\n * contract Example {\n *     // Add the library methods\n *     using EnumerableSet for EnumerableSet.AddressSet;\n *\n *     // Declare a set state variable\n *     EnumerableSet.AddressSet private mySet;\n * }\n * ```\n *\n * As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n * and `uint256` (`UintSet`) are supported.\n *\n * [WARNING]\n * ====\n * Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n * unusable.\n * See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n *\n * In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n * array of EnumerableSet.\n * ====\n */\nlibrary EnumerableSet {\n    // To implement this library for multiple types with as little code\n    // repetition as possible, we write it in terms of a generic Set type with\n    // bytes32 values.\n    // The Set implementation uses private functions, and user-facing\n    // implementations (such as AddressSet) are just wrappers around the\n    // underlying Set.\n    // This means that we can only create new EnumerableSets for types that fit\n    // in bytes32.\n\n    struct Set {\n        // Storage of set values\n        bytes32[] _values;\n        // Position of the value in the `values` array, plus 1 because index 0\n        // means a value is not in the set.\n        mapping(bytes32 => uint256) _indexes;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function _add(Set storage set, bytes32 value) private returns (bool) {\n        if (!_contains(set, value)) {\n            set._values.push(value);\n            // The value is stored at length-1, but we add 1 to all indexes\n            // and use 0 as a sentinel value\n            set._indexes[value] = set._values.length;\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function _remove(Set storage set, bytes32 value) private returns (bool) {\n        // We read and store the value's index to prevent multiple reads from the same storage slot\n        uint256 valueIndex = set._indexes[value];\n\n        if (valueIndex != 0) {\n            // Equivalent to contains(set, value)\n            // To delete an element from the _values array in O(1), we swap the element to delete with the last one in\n            // the array, and then remove the last element (sometimes called as 'swap and pop').\n            // This modifies the order of the array, as noted in {at}.\n\n            uint256 toDeleteIndex = valueIndex - 1;\n            uint256 lastIndex = set._values.length - 1;\n\n            if (lastIndex != toDeleteIndex) {\n                bytes32 lastValue = set._values[lastIndex];\n\n                // Move the last value to the index where the value to delete is\n                set._values[toDeleteIndex] = lastValue;\n                // Update the index for the moved value\n                set._indexes[lastValue] = valueIndex; // Replace lastValue's index to valueIndex\n            }\n\n            // Delete the slot where the moved value was stored\n            set._values.pop();\n\n            // Delete the index for the deleted slot\n            delete set._indexes[value];\n\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function _contains(Set storage set, bytes32 value) private view returns (bool) {\n        return set._indexes[value] != 0;\n    }\n\n    /**\n     * @dev Returns the number of values on the set. O(1).\n     */\n    function _length(Set storage set) private view returns (uint256) {\n        return set._values.length;\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function _at(Set storage set, uint256 index) private view returns (bytes32) {\n        return set._values[index];\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function _values(Set storage set) private view returns (bytes32[] memory) {\n        return set._values;\n    }\n\n    // Bytes32Set\n\n    struct Bytes32Set {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _add(set._inner, value);\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(Bytes32Set storage set, bytes32 value) internal returns (bool) {\n        return _remove(set._inner, value);\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(Bytes32Set storage set, bytes32 value) internal view returns (bool) {\n        return _contains(set._inner, value);\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(Bytes32Set storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(Bytes32Set storage set, uint256 index) internal view returns (bytes32) {\n        return _at(set._inner, index);\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(Bytes32Set storage set) internal view returns (bytes32[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        bytes32[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // AddressSet\n\n    struct AddressSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(AddressSet storage set, address value) internal returns (bool) {\n        return _add(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(AddressSet storage set, address value) internal returns (bool) {\n        return _remove(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(AddressSet storage set, address value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(uint256(uint160(value))));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(AddressSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(AddressSet storage set, uint256 index) internal view returns (address) {\n        return address(uint160(uint256(_at(set._inner, index))));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(AddressSet storage set) internal view returns (address[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        address[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n\n    // UintSet\n\n    struct UintSet {\n        Set _inner;\n    }\n\n    /**\n     * @dev Add a value to a set. O(1).\n     *\n     * Returns true if the value was added to the set, that is if it was not\n     * already present.\n     */\n    function add(UintSet storage set, uint256 value) internal returns (bool) {\n        return _add(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Removes a value from a set. O(1).\n     *\n     * Returns true if the value was removed from the set, that is if it was\n     * present.\n     */\n    function remove(UintSet storage set, uint256 value) internal returns (bool) {\n        return _remove(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns true if the value is in the set. O(1).\n     */\n    function contains(UintSet storage set, uint256 value) internal view returns (bool) {\n        return _contains(set._inner, bytes32(value));\n    }\n\n    /**\n     * @dev Returns the number of values in the set. O(1).\n     */\n    function length(UintSet storage set) internal view returns (uint256) {\n        return _length(set._inner);\n    }\n\n    /**\n     * @dev Returns the value stored at position `index` in the set. O(1).\n     *\n     * Note that there are no guarantees on the ordering of values inside the\n     * array, and it may change when more values are added or removed.\n     *\n     * Requirements:\n     *\n     * - `index` must be strictly less than {length}.\n     */\n    function at(UintSet storage set, uint256 index) internal view returns (uint256) {\n        return uint256(_at(set._inner, index));\n    }\n\n    /**\n     * @dev Return the entire set in an array\n     *\n     * WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n     * to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n     * this function has an unbounded cost, and using it as part of a state-changing function may render the function\n     * uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block.\n     */\n    function values(UintSet storage set) internal view returns (uint256[] memory) {\n        bytes32[] memory store = _values(set._inner);\n        uint256[] memory result;\n\n        /// @solidity memory-safe-assembly\n        assembly {\n            result := store\n        }\n\n        return result;\n    }\n}\n"},"contracts/allowances.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.4;\r\n\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\r\n\r\ncontract Allowances {\r\n    using EnumerableSet for EnumerableSet.Bytes32Set;\r\n\r\n    mapping(bytes32 => address) private _currencyAllowed;\r\n\r\n    EnumerableSet.Bytes32Set private _totalCurrencies;\r\n\r\n\r\n    function _addCurrency(bytes32 currency, address currencyAddress) internal {\r\n        require(currencyAddress != address(0), \"Allowances: The Zero Address is not allowed\");\r\n        _currencyAllowed[currency] = currencyAddress;\r\n        _totalCurrencies.add(currency);\r\n    }\r\n\r\n    function _removeCurrency(bytes32 currency) internal {\r\n        require(_currencyAllowed[currency] != address(0));\r\n\r\n        _totalCurrencies.remove(currency);\r\n        delete _currencyAllowed[currency];\r\n    }\r\n\r\n    function addressCurrency(bytes32 currency) public view returns(address) {\r\n        return _currencyAllowed[currency];\r\n    }\r\n   \r\n    function _allowedCurrency(bytes32 currency) internal view returns(bool){\r\n        return _currencyAllowed[currency] != address(0);\r\n    }\r\n\r\n    /**\r\n     @dev use this function to get all erc20 allowed as payment method in the contract.\r\n     */\r\n    function allCurrenciesAllowed() public view returns(bytes32[] memory) {\r\n        uint256 indexMax = _totalCurrencies.length();\r\n        bytes32[] memory currencies = new bytes32[](indexMax);\r\n        for (uint256 index = 0; index < indexMax; ++index) {\r\n            bytes32 currency = _totalCurrencies.at(index);\r\n            currencies[index] = currency;\r\n        }\r\n        return currencies;\r\n    }\r\n\r\n    modifier currencyAllowed(bytes32 currency)  {\r\n        require(_currencyAllowed[currency] != address(0), \"Allowances: This currency its not allowed\" );\r\n        _;\r\n    }    \r\n}"},"contracts/ERC20.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\ncontract tradeToken is ERC20, Ownable {\r\n    constructor() ERC20(\"TRADE TOKEN\", \"TRD\") {}\r\n    function mint(address to, uint256 amount) external {\r\n        _mint(to, amount);\r\n    }\r\n}"},"contracts/Lock.sol":{"content":"// SPDX-License-Identifier: UNLICENSED\npragma solidity ^0.8.9;\n\n// Uncomment this line to use console.log\n// import \"hardhat/console.sol\";\n\ncontract Lock {\n    uint public unlockTime;\n    address payable public owner;\n\n    event Withdrawal(uint amount, uint when);\n\n    constructor(uint _unlockTime) payable {\n        require(\n            block.timestamp < _unlockTime,\n            \"Unlock time should be in the future\"\n        );\n\n        unlockTime = _unlockTime;\n        owner = payable(msg.sender);\n    }\n\n    function withdraw() public {\n        // Uncomment this line, and the import of \"hardhat/console.sol\", to print a log in your terminal\n        // console.log(\"Unlock time is %o and block timestamp is %o\", unlockTime, block.timestamp);\n\n        require(block.timestamp >= unlockTime, \"You can't withdraw yet\");\n        require(msg.sender == owner, \"You aren't the owner\");\n\n        emit Withdrawal(address(this).balance, block.timestamp);\n\n        owner.transfer(address(this).balance);\n    }\n}\n"},"contracts/tradingInCrypto.sol":{"content":"//SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.4;\r\n\r\nimport \"./tradingInCryptoStorage.sol\";\r\nimport \"./allowances.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/access/AccessControl.sol\";\r\nimport \"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\";\r\n\r\nerror InvalidTradeNumber();\r\nerror InvalidTradeType();\r\nerror InvalidSeller();\r\nerror InvalidTrader();\r\nerror InvalidBuyer();\r\nerror InvalidCallerAddress();\r\nerror CurrencyNotAllowed();\r\nerror AllReadyAgreed();\r\nerror NotAcceptedYet();\r\nerror AlreadyAddedBL();\r\nerror NotBLAddedYet();\r\nerror TradeCompleted();\r\n\r\ncontract tradingInCrypto is AccessControl, Allowances{\r\n    bytes32 public constant SELLER_ROLE = keccak256(\"SELLER_ROLE\");\r\n    bytes32 public constant TRADER_ROLE = keccak256(\"TRADER_ROLE\");\r\n    bytes32 public constant BUYER_ROLE = keccak256(\"BUYER_ROLE\");\r\n   \r\n    using tradingInCryptoStorage for tradingInCryptoStorage.trading;\r\n    IERC20 private ERC20;\r\n\r\n    using EnumerableSet for EnumerableSet.UintSet;\r\n    EnumerableSet.UintSet private totalTradingNumbers;\r\n\r\n    string private baseUri;\r\n\r\n    constructor (string memory uri) {  \r\n      baseUri=uri;\r\n     _grantRole(DEFAULT_ADMIN_ROLE, msg.sender);\r\n     _grantRole(SELLER_ROLE, msg.sender);\r\n     _grantRole(TRADER_ROLE, msg.sender);\r\n     _grantRole(BUYER_ROLE, msg.sender);\r\n    }\r\n    \r\n    mapping (uint256=>tradingInCryptoStorage.trading)private trading;\r\n    \r\n    function updateBaseUri(string memory uri)public onlyRole(DEFAULT_ADMIN_ROLE){\r\n     baseUri=uri;\r\n    }\r\n\r\n    function _baseURI() internal view  returns (string memory) {\r\n    return baseUri;\r\n    }\r\n\r\n    function addCurrency(bytes32 currency, address currencyAddress) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        _addCurrency(currency, currencyAddress);\r\n    }\r\n\r\n    function removeCurrency(bytes32 currency) external onlyRole(DEFAULT_ADMIN_ROLE) {\r\n        _removeCurrency(currency);\r\n    }\r\n\r\n    function totalTrades() public view returns(uint256) {\r\n        return totalTradingNumbers.length();\r\n    }\r\n    function totalTradesNumberByIndex(uint256 index) public view returns(uint256) {\r\n        return totalTradingNumbers.at(index);\r\n    }\r\n\r\n    \r\n    function _createtrade(\r\n        uint256 _tradingNumber,\r\n        string memory _assetName,\r\n        bytes32 _currency,\r\n        address _fromAddress,\r\n        address _toAddress,\r\n        uint256 _totalAmount,\r\n        uint256 _tradeType\r\n    )internal\r\n    {\r\n        uint256 matterId=_tradingNumber;\r\n        trading[matterId].set(\r\n            _tradingNumber,\r\n            _assetName,\r\n            _currency,\r\n            _fromAddress,\r\n            _toAddress,\r\n            _totalAmount,\r\n            _tradeType\r\n        );\r\n    }\r\n    \r\n    //Trade can be create by any of the Role \r\n    function createtrade(\r\n        uint256 tradeNumber,\r\n        string memory assetName,\r\n        bytes32 currency,\r\n        address walletAddress,\r\n        uint256 totalAmount,\r\n        uint256 tradeType\r\n    )external    \r\n    {\r\n        address fromAddress;\r\n        address toAddress;\r\n\r\n      if(trading[tradeNumber].peelTradeNumber()){revert InvalidTradeNumber();}\r\n      if(addressCurrency(currency)==address(0)){revert CurrencyNotAllowed();}\r\n\r\n      if(tradeType==1){ //Seller To Trader\r\n        if(!hasRole(SELLER_ROLE,msg.sender)){revert InvalidSeller();}        \r\n        if(!hasRole(TRADER_ROLE,walletAddress)){revert InvalidTrader();}\r\n        fromAddress = msg.sender;\r\n        toAddress = walletAddress;\r\n      }else if(tradeType==2){ //Trader To Buyer\r\n        if(!hasRole(TRADER_ROLE,msg.sender)){revert InvalidTrader();}\r\n        if(!hasRole(BUYER_ROLE,walletAddress)){revert InvalidBuyer();}\r\n        fromAddress = msg.sender;\r\n        toAddress = walletAddress;\r\n      }else if(tradeType==3){ //Buyer To Trader\r\n        if(!hasRole(BUYER_ROLE,msg.sender)){revert InvalidBuyer();}\r\n        if(!hasRole(TRADER_ROLE,walletAddress)){revert InvalidTrader();}\r\n        fromAddress = walletAddress;\r\n        toAddress = msg.sender;\r\n      }else{\r\n          revert InvalidTradeType();\r\n      }\r\n\r\n        _createtrade(\r\n            tradeNumber,\r\n            assetName,\r\n            currency,\r\n            fromAddress,\r\n            toAddress,\r\n            totalAmount,\r\n            tradeType);\r\n        totalTradingNumbers.add(tradeNumber);\r\n    }\r\n    \r\n    function agreeToTrade(uint256 tradeNumber)public {\r\n      if(!trading[tradeNumber].peelTradeNumber()){revert InvalidTradeNumber();}\r\n      if(trading[tradeNumber].isAcceptTrading()){revert AllReadyAgreed();}\r\n      if(trading[tradeNumber].tradingType()==1 || trading[tradeNumber].tradingType()==2){\r\n        if(trading[tradeNumber].tradingToAddress()!=msg.sender){revert InvalidCallerAddress();}\r\n      }else if(trading[tradeNumber].tradingType()==3){\r\n        if(trading[tradeNumber].tradingFromAddress()!=msg.sender){revert InvalidCallerAddress();}\r\n      }else{\r\n         revert InvalidTradeType();\r\n      }\r\n      address tradingCurrency = addressCurrency(trading[tradeNumber].tradingCurrency());\r\n      trading[tradeNumber].setAcceptTrading();\r\n      IERC20(tradingCurrency).transferFrom(trading[tradeNumber].tradingToAddress(),address(this),trading[tradeNumber].tradingTotalAmount());\r\n     \r\n    }\r\n\r\n    function updateBL(uint256 tradeNumber,string memory hash)public{\r\n      if(!trading[tradeNumber].peelTradeNumber()){revert InvalidTradeNumber();}\r\n      if(!trading[tradeNumber].isAcceptTrading()){revert NotAcceptedYet();}\r\n      if(!trading[tradeNumber].isTradingBlHashEmpty()){revert AlreadyAddedBL();}\r\n      if(trading[tradeNumber].tradingFromAddress()!=msg.sender){revert InvalidCallerAddress();}\r\n      trading[tradeNumber].setTradingBL(hash);\r\n    }\r\n\r\n    function verifyBL(uint256 tradeNumber)public{\r\n      if(!trading[tradeNumber].peelTradeNumber()){revert InvalidTradeNumber();}\r\n      if(trading[tradeNumber].isVerifyBl()){revert TradeCompleted();}\r\n      if(trading[tradeNumber].isTradingBlHashEmpty()){revert NotBLAddedYet();}\r\n      if(trading[tradeNumber].tradingToAddress()!=msg.sender){revert InvalidCallerAddress();}\r\n      trading[tradeNumber].setVerifyTradingBL();\r\n      address tradingCurrency = addressCurrency(trading[tradeNumber].tradingCurrency());\r\n      IERC20(tradingCurrency).transfer(trading[tradeNumber].tradingFromAddress(),trading[tradeNumber].tradingTotalAmount());\r\n    }\r\n    \r\n    //Trading details\r\n    function tradingDetails(uint256 tradeNumber)public view returns(uint256 TradeNumber,\r\n        string memory AssetName,\r\n        bytes32 Currency,\r\n        address FromAddress,\r\n        address ToAddress,\r\n        uint256 TotalAmount,\r\n        string memory  TradeBL)\r\n    {\r\n        return trading[tradeNumber].tradingDetails();\r\n    }\r\n    \r\n    //Trading BL Hash\r\n    function getTradingHash(uint256 tradeNumber) public virtual view returns(string memory) {\r\n    if(!trading[tradeNumber].peelTradeNumber()){revert InvalidTradeNumber();}\r\n    string memory baseURI = _baseURI();\r\n    string memory hash=trading[tradeNumber].tradingBlHash();\r\n    return\r\n        bytes(baseURI).length > 0\r\n        ? string(abi.encodePacked(baseURI,hash))\r\n        : \"\";   \r\n    }\r\n\r\n    // get All matter number\r\n    function allTradingNumbers() public view returns(uint256[] memory) {\r\n        uint256 tradingNumbers = totalTrades();\r\n        uint256[] memory trades = new uint256[](tradingNumbers);\r\n        for (uint256 index = 0; index < tradingNumbers; ++index) {\r\n            uint256 tradingNumber = totalTradesNumberByIndex(index);\r\n            trades[index] = tradingNumber;\r\n        }\r\n        return trades;\r\n    }\r\n\r\n    function batchDetailsTrades(uint256[] memory tradingNumbers) public view returns(tradingInCryptoStorage.trading[] memory) {\r\n        tradingInCryptoStorage.trading[] memory detailsTrades = new tradingInCryptoStorage.trading[](tradingNumbers.length);\r\n        for (uint256 index = 0; index < tradingNumbers.length; ++index) {\r\n            detailsTrades[index] = trading[tradingNumbers[index]];\r\n        }\r\n        return detailsTrades;\r\n    }\r\n\r\n    \r\n}"},"contracts/tradingInCryptoStorage.sol":{"content":"// SPDX-License-Identifier: GPL-3.0\r\npragma solidity ^0.8.4;\r\n\r\nlibrary tradingInCryptoStorage  {\r\n    struct trading {\r\n        uint256 tradeNumber;\r\n        string assetName;\r\n        bytes32 currency;\r\n        address fromAddress;\r\n        address toAddress;\r\n        uint256 totalAmount;\r\n        string blHash;\r\n        bool  acceptTrade;\r\n        bool verifyBl;\r\n        uint256 tradeType;\r\n    }\r\n    function set(\r\n        trading storage self,\r\n        uint256 _tradeNumber,\r\n        string memory _assetName,\r\n        bytes32 _currency,\r\n        address _fromAddress,\r\n        address _toAddress,\r\n        uint256 _totalAmount,\r\n        uint256 _tradeType\r\n        ) internal {\r\n        self.tradeNumber = _tradeNumber;\r\n        self.assetName = _assetName;\r\n        self.currency= _currency;\r\n        self.fromAddress = _fromAddress;\r\n        self.toAddress =  _toAddress; \r\n        self.totalAmount = _totalAmount;\r\n        self.tradeType = _tradeType;\r\n    }\r\n    function setAcceptTrading(\r\n    trading storage self\r\n    )internal\r\n    {\r\n        self.acceptTrade=true;\r\n    }\r\n    function setTradingBL(\r\n    trading storage self,\r\n    string memory _blHash\r\n    )internal\r\n    {\r\n        self.blHash=_blHash;\r\n    }\r\n    function setVerifyTradingBL(\r\n    trading storage self\r\n    )internal\r\n    {\r\n        self.verifyBl=true;\r\n    }\r\n    function tradingDetails(\r\n        trading storage self\r\n    ) internal view returns(uint256,\r\n        string memory,\r\n        bytes32,\r\n        address,\r\n        address,\r\n        uint256,\r\n        string memory ) \r\n    {\r\n        return (\r\n        self.tradeNumber,\r\n        self.assetName,\r\n        self.currency,\r\n        self.fromAddress,\r\n        self.toAddress,\r\n        self.totalAmount,\r\n        self.blHash\r\n        );\r\n    }\r\n    function peelTradeNumber(\r\n        trading storage self\r\n    )internal view returns(bool)\r\n    {\r\n        if(self.tradeNumber!=0)\r\n        {\r\n           return true;\r\n        }\r\n        return false;\r\n    }\r\n    function tradingAssetName(\r\n     trading storage self\r\n    )internal view returns(string memory)\r\n    {\r\n        return self.assetName;\r\n    }\r\n    function tradingTotalAmount(\r\n     trading storage self\r\n    )internal view returns(uint256)\r\n    {\r\n        return self.totalAmount;\r\n    }\r\n    function tradingFromAddress(\r\n     trading storage self\r\n    )internal view returns(address)\r\n    {\r\n        return self.fromAddress;\r\n    }\r\n    function tradingToAddress(\r\n     trading storage self\r\n    )internal view returns(address)\r\n    {\r\n        return self.toAddress;\r\n    }\r\n    function isAcceptTrading(\r\n    trading storage self\r\n    )internal view returns(bool)\r\n    {\r\n        return self.acceptTrade;\r\n    }\r\n    function tradingCurrency(\r\n    trading storage self\r\n    )internal view returns(bytes32){\r\n        return self.currency;\r\n    } \r\n    function tradingBlHash(\r\n    trading storage self\r\n    )internal view returns(string memory){\r\n       return self.blHash;\r\n    }\r\n    function isTradingBlHashEmpty(\r\n    trading storage self\r\n    )internal view returns(bool){\r\n       return bytes(self.blHash).length == 0;\r\n    }\r\n    function tradingType(\r\n    trading storage self\r\n    )internal view returns(uint256){\r\n        return self.tradeType;\r\n    }\r\n    function isVerifyBl(\r\n    trading storage self\r\n    )internal view returns(bool){\r\n        return self.verifyBl;\r\n    }\r\n}   "}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/AccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","exportedSymbols":{"AccessControl":[315],"Context":[1213],"ERC165":[1412],"IAccessControl":[388],"IERC165":[1424],"Math":[2289],"Strings":[1388]},"id":316,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"108:23:0"},{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","file":"./IAccessControl.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":389,"src":"133:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":1214,"src":"164:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","file":"../utils/Strings.sol","id":4,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":1389,"src":"195:30:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","file":"../utils/introspection/ERC165.sol","id":5,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":316,"sourceUnit":1413,"src":"226:43:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":7,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1841:7:0"},"id":8,"nodeType":"InheritanceSpecifier","src":"1841:7:0"},{"baseName":{"id":9,"name":"IAccessControl","nodeType":"IdentifierPath","referencedDeclaration":388,"src":"1850:14:0"},"id":10,"nodeType":"InheritanceSpecifier","src":"1850:14:0"},{"baseName":{"id":11,"name":"ERC165","nodeType":"IdentifierPath","referencedDeclaration":1412,"src":"1866:6:0"},"id":12,"nodeType":"InheritanceSpecifier","src":"1866:6:0"}],"canonicalName":"AccessControl","contractDependencies":[],"contractKind":"contract","documentation":{"id":6,"nodeType":"StructuredDocumentation","src":"271:1534:0","text":" @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it."},"fullyImplemented":true,"id":315,"linearizedBaseContracts":[315,1412,1424,388,1213],"name":"AccessControl","nameLocation":"1824:13:0","nodeType":"ContractDefinition","nodes":[{"canonicalName":"AccessControl.RoleData","id":19,"members":[{"constant":false,"id":16,"mutability":"mutable","name":"members","nameLocation":"1930:7:0","nodeType":"VariableDeclaration","scope":19,"src":"1905:32:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":15,"keyType":{"id":13,"name":"address","nodeType":"ElementaryTypeName","src":"1913:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1905:24:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueType":{"id":14,"name":"bool","nodeType":"ElementaryTypeName","src":"1924:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"internal"},{"constant":false,"id":18,"mutability":"mutable","name":"adminRole","nameLocation":"1955:9:0","nodeType":"VariableDeclaration","scope":19,"src":"1947:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1947:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"name":"RoleData","nameLocation":"1886:8:0","nodeType":"StructDefinition","scope":315,"src":"1879:92:0","visibility":"public"},{"constant":false,"id":24,"mutability":"mutable","name":"_roles","nameLocation":"2014:6:0","nodeType":"VariableDeclaration","scope":315,"src":"1977:43:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"typeName":{"id":23,"keyType":{"id":20,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1985:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1977:28:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData)"},"valueType":{"id":22,"nodeType":"UserDefinedTypeName","pathNode":{"id":21,"name":"RoleData","nodeType":"IdentifierPath","referencedDeclaration":19,"src":"1996:8:0"},"referencedDeclaration":19,"src":"1996:8:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage_ptr","typeString":"struct AccessControl.RoleData"}}},"visibility":"private"},{"constant":true,"functionSelector":"a217fddf","id":27,"mutability":"constant","name":"DEFAULT_ADMIN_ROLE","nameLocation":"2051:18:0","nodeType":"VariableDeclaration","scope":315,"src":"2027:49:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":25,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2027:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"hexValue":"30783030","id":26,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2072:4:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0x00"},"visibility":"public"},{"body":{"id":37,"nodeType":"Block","src":"2495:44:0","statements":[{"expression":{"arguments":[{"id":33,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":30,"src":"2516:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":32,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":92,"src":"2505:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$__$","typeString":"function (bytes32) view"}},"id":34,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2505:16:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":35,"nodeType":"ExpressionStatement","src":"2505:16:0"},{"id":36,"nodeType":"PlaceholderStatement","src":"2531:1:0"}]},"documentation":{"id":28,"nodeType":"StructuredDocumentation","src":"2083:375:0","text":" @dev Modifier that checks that an account has a specific role. Reverts\n with a standardized message including the required role.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/\n _Available since v4.1._"},"id":38,"name":"onlyRole","nameLocation":"2472:8:0","nodeType":"ModifierDefinition","parameters":{"id":31,"nodeType":"ParameterList","parameters":[{"constant":false,"id":30,"mutability":"mutable","name":"role","nameLocation":"2489:4:0","nodeType":"VariableDeclaration","scope":38,"src":"2481:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":29,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2480:14:0"},"src":"2463:76:0","virtual":false,"visibility":"internal"},{"baseFunctions":[1411],"body":{"id":59,"nodeType":"Block","src":"2697:111:0","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":57,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":52,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":47,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2714:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":49,"name":"IAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":388,"src":"2734:14:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IAccessControl_$388_$","typeString":"type(contract IAccessControl)"}],"id":48,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2729:4:0","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2729:20:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IAccessControl_$388","typeString":"type(contract IAccessControl)"}},"id":51,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"2729:32:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"2714:47:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"arguments":[{"id":55,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":41,"src":"2789:11:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes4","typeString":"bytes4"}],"expression":{"id":53,"name":"super","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-25,"src":"2765:5:0","typeDescriptions":{"typeIdentifier":"t_type$_t_super$_AccessControl_$315_$","typeString":"type(contract super AccessControl)"}},"id":54,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"supportsInterface","nodeType":"MemberAccess","referencedDeclaration":1411,"src":"2765:23:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes4_$returns$_t_bool_$","typeString":"function (bytes4) view returns (bool)"}},"id":56,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2765:36:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2714:87:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":46,"id":58,"nodeType":"Return","src":"2707:94:0"}]},"documentation":{"id":39,"nodeType":"StructuredDocumentation","src":"2545:56:0","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":60,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"2615:17:0","nodeType":"FunctionDefinition","overrides":{"id":43,"nodeType":"OverrideSpecifier","overrides":[],"src":"2673:8:0"},"parameters":{"id":42,"nodeType":"ParameterList","parameters":[{"constant":false,"id":41,"mutability":"mutable","name":"interfaceId","nameLocation":"2640:11:0","nodeType":"VariableDeclaration","scope":60,"src":"2633:18:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":40,"name":"bytes4","nodeType":"ElementaryTypeName","src":"2633:6:0","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"2632:20:0"},"returnParameters":{"id":46,"nodeType":"ParameterList","parameters":[{"constant":false,"id":45,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":60,"src":"2691:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":44,"name":"bool","nodeType":"ElementaryTypeName","src":"2691:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2690:6:0"},"scope":315,"src":"2606:202:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[355],"body":{"id":78,"nodeType":"Block","src":"2987:53:0","statements":[{"expression":{"baseExpression":{"expression":{"baseExpression":{"id":71,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"3004:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":73,"indexExpression":{"id":72,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":63,"src":"3011:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":74,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"3004:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":76,"indexExpression":{"id":75,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":65,"src":"3025:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3004:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":70,"id":77,"nodeType":"Return","src":"2997:36:0"}]},"documentation":{"id":61,"nodeType":"StructuredDocumentation","src":"2814:76:0","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":79,"implemented":true,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"2904:7:0","nodeType":"FunctionDefinition","overrides":{"id":67,"nodeType":"OverrideSpecifier","overrides":[],"src":"2963:8:0"},"parameters":{"id":66,"nodeType":"ParameterList","parameters":[{"constant":false,"id":63,"mutability":"mutable","name":"role","nameLocation":"2920:4:0","nodeType":"VariableDeclaration","scope":79,"src":"2912:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":62,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2912:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":65,"mutability":"mutable","name":"account","nameLocation":"2934:7:0","nodeType":"VariableDeclaration","scope":79,"src":"2926:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":64,"name":"address","nodeType":"ElementaryTypeName","src":"2926:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2911:31:0"},"returnParameters":{"id":70,"nodeType":"ParameterList","parameters":[{"constant":false,"id":69,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":79,"src":"2981:4:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":68,"name":"bool","nodeType":"ElementaryTypeName","src":"2981:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2980:6:0"},"scope":315,"src":"2895:145:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":91,"nodeType":"Block","src":"3390:47:0","statements":[{"expression":{"arguments":[{"id":86,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":82,"src":"3411:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"arguments":[],"expression":{"argumentTypes":[],"id":87,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"3417:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3417:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":85,"name":"_checkRole","nodeType":"Identifier","overloadedDeclarations":[92,131],"referencedDeclaration":131,"src":"3400:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address) view"}},"id":89,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3400:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":90,"nodeType":"ExpressionStatement","src":"3400:30:0"}]},"documentation":{"id":80,"nodeType":"StructuredDocumentation","src":"3046:283:0","text":" @dev Revert with a standard message if `_msgSender()` is missing `role`.\n Overriding this function changes the behavior of the {onlyRole} modifier.\n Format of the revert message is described in {_checkRole}.\n _Available since v4.6._"},"id":92,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3343:10:0","nodeType":"FunctionDefinition","parameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"role","nameLocation":"3362:4:0","nodeType":"VariableDeclaration","scope":92,"src":"3354:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":81,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3354:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3353:14:0"},"returnParameters":{"id":84,"nodeType":"ParameterList","parameters":[],"src":"3390:0:0"},"scope":315,"src":"3334:103:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":130,"nodeType":"Block","src":"3791:406:0","statements":[{"condition":{"id":104,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3805:23:0","subExpression":{"arguments":[{"id":101,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"3814:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":102,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"3820:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":100,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3806:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":103,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3806:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":129,"nodeType":"IfStatement","src":"3801:390:0","trueBody":{"id":128,"nodeType":"Block","src":"3830:361:0","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","id":110,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3938:25:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},"value":"AccessControl: account "},{"arguments":[{"id":113,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":97,"src":"4009:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":111,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"3989:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1388_$","typeString":"type(library Strings)"}},"id":112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1387,"src":"3989:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_address_$returns$_t_string_memory_ptr_$","typeString":"function (address) pure returns (string memory)"}},"id":114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3989:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"206973206d697373696e6720726f6c6520","id":115,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4043:19:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},"value":" is missing role "},{"arguments":[{"arguments":[{"id":120,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":95,"src":"4116:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":119,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4108:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":118,"name":"uint256","nodeType":"ElementaryTypeName","src":"4108:7:0","typeDescriptions":{}}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4108:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"3332","id":122,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4123:2:0","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"}],"expression":{"id":116,"name":"Strings","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1388,"src":"4088:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Strings_$1388_$","typeString":"type(library Strings)"}},"id":117,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"toHexString","nodeType":"MemberAccess","referencedDeclaration":1367,"src":"4088:19:0","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":123,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4088:38:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","typeString":"literal_string \"AccessControl: account \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","typeString":"literal_string \" is missing role \""},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":108,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"3896:3:0","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":109,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"3896:16:0","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3896:252:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3868:6:0","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":106,"name":"string","nodeType":"ElementaryTypeName","src":"3868:6:0","typeDescriptions":{}}},"id":125,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3868:298:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":105,"name":"revert","nodeType":"Identifier","overloadedDeclarations":[-19,-19],"referencedDeclaration":-19,"src":"3844:6:0","typeDescriptions":{"typeIdentifier":"t_function_revert_pure$_t_string_memory_ptr_$returns$__$","typeString":"function (string memory) pure"}},"id":126,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3844:336:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":127,"nodeType":"ExpressionStatement","src":"3844:336:0"}]}}]},"documentation":{"id":93,"nodeType":"StructuredDocumentation","src":"3443:270:0","text":" @dev Revert with a standard message if `account` is missing `role`.\n The format of the revert reason is given by the following regular expression:\n  /^AccessControl: account (0x[0-9a-f]{40}) is missing role (0x[0-9a-f]{64})$/"},"id":131,"implemented":true,"kind":"function","modifiers":[],"name":"_checkRole","nameLocation":"3727:10:0","nodeType":"FunctionDefinition","parameters":{"id":98,"nodeType":"ParameterList","parameters":[{"constant":false,"id":95,"mutability":"mutable","name":"role","nameLocation":"3746:4:0","nodeType":"VariableDeclaration","scope":131,"src":"3738:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":94,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3738:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":97,"mutability":"mutable","name":"account","nameLocation":"3760:7:0","nodeType":"VariableDeclaration","scope":131,"src":"3752:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":96,"name":"address","nodeType":"ElementaryTypeName","src":"3752:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3737:31:0"},"returnParameters":{"id":99,"nodeType":"ParameterList","parameters":[],"src":"3791:0:0"},"scope":315,"src":"3718:479:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"baseFunctions":[363],"body":{"id":145,"nodeType":"Block","src":"4461:46:0","statements":[{"expression":{"expression":{"baseExpression":{"id":140,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"4478:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":142,"indexExpression":{"id":141,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":134,"src":"4485:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4478:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":143,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"4478:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":139,"id":144,"nodeType":"Return","src":"4471:29:0"}]},"documentation":{"id":132,"nodeType":"StructuredDocumentation","src":"4203:170:0","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."},"functionSelector":"248a9ca3","id":146,"implemented":true,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"4387:12:0","nodeType":"FunctionDefinition","overrides":{"id":136,"nodeType":"OverrideSpecifier","overrides":[],"src":"4434:8:0"},"parameters":{"id":135,"nodeType":"ParameterList","parameters":[{"constant":false,"id":134,"mutability":"mutable","name":"role","nameLocation":"4408:4:0","nodeType":"VariableDeclaration","scope":146,"src":"4400:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":133,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4400:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4399:14:0"},"returnParameters":{"id":139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":146,"src":"4452:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":137,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4452:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4451:9:0"},"scope":315,"src":"4378:129:0","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[371],"body":{"id":165,"nodeType":"Block","src":"4906:42:0","statements":[{"expression":{"arguments":[{"id":161,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4927:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":162,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":151,"src":"4933:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":160,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4916:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":163,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4916:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":164,"nodeType":"ExpressionStatement","src":"4916:25:0"}]},"documentation":{"id":147,"nodeType":"StructuredDocumentation","src":"4513:285:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."},"functionSelector":"2f2ff15d","id":166,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":156,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":149,"src":"4899:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":155,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"4886:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":157,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4886:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":158,"kind":"modifierInvocation","modifierName":{"id":154,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"4877:8:0"},"nodeType":"ModifierInvocation","src":"4877:28:0"}],"name":"grantRole","nameLocation":"4812:9:0","nodeType":"FunctionDefinition","overrides":{"id":153,"nodeType":"OverrideSpecifier","overrides":[],"src":"4868:8:0"},"parameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":149,"mutability":"mutable","name":"role","nameLocation":"4830:4:0","nodeType":"VariableDeclaration","scope":166,"src":"4822:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4822:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":151,"mutability":"mutable","name":"account","nameLocation":"4844:7:0","nodeType":"VariableDeclaration","scope":166,"src":"4836:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":150,"name":"address","nodeType":"ElementaryTypeName","src":"4836:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"4821:31:0"},"returnParameters":{"id":159,"nodeType":"ParameterList","parameters":[],"src":"4906:0:0"},"scope":315,"src":"4803:145:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[379],"body":{"id":185,"nodeType":"Block","src":"5332:43:0","statements":[{"expression":{"arguments":[{"id":181,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5354:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":182,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":171,"src":"5360:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":180,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"5342:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5342:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":184,"nodeType":"ExpressionStatement","src":"5342:26:0"}]},"documentation":{"id":167,"nodeType":"StructuredDocumentation","src":"4954:269:0","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."},"functionSelector":"d547741f","id":186,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"arguments":[{"id":176,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":169,"src":"5325:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":175,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"5312:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":177,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5312:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":178,"kind":"modifierInvocation","modifierName":{"id":174,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"5303:8:0"},"nodeType":"ModifierInvocation","src":"5303:28:0"}],"name":"revokeRole","nameLocation":"5237:10:0","nodeType":"FunctionDefinition","overrides":{"id":173,"nodeType":"OverrideSpecifier","overrides":[],"src":"5294:8:0"},"parameters":{"id":172,"nodeType":"ParameterList","parameters":[{"constant":false,"id":169,"mutability":"mutable","name":"role","nameLocation":"5256:4:0","nodeType":"VariableDeclaration","scope":186,"src":"5248:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":168,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5248:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":171,"mutability":"mutable","name":"account","nameLocation":"5270:7:0","nodeType":"VariableDeclaration","scope":186,"src":"5262:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":170,"name":"address","nodeType":"ElementaryTypeName","src":"5262:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5247:31:0"},"returnParameters":{"id":179,"nodeType":"ParameterList","parameters":[],"src":"5332:0:0"},"scope":315,"src":"5228:147:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[387],"body":{"id":208,"nodeType":"Block","src":"5989:137:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":199,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":196,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6007:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":197,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"6018:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":198,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6018:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6007:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636520726f6c657320666f722073656c66","id":200,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6032:49:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""},"value":"AccessControl: can only renounce roles for self"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","typeString":"literal_string \"AccessControl: can only renounce roles for self\""}],"id":195,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5999:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":201,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5999:83:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":202,"nodeType":"ExpressionStatement","src":"5999:83:0"},{"expression":{"arguments":[{"id":204,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":189,"src":"6105:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":205,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":191,"src":"6111:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":203,"name":"_revokeRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":314,"src":"6093:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6093:26:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":207,"nodeType":"ExpressionStatement","src":"6093:26:0"}]},"documentation":{"id":187,"nodeType":"StructuredDocumentation","src":"5381:526:0","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`.\n May emit a {RoleRevoked} event."},"functionSelector":"36568abe","id":209,"implemented":true,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"5921:12:0","nodeType":"FunctionDefinition","overrides":{"id":193,"nodeType":"OverrideSpecifier","overrides":[],"src":"5980:8:0"},"parameters":{"id":192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":189,"mutability":"mutable","name":"role","nameLocation":"5942:4:0","nodeType":"VariableDeclaration","scope":209,"src":"5934:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":188,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5934:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":191,"mutability":"mutable","name":"account","nameLocation":"5956:7:0","nodeType":"VariableDeclaration","scope":209,"src":"5948:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":190,"name":"address","nodeType":"ElementaryTypeName","src":"5948:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5933:31:0"},"returnParameters":{"id":194,"nodeType":"ParameterList","parameters":[],"src":"5989:0:0"},"scope":315,"src":"5912:214:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":222,"nodeType":"Block","src":"6879:42:0","statements":[{"expression":{"arguments":[{"id":218,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":212,"src":"6900:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":219,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":214,"src":"6906:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":217,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"6889:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":220,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6889:25:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":221,"nodeType":"ExpressionStatement","src":"6889:25:0"}]},"documentation":{"id":210,"nodeType":"StructuredDocumentation","src":"6132:674:0","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event. Note that unlike {grantRole}, this function doesn't perform any\n checks on the calling account.\n May emit a {RoleGranted} event.\n [WARNING]\n ====\n This function should only be called from the constructor when setting\n up the initial roles for the system.\n Using this function in any other way is effectively circumventing the admin\n system imposed by {AccessControl}.\n ====\n NOTE: This function is deprecated in favor of {_grantRole}."},"id":223,"implemented":true,"kind":"function","modifiers":[],"name":"_setupRole","nameLocation":"6820:10:0","nodeType":"FunctionDefinition","parameters":{"id":215,"nodeType":"ParameterList","parameters":[{"constant":false,"id":212,"mutability":"mutable","name":"role","nameLocation":"6839:4:0","nodeType":"VariableDeclaration","scope":223,"src":"6831:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":211,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6831:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":214,"mutability":"mutable","name":"account","nameLocation":"6853:7:0","nodeType":"VariableDeclaration","scope":223,"src":"6845:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":213,"name":"address","nodeType":"ElementaryTypeName","src":"6845:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6830:31:0"},"returnParameters":{"id":216,"nodeType":"ParameterList","parameters":[],"src":"6879:0:0"},"scope":315,"src":"6811:110:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":250,"nodeType":"Block","src":"7119:174:0","statements":[{"assignments":[232],"declarations":[{"constant":false,"id":232,"mutability":"mutable","name":"previousAdminRole","nameLocation":"7137:17:0","nodeType":"VariableDeclaration","scope":250,"src":"7129:25:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":231,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7129:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":236,"initialValue":{"arguments":[{"id":234,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7170:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":233,"name":"getRoleAdmin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":146,"src":"7157:12:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$","typeString":"function (bytes32) view returns (bytes32)"}},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7157:18:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"7129:46:0"},{"expression":{"id":242,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"id":237,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7185:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":239,"indexExpression":{"id":238,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7192:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7185:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":240,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"adminRole","nodeType":"MemberAccess","referencedDeclaration":18,"src":"7185:22:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":241,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7210:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"7185:34:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":243,"nodeType":"ExpressionStatement","src":"7185:34:0"},{"eventCall":{"arguments":[{"id":245,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":226,"src":"7251:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":246,"name":"previousAdminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":232,"src":"7257:17:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":247,"name":"adminRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":228,"src":"7276:9:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":244,"name":"RoleAdminChanged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":327,"src":"7234:16:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$","typeString":"function (bytes32,bytes32,bytes32)"}},"id":248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7234:52:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":249,"nodeType":"EmitStatement","src":"7229:57:0"}]},"documentation":{"id":224,"nodeType":"StructuredDocumentation","src":"6927:114:0","text":" @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."},"id":251,"implemented":true,"kind":"function","modifiers":[],"name":"_setRoleAdmin","nameLocation":"7055:13:0","nodeType":"FunctionDefinition","parameters":{"id":229,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"role","nameLocation":"7077:4:0","nodeType":"VariableDeclaration","scope":251,"src":"7069:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7069:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"adminRole","nameLocation":"7091:9:0","nodeType":"VariableDeclaration","scope":251,"src":"7083:17:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":227,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7083:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7068:33:0"},"returnParameters":{"id":230,"nodeType":"ParameterList","parameters":[],"src":"7119:0:0"},"scope":315,"src":"7046:247:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":282,"nodeType":"Block","src":"7529:165:0","statements":[{"condition":{"id":263,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"7543:23:0","subExpression":{"arguments":[{"id":260,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7552:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":261,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7558:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":259,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7544:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7544:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":281,"nodeType":"IfStatement","src":"7539:149:0","trueBody":{"id":280,"nodeType":"Block","src":"7568:120:0","statements":[{"expression":{"id":271,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":264,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7582:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":266,"indexExpression":{"id":265,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7589:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7582:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":267,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7582:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":269,"indexExpression":{"id":268,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7603:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7582:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":270,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7614:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"7582:36:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":272,"nodeType":"ExpressionStatement","src":"7582:36:0"},{"eventCall":{"arguments":[{"id":274,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":254,"src":"7649:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":275,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":256,"src":"7655:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":276,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"7664:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7664:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":273,"name":"RoleGranted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":336,"src":"7637:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7637:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":279,"nodeType":"EmitStatement","src":"7632:45:0"}]}}]},"documentation":{"id":252,"nodeType":"StructuredDocumentation","src":"7299:157:0","text":" @dev Grants `role` to `account`.\n Internal function without access restriction.\n May emit a {RoleGranted} event."},"id":283,"implemented":true,"kind":"function","modifiers":[],"name":"_grantRole","nameLocation":"7470:10:0","nodeType":"FunctionDefinition","parameters":{"id":257,"nodeType":"ParameterList","parameters":[{"constant":false,"id":254,"mutability":"mutable","name":"role","nameLocation":"7489:4:0","nodeType":"VariableDeclaration","scope":283,"src":"7481:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7481:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":256,"mutability":"mutable","name":"account","nameLocation":"7503:7:0","nodeType":"VariableDeclaration","scope":283,"src":"7495:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":255,"name":"address","nodeType":"ElementaryTypeName","src":"7495:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7480:31:0"},"returnParameters":{"id":258,"nodeType":"ParameterList","parameters":[],"src":"7529:0:0"},"scope":315,"src":"7461:233:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":313,"nodeType":"Block","src":"7934:165:0","statements":[{"condition":{"arguments":[{"id":292,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"7956:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":293,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"7962:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":291,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"7948:7:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":294,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7948:22:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":312,"nodeType":"IfStatement","src":"7944:149:0","trueBody":{"id":311,"nodeType":"Block","src":"7972:121:0","statements":[{"expression":{"id":302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"baseExpression":{"id":295,"name":"_roles","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":24,"src":"7986:6:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_struct$_RoleData_$19_storage_$","typeString":"mapping(bytes32 => struct AccessControl.RoleData storage ref)"}},"id":297,"indexExpression":{"id":296,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"7993:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7986:12:0","typeDescriptions":{"typeIdentifier":"t_struct$_RoleData_$19_storage","typeString":"struct AccessControl.RoleData storage ref"}},"id":298,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"members","nodeType":"MemberAccess","referencedDeclaration":16,"src":"7986:20:0","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":300,"indexExpression":{"id":299,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8007:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7986:29:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":301,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"8018:5:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"7986:37:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":303,"nodeType":"ExpressionStatement","src":"7986:37:0"},{"eventCall":{"arguments":[{"id":305,"name":"role","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":286,"src":"8054:4:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":306,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"8060:7:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"id":307,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"8069:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8069:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":304,"name":"RoleRevoked","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":345,"src":"8042:11:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$","typeString":"function (bytes32,address,address)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8042:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":310,"nodeType":"EmitStatement","src":"8037:45:0"}]}}]},"documentation":{"id":284,"nodeType":"StructuredDocumentation","src":"7700:160:0","text":" @dev Revokes `role` from `account`.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."},"id":314,"implemented":true,"kind":"function","modifiers":[],"name":"_revokeRole","nameLocation":"7874:11:0","nodeType":"FunctionDefinition","parameters":{"id":289,"nodeType":"ParameterList","parameters":[{"constant":false,"id":286,"mutability":"mutable","name":"role","nameLocation":"7894:4:0","nodeType":"VariableDeclaration","scope":314,"src":"7886:12:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":285,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7886:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":288,"mutability":"mutable","name":"account","nameLocation":"7908:7:0","nodeType":"VariableDeclaration","scope":314,"src":"7900:15:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":287,"name":"address","nodeType":"ElementaryTypeName","src":"7900:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7885:31:0"},"returnParameters":{"id":290,"nodeType":"ParameterList","parameters":[],"src":"7934:0:0"},"scope":315,"src":"7865:234:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":316,"src":"1806:6295:0","usedErrors":[]}],"src":"108:7994:0"},"id":0},"@openzeppelin/contracts/access/IAccessControl.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/IAccessControl.sol","exportedSymbols":{"IAccessControl":[388]},"id":389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":317,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"94:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IAccessControl","contractDependencies":[],"contractKind":"interface","documentation":{"id":318,"nodeType":"StructuredDocumentation","src":"119:89:1","text":" @dev External interface of AccessControl declared to support ERC165 detection."},"fullyImplemented":false,"id":388,"linearizedBaseContracts":[388],"name":"IAccessControl","nameLocation":"219:14:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":319,"nodeType":"StructuredDocumentation","src":"240:292:1","text":" @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this.\n _Available since v3.1._"},"id":327,"name":"RoleAdminChanged","nameLocation":"543:16:1","nodeType":"EventDefinition","parameters":{"id":326,"nodeType":"ParameterList","parameters":[{"constant":false,"id":321,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"576:4:1","nodeType":"VariableDeclaration","scope":327,"src":"560:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":320,"name":"bytes32","nodeType":"ElementaryTypeName","src":"560:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":323,"indexed":true,"mutability":"mutable","name":"previousAdminRole","nameLocation":"598:17:1","nodeType":"VariableDeclaration","scope":327,"src":"582:33:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":322,"name":"bytes32","nodeType":"ElementaryTypeName","src":"582:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":325,"indexed":true,"mutability":"mutable","name":"newAdminRole","nameLocation":"633:12:1","nodeType":"VariableDeclaration","scope":327,"src":"617:28:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":324,"name":"bytes32","nodeType":"ElementaryTypeName","src":"617:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"559:87:1"},"src":"537:110:1"},{"anonymous":false,"documentation":{"id":328,"nodeType":"StructuredDocumentation","src":"653:212:1","text":" @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."},"id":336,"name":"RoleGranted","nameLocation":"876:11:1","nodeType":"EventDefinition","parameters":{"id":335,"nodeType":"ParameterList","parameters":[{"constant":false,"id":330,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"904:4:1","nodeType":"VariableDeclaration","scope":336,"src":"888:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":329,"name":"bytes32","nodeType":"ElementaryTypeName","src":"888:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":332,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"926:7:1","nodeType":"VariableDeclaration","scope":336,"src":"910:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":331,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"951:6:1","nodeType":"VariableDeclaration","scope":336,"src":"935:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"887:71:1"},"src":"870:89:1"},{"anonymous":false,"documentation":{"id":337,"nodeType":"StructuredDocumentation","src":"965:275:1","text":" @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"},"id":345,"name":"RoleRevoked","nameLocation":"1251:11:1","nodeType":"EventDefinition","parameters":{"id":344,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"indexed":true,"mutability":"mutable","name":"role","nameLocation":"1279:4:1","nodeType":"VariableDeclaration","scope":345,"src":"1263:20:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":338,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1263:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":341,"indexed":true,"mutability":"mutable","name":"account","nameLocation":"1301:7:1","nodeType":"VariableDeclaration","scope":345,"src":"1285:23:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1285:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":343,"indexed":true,"mutability":"mutable","name":"sender","nameLocation":"1326:6:1","nodeType":"VariableDeclaration","scope":345,"src":"1310:22:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":342,"name":"address","nodeType":"ElementaryTypeName","src":"1310:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1262:71:1"},"src":"1245:89:1"},{"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"1340:76:1","text":" @dev Returns `true` if `account` has been granted `role`."},"functionSelector":"91d14854","id":355,"implemented":false,"kind":"function","modifiers":[],"name":"hasRole","nameLocation":"1430:7:1","nodeType":"FunctionDefinition","parameters":{"id":351,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"role","nameLocation":"1446:4:1","nodeType":"VariableDeclaration","scope":355,"src":"1438:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1438:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":350,"mutability":"mutable","name":"account","nameLocation":"1460:7:1","nodeType":"VariableDeclaration","scope":355,"src":"1452:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":349,"name":"address","nodeType":"ElementaryTypeName","src":"1452:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1437:31:1"},"returnParameters":{"id":354,"nodeType":"ParameterList","parameters":[{"constant":false,"id":353,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":355,"src":"1492:4:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":352,"name":"bool","nodeType":"ElementaryTypeName","src":"1492:4:1","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1491:6:1"},"scope":388,"src":"1421:77:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":356,"nodeType":"StructuredDocumentation","src":"1504:184:1","text":" @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."},"functionSelector":"248a9ca3","id":363,"implemented":false,"kind":"function","modifiers":[],"name":"getRoleAdmin","nameLocation":"1702:12:1","nodeType":"FunctionDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":358,"mutability":"mutable","name":"role","nameLocation":"1723:4:1","nodeType":"VariableDeclaration","scope":363,"src":"1715:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":357,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1715:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1714:14:1"},"returnParameters":{"id":362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":361,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":363,"src":"1752:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":360,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1752:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1751:9:1"},"scope":388,"src":"1693:68:1","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":364,"nodeType":"StructuredDocumentation","src":"1767:239:1","text":" @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"2f2ff15d","id":371,"implemented":false,"kind":"function","modifiers":[],"name":"grantRole","nameLocation":"2020:9:1","nodeType":"FunctionDefinition","parameters":{"id":369,"nodeType":"ParameterList","parameters":[{"constant":false,"id":366,"mutability":"mutable","name":"role","nameLocation":"2038:4:1","nodeType":"VariableDeclaration","scope":371,"src":"2030:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":365,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2030:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":368,"mutability":"mutable","name":"account","nameLocation":"2052:7:1","nodeType":"VariableDeclaration","scope":371,"src":"2044:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":367,"name":"address","nodeType":"ElementaryTypeName","src":"2044:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2029:31:1"},"returnParameters":{"id":370,"nodeType":"ParameterList","parameters":[],"src":"2069:0:1"},"scope":388,"src":"2011:59:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":372,"nodeType":"StructuredDocumentation","src":"2076:223:1","text":" @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."},"functionSelector":"d547741f","id":379,"implemented":false,"kind":"function","modifiers":[],"name":"revokeRole","nameLocation":"2313:10:1","nodeType":"FunctionDefinition","parameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":374,"mutability":"mutable","name":"role","nameLocation":"2332:4:1","nodeType":"VariableDeclaration","scope":379,"src":"2324:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":373,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2324:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":376,"mutability":"mutable","name":"account","nameLocation":"2346:7:1","nodeType":"VariableDeclaration","scope":379,"src":"2338:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2338:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2323:31:1"},"returnParameters":{"id":378,"nodeType":"ParameterList","parameters":[],"src":"2363:0:1"},"scope":388,"src":"2304:60:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":380,"nodeType":"StructuredDocumentation","src":"2370:480:1","text":" @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `account`."},"functionSelector":"36568abe","id":387,"implemented":false,"kind":"function","modifiers":[],"name":"renounceRole","nameLocation":"2864:12:1","nodeType":"FunctionDefinition","parameters":{"id":385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":382,"mutability":"mutable","name":"role","nameLocation":"2885:4:1","nodeType":"VariableDeclaration","scope":387,"src":"2877:12:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":381,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2877:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":384,"mutability":"mutable","name":"account","nameLocation":"2899:7:1","nodeType":"VariableDeclaration","scope":387,"src":"2891:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":383,"name":"address","nodeType":"ElementaryTypeName","src":"2891:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2876:31:1"},"returnParameters":{"id":386,"nodeType":"ParameterList","parameters":[],"src":"2916:0:1"},"scope":388,"src":"2855:62:1","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":389,"src":"209:2710:1","usedErrors":[]}],"src":"94:2826:1"},"id":1},"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[1213],"Ownable":[501]},"id":502,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:2"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":502,"sourceUnit":1214,"src":"127:30:2","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":393,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"683:7:2"},"id":394,"nodeType":"InheritanceSpecifier","src":"683:7:2"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":392,"nodeType":"StructuredDocumentation","src":"159:494:2","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":501,"linearizedBaseContracts":[501,1213],"name":"Ownable","nameLocation":"672:7:2","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":396,"mutability":"mutable","name":"_owner","nameLocation":"713:6:2","nodeType":"VariableDeclaration","scope":501,"src":"697:22:2","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":395,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"id":402,"name":"OwnershipTransferred","nameLocation":"732:20:2","nodeType":"EventDefinition","parameters":{"id":401,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:2","nodeType":"VariableDeclaration","scope":402,"src":"753:29:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":397,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":400,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:2","nodeType":"VariableDeclaration","scope":402,"src":"784:24:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:2"},"src":"726:84:2"},{"body":{"id":411,"nodeType":"Block","src":"926:49:2","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":407,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"955:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"955:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":406,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"936:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"936:32:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":410,"nodeType":"ExpressionStatement","src":"936:32:2"}]},"documentation":{"id":403,"nodeType":"StructuredDocumentation","src":"816:91:2","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":412,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"923:2:2"},"returnParameters":{"id":405,"nodeType":"ParameterList","parameters":[],"src":"926:0:2"},"scope":501,"src":"912:63:2","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":419,"nodeType":"Block","src":"1084:41:2","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":415,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":443,"src":"1094:11:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":416,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1094:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":417,"nodeType":"ExpressionStatement","src":"1094:13:2"},{"id":418,"nodeType":"PlaceholderStatement","src":"1117:1:2"}]},"documentation":{"id":413,"nodeType":"StructuredDocumentation","src":"981:77:2","text":" @dev Throws if called by any account other than the owner."},"id":420,"name":"onlyOwner","nameLocation":"1072:9:2","nodeType":"ModifierDefinition","parameters":{"id":414,"nodeType":"ParameterList","parameters":[],"src":"1081:2:2"},"src":"1063:62:2","virtual":false,"visibility":"internal"},{"body":{"id":428,"nodeType":"Block","src":"1256:30:2","statements":[{"expression":{"id":426,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"1273:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":425,"id":427,"nodeType":"Return","src":"1266:13:2"}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"1131:65:2","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":429,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:2","nodeType":"FunctionDefinition","parameters":{"id":422,"nodeType":"ParameterList","parameters":[],"src":"1215:2:2"},"returnParameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":429,"src":"1247:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":423,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:2"},"scope":501,"src":"1201:85:2","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":442,"nodeType":"Block","src":"1404:85:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":438,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":434,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"1422:5:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1422:7:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":436,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"1433:10:2","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1433:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":439,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":433,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1414:68:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":441,"nodeType":"ExpressionStatement","src":"1414:68:2"}]},"documentation":{"id":430,"nodeType":"StructuredDocumentation","src":"1292:62:2","text":" @dev Throws if the sender is not the owner."},"id":443,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:2","nodeType":"FunctionDefinition","parameters":{"id":431,"nodeType":"ParameterList","parameters":[],"src":"1379:2:2"},"returnParameters":{"id":432,"nodeType":"ParameterList","parameters":[],"src":"1404:0:2"},"scope":501,"src":"1359:130:2","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":456,"nodeType":"Block","src":"1885:47:2","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":452,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":451,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1914:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":450,"name":"address","nodeType":"ElementaryTypeName","src":"1914:7:2","typeDescriptions":{}}},"id":453,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1914:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":449,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"1895:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1895:30:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":455,"nodeType":"ExpressionStatement","src":"1895:30:2"}]},"documentation":{"id":444,"nodeType":"StructuredDocumentation","src":"1495:331:2","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."},"functionSelector":"715018a6","id":457,"implemented":true,"kind":"function","modifiers":[{"id":447,"kind":"modifierInvocation","modifierName":{"id":446,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"1875:9:2"},"nodeType":"ModifierInvocation","src":"1875:9:2"}],"name":"renounceOwnership","nameLocation":"1840:17:2","nodeType":"FunctionDefinition","parameters":{"id":445,"nodeType":"ParameterList","parameters":[],"src":"1857:2:2"},"returnParameters":{"id":448,"nodeType":"ParameterList","parameters":[],"src":"1885:0:2"},"scope":501,"src":"1831:101:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":479,"nodeType":"Block","src":"2151:128:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":466,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2169:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":469,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2189:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":468,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2181:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":467,"name":"address","nodeType":"ElementaryTypeName","src":"2181:7:2","typeDescriptions":{}}},"id":470,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:10:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2169:22:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":472,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2193:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":465,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2161:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2161:73:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":474,"nodeType":"ExpressionStatement","src":"2161:73:2"},{"expression":{"arguments":[{"id":476,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":460,"src":"2263:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":475,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":500,"src":"2244:18:2","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":477,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2244:28:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":478,"nodeType":"ExpressionStatement","src":"2244:28:2"}]},"documentation":{"id":458,"nodeType":"StructuredDocumentation","src":"1938:138:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":480,"implemented":true,"kind":"function","modifiers":[{"id":463,"kind":"modifierInvocation","modifierName":{"id":462,"name":"onlyOwner","nodeType":"IdentifierPath","referencedDeclaration":420,"src":"2141:9:2"},"nodeType":"ModifierInvocation","src":"2141:9:2"}],"name":"transferOwnership","nameLocation":"2090:17:2","nodeType":"FunctionDefinition","parameters":{"id":461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":460,"mutability":"mutable","name":"newOwner","nameLocation":"2116:8:2","nodeType":"VariableDeclaration","scope":480,"src":"2108:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":459,"name":"address","nodeType":"ElementaryTypeName","src":"2108:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2107:18:2"},"returnParameters":{"id":464,"nodeType":"ParameterList","parameters":[],"src":"2151:0:2"},"scope":501,"src":"2081:198:2","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":499,"nodeType":"Block","src":"2496:124:2","statements":[{"assignments":[487],"declarations":[{"constant":false,"id":487,"mutability":"mutable","name":"oldOwner","nameLocation":"2514:8:2","nodeType":"VariableDeclaration","scope":499,"src":"2506:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":486,"name":"address","nodeType":"ElementaryTypeName","src":"2506:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":489,"initialValue":{"id":488,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2525:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2506:25:2"},{"expression":{"id":492,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":490,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":396,"src":"2541:6:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":491,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2550:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2541:17:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":493,"nodeType":"ExpressionStatement","src":"2541:17:2"},{"eventCall":{"arguments":[{"id":495,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"2594:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":496,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":483,"src":"2604:8:2","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":494,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"2573:20:2","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2573:40:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":498,"nodeType":"EmitStatement","src":"2568:45:2"}]},"documentation":{"id":481,"nodeType":"StructuredDocumentation","src":"2285:143:2","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":500,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2442:18:2","nodeType":"FunctionDefinition","parameters":{"id":484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":483,"mutability":"mutable","name":"newOwner","nameLocation":"2469:8:2","nodeType":"VariableDeclaration","scope":500,"src":"2461:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":482,"name":"address","nodeType":"ElementaryTypeName","src":"2461:7:2","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2460:18:2"},"returnParameters":{"id":485,"nodeType":"ParameterList","parameters":[],"src":"2496:0:2"},"scope":501,"src":"2433:187:2","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":502,"src":"654:1968:2","usedErrors":[]}],"src":"102:2521:2"},"id":2},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","exportedSymbols":{"Context":[1213],"ERC20":[1088],"IERC20":[1166],"IERC20Metadata":[1191]},"id":1089,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":503,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"105:23:3"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"./IERC20.sol","id":504,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1089,"sourceUnit":1167,"src":"130:22:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","file":"./extensions/IERC20Metadata.sol","id":505,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1089,"sourceUnit":1192,"src":"153:41:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../../utils/Context.sol","id":506,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1089,"sourceUnit":1214,"src":"195:33:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":508,"name":"Context","nodeType":"IdentifierPath","referencedDeclaration":1213,"src":"1419:7:3"},"id":509,"nodeType":"InheritanceSpecifier","src":"1419:7:3"},{"baseName":{"id":510,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"1428:6:3"},"id":511,"nodeType":"InheritanceSpecifier","src":"1428:6:3"},{"baseName":{"id":512,"name":"IERC20Metadata","nodeType":"IdentifierPath","referencedDeclaration":1191,"src":"1436:14:3"},"id":513,"nodeType":"InheritanceSpecifier","src":"1436:14:3"}],"canonicalName":"ERC20","contractDependencies":[],"contractKind":"contract","documentation":{"id":507,"nodeType":"StructuredDocumentation","src":"230:1170:3","text":" @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."},"fullyImplemented":true,"id":1088,"linearizedBaseContracts":[1088,1191,1166,1213],"name":"ERC20","nameLocation":"1410:5:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":517,"mutability":"mutable","name":"_balances","nameLocation":"1493:9:3","nodeType":"VariableDeclaration","scope":1088,"src":"1457:45:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":516,"keyType":{"id":514,"name":"address","nodeType":"ElementaryTypeName","src":"1465:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1457:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":515,"name":"uint256","nodeType":"ElementaryTypeName","src":"1476:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"private"},{"constant":false,"id":523,"mutability":"mutable","name":"_allowances","nameLocation":"1565:11:3","nodeType":"VariableDeclaration","scope":1088,"src":"1509:67:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"typeName":{"id":522,"keyType":{"id":518,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1509:47:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"},"valueType":{"id":521,"keyType":{"id":519,"name":"address","nodeType":"ElementaryTypeName","src":"1536:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1528:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueType":{"id":520,"name":"uint256","nodeType":"ElementaryTypeName","src":"1547:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}}},"visibility":"private"},{"constant":false,"id":525,"mutability":"mutable","name":"_totalSupply","nameLocation":"1599:12:3","nodeType":"VariableDeclaration","scope":1088,"src":"1583:28:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1583:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"constant":false,"id":527,"mutability":"mutable","name":"_name","nameLocation":"1633:5:3","nodeType":"VariableDeclaration","scope":1088,"src":"1618:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":526,"name":"string","nodeType":"ElementaryTypeName","src":"1618:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"constant":false,"id":529,"mutability":"mutable","name":"_symbol","nameLocation":"1659:7:3","nodeType":"VariableDeclaration","scope":1088,"src":"1644:22:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":528,"name":"string","nodeType":"ElementaryTypeName","src":"1644:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":545,"nodeType":"Block","src":"2032:57:3","statements":[{"expression":{"id":539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":537,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2042:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":538,"name":"name_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":532,"src":"2050:5:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2042:13:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":540,"nodeType":"ExpressionStatement","src":"2042:13:3"},{"expression":{"id":543,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":541,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"2065:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":542,"name":"symbol_","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":534,"src":"2075:7:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"2065:17:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":544,"nodeType":"ExpressionStatement","src":"2065:17:3"}]},"documentation":{"id":530,"nodeType":"StructuredDocumentation","src":"1673:298:3","text":" @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."},"id":546,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":535,"nodeType":"ParameterList","parameters":[{"constant":false,"id":532,"mutability":"mutable","name":"name_","nameLocation":"2002:5:3","nodeType":"VariableDeclaration","scope":546,"src":"1988:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":531,"name":"string","nodeType":"ElementaryTypeName","src":"1988:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":534,"mutability":"mutable","name":"symbol_","nameLocation":"2023:7:3","nodeType":"VariableDeclaration","scope":546,"src":"2009:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":533,"name":"string","nodeType":"ElementaryTypeName","src":"2009:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1987:44:3"},"returnParameters":{"id":536,"nodeType":"ParameterList","parameters":[],"src":"2032:0:3"},"scope":1088,"src":"1976:113:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"baseFunctions":[1178],"body":{"id":555,"nodeType":"Block","src":"2223:29:3","statements":[{"expression":{"id":553,"name":"_name","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":527,"src":"2240:5:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":552,"id":554,"nodeType":"Return","src":"2233:12:3"}]},"documentation":{"id":547,"nodeType":"StructuredDocumentation","src":"2095:54:3","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":556,"implemented":true,"kind":"function","modifiers":[],"name":"name","nameLocation":"2163:4:3","nodeType":"FunctionDefinition","overrides":{"id":549,"nodeType":"OverrideSpecifier","overrides":[],"src":"2190:8:3"},"parameters":{"id":548,"nodeType":"ParameterList","parameters":[],"src":"2167:2:3"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":556,"src":"2208:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":550,"name":"string","nodeType":"ElementaryTypeName","src":"2208:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2207:15:3"},"scope":1088,"src":"2154:98:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1184],"body":{"id":565,"nodeType":"Block","src":"2436:31:3","statements":[{"expression":{"id":563,"name":"_symbol","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":529,"src":"2453:7:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":562,"id":564,"nodeType":"Return","src":"2446:14:3"}]},"documentation":{"id":557,"nodeType":"StructuredDocumentation","src":"2258:102:3","text":" @dev Returns the symbol of the token, usually a shorter version of the\n name."},"functionSelector":"95d89b41","id":566,"implemented":true,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"2374:6:3","nodeType":"FunctionDefinition","overrides":{"id":559,"nodeType":"OverrideSpecifier","overrides":[],"src":"2403:8:3"},"parameters":{"id":558,"nodeType":"ParameterList","parameters":[],"src":"2380:2:3"},"returnParameters":{"id":562,"nodeType":"ParameterList","parameters":[{"constant":false,"id":561,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":566,"src":"2421:13:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":560,"name":"string","nodeType":"ElementaryTypeName","src":"2421:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2420:15:3"},"scope":1088,"src":"2365:102:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1190],"body":{"id":575,"nodeType":"Block","src":"3156:26:3","statements":[{"expression":{"hexValue":"3138","id":573,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3173:2:3","typeDescriptions":{"typeIdentifier":"t_rational_18_by_1","typeString":"int_const 18"},"value":"18"},"functionReturnParameters":572,"id":574,"nodeType":"Return","src":"3166:9:3"}]},"documentation":{"id":567,"nodeType":"StructuredDocumentation","src":"2473:613:3","text":" @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."},"functionSelector":"313ce567","id":576,"implemented":true,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"3100:8:3","nodeType":"FunctionDefinition","overrides":{"id":569,"nodeType":"OverrideSpecifier","overrides":[],"src":"3131:8:3"},"parameters":{"id":568,"nodeType":"ParameterList","parameters":[],"src":"3108:2:3"},"returnParameters":{"id":572,"nodeType":"ParameterList","parameters":[{"constant":false,"id":571,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":576,"src":"3149:5:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":570,"name":"uint8","nodeType":"ElementaryTypeName","src":"3149:5:3","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"3148:7:3"},"scope":1088,"src":"3091:91:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1115],"body":{"id":585,"nodeType":"Block","src":"3312:36:3","statements":[{"expression":{"id":583,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"3329:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":582,"id":584,"nodeType":"Return","src":"3322:19:3"}]},"documentation":{"id":577,"nodeType":"StructuredDocumentation","src":"3188:49:3","text":" @dev See {IERC20-totalSupply}."},"functionSelector":"18160ddd","id":586,"implemented":true,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"3251:11:3","nodeType":"FunctionDefinition","overrides":{"id":579,"nodeType":"OverrideSpecifier","overrides":[],"src":"3285:8:3"},"parameters":{"id":578,"nodeType":"ParameterList","parameters":[],"src":"3262:2:3"},"returnParameters":{"id":582,"nodeType":"ParameterList","parameters":[{"constant":false,"id":581,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":586,"src":"3303:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":580,"name":"uint256","nodeType":"ElementaryTypeName","src":"3303:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3302:9:3"},"scope":1088,"src":"3242:106:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1123],"body":{"id":599,"nodeType":"Block","src":"3489:42:3","statements":[{"expression":{"baseExpression":{"id":595,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"3506:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":597,"indexExpression":{"id":596,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":589,"src":"3516:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3506:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":594,"id":598,"nodeType":"Return","src":"3499:25:3"}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"3354:47:3","text":" @dev See {IERC20-balanceOf}."},"functionSelector":"70a08231","id":600,"implemented":true,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"3415:9:3","nodeType":"FunctionDefinition","overrides":{"id":591,"nodeType":"OverrideSpecifier","overrides":[],"src":"3462:8:3"},"parameters":{"id":590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":589,"mutability":"mutable","name":"account","nameLocation":"3433:7:3","nodeType":"VariableDeclaration","scope":600,"src":"3425:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"3425:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3424:17:3"},"returnParameters":{"id":594,"nodeType":"ParameterList","parameters":[{"constant":false,"id":593,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":600,"src":"3480:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":592,"name":"uint256","nodeType":"ElementaryTypeName","src":"3480:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3479:9:3"},"scope":1088,"src":"3406:125:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1133],"body":{"id":624,"nodeType":"Block","src":"3812:104:3","statements":[{"assignments":[612],"declarations":[{"constant":false,"id":612,"mutability":"mutable","name":"owner","nameLocation":"3830:5:3","nodeType":"VariableDeclaration","scope":624,"src":"3822:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":611,"name":"address","nodeType":"ElementaryTypeName","src":"3822:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":615,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":613,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"3838:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3838:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"3822:28:3"},{"expression":{"arguments":[{"id":617,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":612,"src":"3870:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":618,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":603,"src":"3877:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":619,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"3881:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":616,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"3860:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3860:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":621,"nodeType":"ExpressionStatement","src":"3860:28:3"},{"expression":{"hexValue":"74727565","id":622,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3905:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":610,"id":623,"nodeType":"Return","src":"3898:11:3"}]},"documentation":{"id":601,"nodeType":"StructuredDocumentation","src":"3537:185:3","text":" @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."},"functionSelector":"a9059cbb","id":625,"implemented":true,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"3736:8:3","nodeType":"FunctionDefinition","overrides":{"id":607,"nodeType":"OverrideSpecifier","overrides":[],"src":"3788:8:3"},"parameters":{"id":606,"nodeType":"ParameterList","parameters":[{"constant":false,"id":603,"mutability":"mutable","name":"to","nameLocation":"3753:2:3","nodeType":"VariableDeclaration","scope":625,"src":"3745:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":602,"name":"address","nodeType":"ElementaryTypeName","src":"3745:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"amount","nameLocation":"3765:6:3","nodeType":"VariableDeclaration","scope":625,"src":"3757:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":604,"name":"uint256","nodeType":"ElementaryTypeName","src":"3757:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3744:28:3"},"returnParameters":{"id":610,"nodeType":"ParameterList","parameters":[{"constant":false,"id":609,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":625,"src":"3806:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":608,"name":"bool","nodeType":"ElementaryTypeName","src":"3806:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3805:6:3"},"scope":1088,"src":"3727:189:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1143],"body":{"id":642,"nodeType":"Block","src":"4072:51:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":636,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"4089:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":638,"indexExpression":{"id":637,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":628,"src":"4101:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":640,"indexExpression":{"id":639,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":630,"src":"4108:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4089:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":635,"id":641,"nodeType":"Return","src":"4082:34:3"}]},"documentation":{"id":626,"nodeType":"StructuredDocumentation","src":"3922:47:3","text":" @dev See {IERC20-allowance}."},"functionSelector":"dd62ed3e","id":643,"implemented":true,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"3983:9:3","nodeType":"FunctionDefinition","overrides":{"id":632,"nodeType":"OverrideSpecifier","overrides":[],"src":"4045:8:3"},"parameters":{"id":631,"nodeType":"ParameterList","parameters":[{"constant":false,"id":628,"mutability":"mutable","name":"owner","nameLocation":"4001:5:3","nodeType":"VariableDeclaration","scope":643,"src":"3993:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":627,"name":"address","nodeType":"ElementaryTypeName","src":"3993:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":630,"mutability":"mutable","name":"spender","nameLocation":"4016:7:3","nodeType":"VariableDeclaration","scope":643,"src":"4008:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":629,"name":"address","nodeType":"ElementaryTypeName","src":"4008:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"3992:32:3"},"returnParameters":{"id":635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":634,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":643,"src":"4063:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":633,"name":"uint256","nodeType":"ElementaryTypeName","src":"4063:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4062:9:3"},"scope":1088,"src":"3974:149:3","stateMutability":"view","virtual":true,"visibility":"public"},{"baseFunctions":[1153],"body":{"id":667,"nodeType":"Block","src":"4520:108:3","statements":[{"assignments":[655],"declarations":[{"constant":false,"id":655,"mutability":"mutable","name":"owner","nameLocation":"4538:5:3","nodeType":"VariableDeclaration","scope":667,"src":"4530:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":654,"name":"address","nodeType":"ElementaryTypeName","src":"4530:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":658,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":656,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"4546:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4546:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"4530:28:3"},{"expression":{"arguments":[{"id":660,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":655,"src":"4577:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":661,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":646,"src":"4584:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":662,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"4593:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":659,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"4568:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4568:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":664,"nodeType":"ExpressionStatement","src":"4568:32:3"},{"expression":{"hexValue":"74727565","id":665,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4617:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":653,"id":666,"nodeType":"Return","src":"4610:11:3"}]},"documentation":{"id":644,"nodeType":"StructuredDocumentation","src":"4129:297:3","text":" @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"095ea7b3","id":668,"implemented":true,"kind":"function","modifiers":[],"name":"approve","nameLocation":"4440:7:3","nodeType":"FunctionDefinition","overrides":{"id":650,"nodeType":"OverrideSpecifier","overrides":[],"src":"4496:8:3"},"parameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":646,"mutability":"mutable","name":"spender","nameLocation":"4456:7:3","nodeType":"VariableDeclaration","scope":668,"src":"4448:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":645,"name":"address","nodeType":"ElementaryTypeName","src":"4448:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":648,"mutability":"mutable","name":"amount","nameLocation":"4473:6:3","nodeType":"VariableDeclaration","scope":668,"src":"4465:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"4465:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4447:33:3"},"returnParameters":{"id":653,"nodeType":"ParameterList","parameters":[{"constant":false,"id":652,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":668,"src":"4514:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":651,"name":"bool","nodeType":"ElementaryTypeName","src":"4514:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4513:6:3"},"scope":1088,"src":"4431:197:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"baseFunctions":[1165],"body":{"id":700,"nodeType":"Block","src":"5323:153:3","statements":[{"assignments":[682],"declarations":[{"constant":false,"id":682,"mutability":"mutable","name":"spender","nameLocation":"5341:7:3","nodeType":"VariableDeclaration","scope":700,"src":"5333:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":681,"name":"address","nodeType":"ElementaryTypeName","src":"5333:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":685,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":683,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"5351:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5351:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5333:30:3"},{"expression":{"arguments":[{"id":687,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"5389:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":688,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5395:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":689,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"5404:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":686,"name":"_spendAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1065,"src":"5373:15:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5373:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":691,"nodeType":"ExpressionStatement","src":"5373:38:3"},{"expression":{"arguments":[{"id":693,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":671,"src":"5431:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":694,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"5437:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":695,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"5441:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":692,"name":"_transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"5421:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":696,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5421:27:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":697,"nodeType":"ExpressionStatement","src":"5421:27:3"},{"expression":{"hexValue":"74727565","id":698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5465:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":680,"id":699,"nodeType":"Return","src":"5458:11:3"}]},"documentation":{"id":669,"nodeType":"StructuredDocumentation","src":"4634:551:3","text":" @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."},"functionSelector":"23b872dd","id":701,"implemented":true,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"5199:12:3","nodeType":"FunctionDefinition","overrides":{"id":677,"nodeType":"OverrideSpecifier","overrides":[],"src":"5299:8:3"},"parameters":{"id":676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":671,"mutability":"mutable","name":"from","nameLocation":"5229:4:3","nodeType":"VariableDeclaration","scope":701,"src":"5221:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":670,"name":"address","nodeType":"ElementaryTypeName","src":"5221:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":673,"mutability":"mutable","name":"to","nameLocation":"5251:2:3","nodeType":"VariableDeclaration","scope":701,"src":"5243:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":672,"name":"address","nodeType":"ElementaryTypeName","src":"5243:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":675,"mutability":"mutable","name":"amount","nameLocation":"5271:6:3","nodeType":"VariableDeclaration","scope":701,"src":"5263:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":674,"name":"uint256","nodeType":"ElementaryTypeName","src":"5263:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5211:72:3"},"returnParameters":{"id":680,"nodeType":"ParameterList","parameters":[{"constant":false,"id":679,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":701,"src":"5317:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":678,"name":"bool","nodeType":"ElementaryTypeName","src":"5317:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5316:6:3"},"scope":1088,"src":"5190:286:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":729,"nodeType":"Block","src":"5965:140:3","statements":[{"assignments":[712],"declarations":[{"constant":false,"id":712,"mutability":"mutable","name":"owner","nameLocation":"5983:5:3","nodeType":"VariableDeclaration","scope":729,"src":"5975:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":711,"name":"address","nodeType":"ElementaryTypeName","src":"5975:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":715,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":713,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"5991:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":714,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5991:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5975:28:3"},{"expression":{"arguments":[{"id":717,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6022:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":718,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"6029:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":724,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":720,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"6048:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":721,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":704,"src":"6055:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":719,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"6038:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6038:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"id":723,"name":"addedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":706,"src":"6066:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6038:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":716,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6013:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":725,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6013:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":726,"nodeType":"ExpressionStatement","src":"6013:64:3"},{"expression":{"hexValue":"74727565","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6094:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":710,"id":728,"nodeType":"Return","src":"6087:11:3"}]},"documentation":{"id":702,"nodeType":"StructuredDocumentation","src":"5482:384:3","text":" @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."},"functionSelector":"39509351","id":730,"implemented":true,"kind":"function","modifiers":[],"name":"increaseAllowance","nameLocation":"5880:17:3","nodeType":"FunctionDefinition","parameters":{"id":707,"nodeType":"ParameterList","parameters":[{"constant":false,"id":704,"mutability":"mutable","name":"spender","nameLocation":"5906:7:3","nodeType":"VariableDeclaration","scope":730,"src":"5898:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":703,"name":"address","nodeType":"ElementaryTypeName","src":"5898:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":706,"mutability":"mutable","name":"addedValue","nameLocation":"5923:10:3","nodeType":"VariableDeclaration","scope":730,"src":"5915:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":705,"name":"uint256","nodeType":"ElementaryTypeName","src":"5915:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5897:37:3"},"returnParameters":{"id":710,"nodeType":"ParameterList","parameters":[{"constant":false,"id":709,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":730,"src":"5959:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":708,"name":"bool","nodeType":"ElementaryTypeName","src":"5959:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5958:6:3"},"scope":1088,"src":"5871:234:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":770,"nodeType":"Block","src":"6691:328:3","statements":[{"assignments":[741],"declarations":[{"constant":false,"id":741,"mutability":"mutable","name":"owner","nameLocation":"6709:5:3","nodeType":"VariableDeclaration","scope":770,"src":"6701:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":740,"name":"address","nodeType":"ElementaryTypeName","src":"6701:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":744,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":742,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1203,"src":"6717:10:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":743,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6717:12:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6701:28:3"},{"assignments":[746],"declarations":[{"constant":false,"id":746,"mutability":"mutable","name":"currentAllowance","nameLocation":"6747:16:3","nodeType":"VariableDeclaration","scope":770,"src":"6739:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":745,"name":"uint256","nodeType":"ElementaryTypeName","src":"6739:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":751,"initialValue":{"arguments":[{"id":748,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6776:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":749,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"6783:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":747,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"6766:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":750,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6766:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"6739:52:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":753,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"6809:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":754,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"6829:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6809:35:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f","id":756,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6846:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""},"value":"ERC20: decreased allowance below zero"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","typeString":"literal_string \"ERC20: decreased allowance below zero\""}],"id":752,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6801:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":757,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6801:85:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":758,"nodeType":"ExpressionStatement","src":"6801:85:3"},{"id":767,"nodeType":"UncheckedBlock","src":"6896:95:3","statements":[{"expression":{"arguments":[{"id":760,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":741,"src":"6929:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":761,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":733,"src":"6936:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":764,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":762,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":746,"src":"6945:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":763,"name":"subtractedValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":735,"src":"6964:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6945:34:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":759,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"6920:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6920:60:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":766,"nodeType":"ExpressionStatement","src":"6920:60:3"}]},{"expression":{"hexValue":"74727565","id":768,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"7008:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":739,"id":769,"nodeType":"Return","src":"7001:11:3"}]},"documentation":{"id":731,"nodeType":"StructuredDocumentation","src":"6111:476:3","text":" @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."},"functionSelector":"a457c2d7","id":771,"implemented":true,"kind":"function","modifiers":[],"name":"decreaseAllowance","nameLocation":"6601:17:3","nodeType":"FunctionDefinition","parameters":{"id":736,"nodeType":"ParameterList","parameters":[{"constant":false,"id":733,"mutability":"mutable","name":"spender","nameLocation":"6627:7:3","nodeType":"VariableDeclaration","scope":771,"src":"6619:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":732,"name":"address","nodeType":"ElementaryTypeName","src":"6619:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":735,"mutability":"mutable","name":"subtractedValue","nameLocation":"6644:15:3","nodeType":"VariableDeclaration","scope":771,"src":"6636:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":734,"name":"uint256","nodeType":"ElementaryTypeName","src":"6636:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6618:42:3"},"returnParameters":{"id":739,"nodeType":"ParameterList","parameters":[{"constant":false,"id":738,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":771,"src":"6685:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":737,"name":"bool","nodeType":"ElementaryTypeName","src":"6685:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6684:6:3"},"scope":1088,"src":"6592:427:3","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":847,"nodeType":"Block","src":"7581:710:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":782,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"7599:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":785,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7607:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":783,"name":"address","nodeType":"ElementaryTypeName","src":"7607:7:3","typeDescriptions":{}}},"id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7607:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7599:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373","id":788,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7619:39:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""},"value":"ERC20: transfer from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","typeString":"literal_string \"ERC20: transfer from the zero address\""}],"id":781,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7591:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7591:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":790,"nodeType":"ExpressionStatement","src":"7591:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":797,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":792,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"7677:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":795,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7691:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":794,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7683:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":793,"name":"address","nodeType":"ElementaryTypeName","src":"7683:7:3","typeDescriptions":{}}},"id":796,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7683:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"7677:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472657373","id":798,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7695:37:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""},"value":"ERC20: transfer to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","typeString":"literal_string \"ERC20: transfer to the zero address\""}],"id":791,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7669:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":799,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7669:64:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":800,"nodeType":"ExpressionStatement","src":"7669:64:3"},{"expression":{"arguments":[{"id":802,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"7765:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":803,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"7771:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":804,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7775:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":801,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"7744:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":805,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7744:38:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":806,"nodeType":"ExpressionStatement","src":"7744:38:3"},{"assignments":[808],"declarations":[{"constant":false,"id":808,"mutability":"mutable","name":"fromBalance","nameLocation":"7801:11:3","nodeType":"VariableDeclaration","scope":847,"src":"7793:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":807,"name":"uint256","nodeType":"ElementaryTypeName","src":"7793:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":812,"initialValue":{"baseExpression":{"id":809,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"7815:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":811,"indexExpression":{"id":810,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"7825:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7815:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7793:37:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":816,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":814,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7848:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":815,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7863:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7848:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365","id":817,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7871:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""},"value":"ERC20: transfer amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","typeString":"literal_string \"ERC20: transfer amount exceeds balance\""}],"id":813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7840:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":818,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7840:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":819,"nodeType":"ExpressionStatement","src":"7840:72:3"},{"id":834,"nodeType":"UncheckedBlock","src":"7922:273:3","statements":[{"expression":{"id":826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":820,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"7946:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":822,"indexExpression":{"id":821,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"7956:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7946:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":823,"name":"fromBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":808,"src":"7964:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":824,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"7978:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7964:20:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7946:38:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":827,"nodeType":"ExpressionStatement","src":"7946:38:3"},{"expression":{"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":828,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"8161:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":830,"indexExpression":{"id":829,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8171:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8161:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":831,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8178:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8161:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":833,"nodeType":"ExpressionStatement","src":"8161:23:3"}]},{"eventCall":{"arguments":[{"id":836,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"8219:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":837,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8225:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":838,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8229:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":835,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"8210:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":839,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8210:26:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":840,"nodeType":"EmitStatement","src":"8205:31:3"},{"expression":{"arguments":[{"id":842,"name":"from","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":774,"src":"8267:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":843,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":776,"src":"8273:2:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":844,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":778,"src":"8277:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":841,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"8247:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":845,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8247:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":846,"nodeType":"ExpressionStatement","src":"8247:37:3"}]},"documentation":{"id":772,"nodeType":"StructuredDocumentation","src":"7025:443:3","text":" @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."},"id":848,"implemented":true,"kind":"function","modifiers":[],"name":"_transfer","nameLocation":"7482:9:3","nodeType":"FunctionDefinition","parameters":{"id":779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":774,"mutability":"mutable","name":"from","nameLocation":"7509:4:3","nodeType":"VariableDeclaration","scope":848,"src":"7501:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":773,"name":"address","nodeType":"ElementaryTypeName","src":"7501:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":776,"mutability":"mutable","name":"to","nameLocation":"7531:2:3","nodeType":"VariableDeclaration","scope":848,"src":"7523:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":775,"name":"address","nodeType":"ElementaryTypeName","src":"7523:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":778,"mutability":"mutable","name":"amount","nameLocation":"7551:6:3","nodeType":"VariableDeclaration","scope":848,"src":"7543:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":777,"name":"uint256","nodeType":"ElementaryTypeName","src":"7543:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7491:72:3"},"returnParameters":{"id":780,"nodeType":"ParameterList","parameters":[],"src":"7581:0:3"},"scope":1088,"src":"7473:818:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":904,"nodeType":"Block","src":"8632:470:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":857,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"8650:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":860,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8669:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8661:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":858,"name":"address","nodeType":"ElementaryTypeName","src":"8661:7:3","typeDescriptions":{}}},"id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8661:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"8650:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","id":863,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8673:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""},"value":"ERC20: mint to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","typeString":"literal_string \"ERC20: mint to the zero address\""}],"id":856,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8642:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":864,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8642:65:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":865,"nodeType":"ExpressionStatement","src":"8642:65:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":869,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8747:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":868,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":867,"name":"address","nodeType":"ElementaryTypeName","src":"8739:7:3","typeDescriptions":{}}},"id":870,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":871,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"8751:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":872,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8760:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":866,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"8718:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8718:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":874,"nodeType":"ExpressionStatement","src":"8718:49:3"},{"expression":{"id":877,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":875,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"8778:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":876,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8794:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8778:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":878,"nodeType":"ExpressionStatement","src":"8778:22:3"},{"id":885,"nodeType":"UncheckedBlock","src":"8810:175:3","statements":[{"expression":{"id":883,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":879,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"8946:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":881,"indexExpression":{"id":880,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"8956:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8946:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"id":882,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"8968:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8946:28:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":884,"nodeType":"ExpressionStatement","src":"8946:28:3"}]},{"eventCall":{"arguments":[{"arguments":[{"hexValue":"30","id":889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9016:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":888,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9008:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":887,"name":"address","nodeType":"ElementaryTypeName","src":"9008:7:3","typeDescriptions":{}}},"id":890,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9008:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":891,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"9020:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":892,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"9029:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":886,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"8999:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8999:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":894,"nodeType":"EmitStatement","src":"8994:42:3"},{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":898,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9075:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":897,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9067:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":896,"name":"address","nodeType":"ElementaryTypeName","src":"9067:7:3","typeDescriptions":{}}},"id":899,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9067:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":900,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":851,"src":"9079:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":901,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":853,"src":"9088:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":895,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"9047:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":902,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9047:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":903,"nodeType":"ExpressionStatement","src":"9047:48:3"}]},"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"8297:265:3","text":"@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."},"id":905,"implemented":true,"kind":"function","modifiers":[],"name":"_mint","nameLocation":"8576:5:3","nodeType":"FunctionDefinition","parameters":{"id":854,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"account","nameLocation":"8590:7:3","nodeType":"VariableDeclaration","scope":905,"src":"8582:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"8582:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":853,"mutability":"mutable","name":"amount","nameLocation":"8607:6:3","nodeType":"VariableDeclaration","scope":905,"src":"8599:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":852,"name":"uint256","nodeType":"ElementaryTypeName","src":"8599:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8581:33:3"},"returnParameters":{"id":855,"nodeType":"ParameterList","parameters":[],"src":"8632:0:3"},"scope":1088,"src":"8567:535:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":976,"nodeType":"Block","src":"9487:594:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":914,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"9505:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9524:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":916,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9516:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":915,"name":"address","nodeType":"ElementaryTypeName","src":"9516:7:3","typeDescriptions":{}}},"id":918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9516:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"9505:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e2066726f6d20746865207a65726f2061646472657373","id":920,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9528:35:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""},"value":"ERC20: burn from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f","typeString":"literal_string \"ERC20: burn from the zero address\""}],"id":913,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9497:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9497:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":922,"nodeType":"ExpressionStatement","src":"9497:67:3"},{"expression":{"arguments":[{"id":924,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"9596:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":927,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9613:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":926,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9605:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":925,"name":"address","nodeType":"ElementaryTypeName","src":"9605:7:3","typeDescriptions":{}}},"id":928,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9605:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":929,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9617:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":923,"name":"_beforeTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1076,"src":"9575:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9575:49:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":931,"nodeType":"ExpressionStatement","src":"9575:49:3"},{"assignments":[933],"declarations":[{"constant":false,"id":933,"mutability":"mutable","name":"accountBalance","nameLocation":"9643:14:3","nodeType":"VariableDeclaration","scope":976,"src":"9635:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":932,"name":"uint256","nodeType":"ElementaryTypeName","src":"9635:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":937,"initialValue":{"baseExpression":{"id":934,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"9660:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":936,"indexExpression":{"id":935,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"9670:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9660:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9635:43:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":941,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":939,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"9696:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":940,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9714:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9696:24:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365","id":942,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9722:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""},"value":"ERC20: burn amount exceeds balance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd","typeString":"literal_string \"ERC20: burn amount exceeds balance\""}],"id":938,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9688:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":943,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9688:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":944,"nodeType":"ExpressionStatement","src":"9688:71:3"},{"id":957,"nodeType":"UncheckedBlock","src":"9769:194:3","statements":[{"expression":{"id":951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":945,"name":"_balances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"9793:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":947,"indexExpression":{"id":946,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"9803:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9793:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":948,"name":"accountBalance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":933,"src":"9814:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":949,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9831:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9814:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9793:44:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":952,"nodeType":"ExpressionStatement","src":"9793:44:3"},{"expression":{"id":955,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":953,"name":"_totalSupply","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":525,"src":"9930:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"-=","rightHandSide":{"id":954,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"9946:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9930:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":956,"nodeType":"ExpressionStatement","src":"9930:22:3"}]},{"eventCall":{"arguments":[{"id":959,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"9987:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":962,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10004:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":961,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9996:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":960,"name":"address","nodeType":"ElementaryTypeName","src":"9996:7:3","typeDescriptions":{}}},"id":963,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9996:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":964,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"10008:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":958,"name":"Transfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1100,"src":"9978:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":965,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9978:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":966,"nodeType":"EmitStatement","src":"9973:42:3"},{"expression":{"arguments":[{"id":968,"name":"account","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":908,"src":"10046:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"hexValue":"30","id":971,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10063:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":970,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10055:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":969,"name":"address","nodeType":"ElementaryTypeName","src":"10055:7:3","typeDescriptions":{}}},"id":972,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10055:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":973,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":910,"src":"10067:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":967,"name":"_afterTokenTransfer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1087,"src":"10026:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":974,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10026:48:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":975,"nodeType":"ExpressionStatement","src":"10026:48:3"}]},"documentation":{"id":906,"nodeType":"StructuredDocumentation","src":"9108:309:3","text":" @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."},"id":977,"implemented":true,"kind":"function","modifiers":[],"name":"_burn","nameLocation":"9431:5:3","nodeType":"FunctionDefinition","parameters":{"id":911,"nodeType":"ParameterList","parameters":[{"constant":false,"id":908,"mutability":"mutable","name":"account","nameLocation":"9445:7:3","nodeType":"VariableDeclaration","scope":977,"src":"9437:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":907,"name":"address","nodeType":"ElementaryTypeName","src":"9437:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":910,"mutability":"mutable","name":"amount","nameLocation":"9462:6:3","nodeType":"VariableDeclaration","scope":977,"src":"9454:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":909,"name":"uint256","nodeType":"ElementaryTypeName","src":"9454:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9436:33:3"},"returnParameters":{"id":912,"nodeType":"ParameterList","parameters":[],"src":"9487:0:3"},"scope":1088,"src":"9422:659:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1021,"nodeType":"Block","src":"10617:257:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":988,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"10635:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10652:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":990,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10644:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":989,"name":"address","nodeType":"ElementaryTypeName","src":"10644:7:3","typeDescriptions":{}}},"id":992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10644:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10635:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373","id":994,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10656:38:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""},"value":"ERC20: approve from the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","typeString":"literal_string \"ERC20: approve from the zero address\""}],"id":987,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10627:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":995,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10627:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":996,"nodeType":"ExpressionStatement","src":"10627:68:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1003,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":998,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"10713:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":1001,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10732:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1000,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10724:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":999,"name":"address","nodeType":"ElementaryTypeName","src":"10724:7:3","typeDescriptions":{}}},"id":1002,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10724:10:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"10713:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f2061646472657373","id":1004,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10736:36:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""},"value":"ERC20: approve to the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","typeString":"literal_string \"ERC20: approve to the zero address\""}],"id":997,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10705:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10705:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1006,"nodeType":"ExpressionStatement","src":"10705:68:3"},{"expression":{"id":1013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1007,"name":"_allowances","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"10784:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$","typeString":"mapping(address => mapping(address => uint256))"}},"id":1010,"indexExpression":{"id":1008,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"10796:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10784:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":1011,"indexExpression":{"id":1009,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"10803:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10784:27:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1012,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"10814:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10784:36:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1014,"nodeType":"ExpressionStatement","src":"10784:36:3"},{"eventCall":{"arguments":[{"id":1016,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":980,"src":"10844:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1017,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":982,"src":"10851:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1018,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":984,"src":"10860:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1015,"name":"Approval","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1109,"src":"10835:8:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10835:32:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1020,"nodeType":"EmitStatement","src":"10830:37:3"}]},"documentation":{"id":978,"nodeType":"StructuredDocumentation","src":"10087:412:3","text":" @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."},"id":1022,"implemented":true,"kind":"function","modifiers":[],"name":"_approve","nameLocation":"10513:8:3","nodeType":"FunctionDefinition","parameters":{"id":985,"nodeType":"ParameterList","parameters":[{"constant":false,"id":980,"mutability":"mutable","name":"owner","nameLocation":"10539:5:3","nodeType":"VariableDeclaration","scope":1022,"src":"10531:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":979,"name":"address","nodeType":"ElementaryTypeName","src":"10531:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":982,"mutability":"mutable","name":"spender","nameLocation":"10562:7:3","nodeType":"VariableDeclaration","scope":1022,"src":"10554:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":981,"name":"address","nodeType":"ElementaryTypeName","src":"10554:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":984,"mutability":"mutable","name":"amount","nameLocation":"10587:6:3","nodeType":"VariableDeclaration","scope":1022,"src":"10579:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":983,"name":"uint256","nodeType":"ElementaryTypeName","src":"10579:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10521:78:3"},"returnParameters":{"id":986,"nodeType":"ParameterList","parameters":[],"src":"10617:0:3"},"scope":1088,"src":"10504:370:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1064,"nodeType":"Block","src":"11275:321:3","statements":[{"assignments":[1033],"declarations":[{"constant":false,"id":1033,"mutability":"mutable","name":"currentAllowance","nameLocation":"11293:16:3","nodeType":"VariableDeclaration","scope":1064,"src":"11285:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1032,"name":"uint256","nodeType":"ElementaryTypeName","src":"11285:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1038,"initialValue":{"arguments":[{"id":1035,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"11322:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1036,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"11329:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":1034,"name":"allowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"11312:9:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$","typeString":"function (address,address) view returns (uint256)"}},"id":1037,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11312:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11285:52:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1039,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"11351:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"arguments":[{"id":1042,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11376:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"11376:7:3","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"}],"id":1040,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11371:4:3","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1043,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11371:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint256","typeString":"type(uint256)"}},"id":1044,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"max","nodeType":"MemberAccess","src":"11371:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11351:37:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1063,"nodeType":"IfStatement","src":"11347:243:3","trueBody":{"id":1062,"nodeType":"Block","src":"11390:200:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1049,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1047,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"11412:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":1048,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"11432:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11412:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","id":1050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11440:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""},"value":"ERC20: insufficient allowance"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","typeString":"literal_string \"ERC20: insufficient allowance\""}],"id":1046,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11404:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11404:68:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1052,"nodeType":"ExpressionStatement","src":"11404:68:3"},{"id":1061,"nodeType":"UncheckedBlock","src":"11486:94:3","statements":[{"expression":{"arguments":[{"id":1054,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1025,"src":"11523:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1055,"name":"spender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1027,"src":"11530:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1056,"name":"currentAllowance","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"11539:16:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"id":1057,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1029,"src":"11558:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11539:25:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1053,"name":"_approve","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"11514:8:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1059,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11514:51:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1060,"nodeType":"ExpressionStatement","src":"11514:51:3"}]}]}}]},"documentation":{"id":1023,"nodeType":"StructuredDocumentation","src":"10880:270:3","text":" @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."},"id":1065,"implemented":true,"kind":"function","modifiers":[],"name":"_spendAllowance","nameLocation":"11164:15:3","nodeType":"FunctionDefinition","parameters":{"id":1030,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1025,"mutability":"mutable","name":"owner","nameLocation":"11197:5:3","nodeType":"VariableDeclaration","scope":1065,"src":"11189:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1024,"name":"address","nodeType":"ElementaryTypeName","src":"11189:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1027,"mutability":"mutable","name":"spender","nameLocation":"11220:7:3","nodeType":"VariableDeclaration","scope":1065,"src":"11212:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1026,"name":"address","nodeType":"ElementaryTypeName","src":"11212:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1029,"mutability":"mutable","name":"amount","nameLocation":"11245:6:3","nodeType":"VariableDeclaration","scope":1065,"src":"11237:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1028,"name":"uint256","nodeType":"ElementaryTypeName","src":"11237:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11179:78:3"},"returnParameters":{"id":1031,"nodeType":"ParameterList","parameters":[],"src":"11275:0:3"},"scope":1088,"src":"11155:441:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1075,"nodeType":"Block","src":"12299:2:3","statements":[]},"documentation":{"id":1066,"nodeType":"StructuredDocumentation","src":"11602:573:3","text":" @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1076,"implemented":true,"kind":"function","modifiers":[],"name":"_beforeTokenTransfer","nameLocation":"12189:20:3","nodeType":"FunctionDefinition","parameters":{"id":1073,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1068,"mutability":"mutable","name":"from","nameLocation":"12227:4:3","nodeType":"VariableDeclaration","scope":1076,"src":"12219:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1067,"name":"address","nodeType":"ElementaryTypeName","src":"12219:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1070,"mutability":"mutable","name":"to","nameLocation":"12249:2:3","nodeType":"VariableDeclaration","scope":1076,"src":"12241:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1069,"name":"address","nodeType":"ElementaryTypeName","src":"12241:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1072,"mutability":"mutable","name":"amount","nameLocation":"12269:6:3","nodeType":"VariableDeclaration","scope":1076,"src":"12261:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1071,"name":"uint256","nodeType":"ElementaryTypeName","src":"12261:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:72:3"},"returnParameters":{"id":1074,"nodeType":"ParameterList","parameters":[],"src":"12299:0:3"},"scope":1088,"src":"12180:121:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"},{"body":{"id":1086,"nodeType":"Block","src":"13007:2:3","statements":[]},"documentation":{"id":1077,"nodeType":"StructuredDocumentation","src":"12307:577:3","text":" @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."},"id":1087,"implemented":true,"kind":"function","modifiers":[],"name":"_afterTokenTransfer","nameLocation":"12898:19:3","nodeType":"FunctionDefinition","parameters":{"id":1084,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1079,"mutability":"mutable","name":"from","nameLocation":"12935:4:3","nodeType":"VariableDeclaration","scope":1087,"src":"12927:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1078,"name":"address","nodeType":"ElementaryTypeName","src":"12927:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1081,"mutability":"mutable","name":"to","nameLocation":"12957:2:3","nodeType":"VariableDeclaration","scope":1087,"src":"12949:10:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1080,"name":"address","nodeType":"ElementaryTypeName","src":"12949:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1083,"mutability":"mutable","name":"amount","nameLocation":"12977:6:3","nodeType":"VariableDeclaration","scope":1087,"src":"12969:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1082,"name":"uint256","nodeType":"ElementaryTypeName","src":"12969:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12917:72:3"},"returnParameters":{"id":1085,"nodeType":"ParameterList","parameters":[],"src":"13007:0:3"},"scope":1088,"src":"12889:120:3","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":1089,"src":"1401:11610:3","usedErrors":[]}],"src":"105:12907:3"},"id":3},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","exportedSymbols":{"IERC20":[1166]},"id":1167,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1090,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"106:23:4"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC20","contractDependencies":[],"contractKind":"interface","documentation":{"id":1091,"nodeType":"StructuredDocumentation","src":"131:70:4","text":" @dev Interface of the ERC20 standard as defined in the EIP."},"fullyImplemented":false,"id":1166,"linearizedBaseContracts":[1166],"name":"IERC20","nameLocation":"212:6:4","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":1092,"nodeType":"StructuredDocumentation","src":"225:158:4","text":" @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."},"id":1100,"name":"Transfer","nameLocation":"394:8:4","nodeType":"EventDefinition","parameters":{"id":1099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1094,"indexed":true,"mutability":"mutable","name":"from","nameLocation":"419:4:4","nodeType":"VariableDeclaration","scope":1100,"src":"403:20:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1093,"name":"address","nodeType":"ElementaryTypeName","src":"403:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1096,"indexed":true,"mutability":"mutable","name":"to","nameLocation":"441:2:4","nodeType":"VariableDeclaration","scope":1100,"src":"425:18:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1095,"name":"address","nodeType":"ElementaryTypeName","src":"425:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1098,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"453:5:4","nodeType":"VariableDeclaration","scope":1100,"src":"445:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"445:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"402:57:4"},"src":"388:72:4"},{"anonymous":false,"documentation":{"id":1101,"nodeType":"StructuredDocumentation","src":"466:148:4","text":" @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."},"id":1109,"name":"Approval","nameLocation":"625:8:4","nodeType":"EventDefinition","parameters":{"id":1108,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1103,"indexed":true,"mutability":"mutable","name":"owner","nameLocation":"650:5:4","nodeType":"VariableDeclaration","scope":1109,"src":"634:21:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1102,"name":"address","nodeType":"ElementaryTypeName","src":"634:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1105,"indexed":true,"mutability":"mutable","name":"spender","nameLocation":"673:7:4","nodeType":"VariableDeclaration","scope":1109,"src":"657:23:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1104,"name":"address","nodeType":"ElementaryTypeName","src":"657:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1107,"indexed":false,"mutability":"mutable","name":"value","nameLocation":"690:5:4","nodeType":"VariableDeclaration","scope":1109,"src":"682:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1106,"name":"uint256","nodeType":"ElementaryTypeName","src":"682:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"633:63:4"},"src":"619:78:4"},{"documentation":{"id":1110,"nodeType":"StructuredDocumentation","src":"703:66:4","text":" @dev Returns the amount of tokens in existence."},"functionSelector":"18160ddd","id":1115,"implemented":false,"kind":"function","modifiers":[],"name":"totalSupply","nameLocation":"783:11:4","nodeType":"FunctionDefinition","parameters":{"id":1111,"nodeType":"ParameterList","parameters":[],"src":"794:2:4"},"returnParameters":{"id":1114,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1113,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1115,"src":"820:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1112,"name":"uint256","nodeType":"ElementaryTypeName","src":"820:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"819:9:4"},"scope":1166,"src":"774:55:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1116,"nodeType":"StructuredDocumentation","src":"835:72:4","text":" @dev Returns the amount of tokens owned by `account`."},"functionSelector":"70a08231","id":1123,"implemented":false,"kind":"function","modifiers":[],"name":"balanceOf","nameLocation":"921:9:4","nodeType":"FunctionDefinition","parameters":{"id":1119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1118,"mutability":"mutable","name":"account","nameLocation":"939:7:4","nodeType":"VariableDeclaration","scope":1123,"src":"931:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1117,"name":"address","nodeType":"ElementaryTypeName","src":"931:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"930:17:4"},"returnParameters":{"id":1122,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1121,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1123,"src":"971:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1120,"name":"uint256","nodeType":"ElementaryTypeName","src":"971:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"970:9:4"},"scope":1166,"src":"912:68:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1124,"nodeType":"StructuredDocumentation","src":"986:202:4","text":" @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"a9059cbb","id":1133,"implemented":false,"kind":"function","modifiers":[],"name":"transfer","nameLocation":"1202:8:4","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1126,"mutability":"mutable","name":"to","nameLocation":"1219:2:4","nodeType":"VariableDeclaration","scope":1133,"src":"1211:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1125,"name":"address","nodeType":"ElementaryTypeName","src":"1211:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1128,"mutability":"mutable","name":"amount","nameLocation":"1231:6:4","nodeType":"VariableDeclaration","scope":1133,"src":"1223:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1127,"name":"uint256","nodeType":"ElementaryTypeName","src":"1223:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1210:28:4"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1133,"src":"1257:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1130,"name":"bool","nodeType":"ElementaryTypeName","src":"1257:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1256:6:4"},"scope":1166,"src":"1193:70:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1134,"nodeType":"StructuredDocumentation","src":"1269:264:4","text":" @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."},"functionSelector":"dd62ed3e","id":1143,"implemented":false,"kind":"function","modifiers":[],"name":"allowance","nameLocation":"1547:9:4","nodeType":"FunctionDefinition","parameters":{"id":1139,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1136,"mutability":"mutable","name":"owner","nameLocation":"1565:5:4","nodeType":"VariableDeclaration","scope":1143,"src":"1557:13:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1135,"name":"address","nodeType":"ElementaryTypeName","src":"1557:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1138,"mutability":"mutable","name":"spender","nameLocation":"1580:7:4","nodeType":"VariableDeclaration","scope":1143,"src":"1572:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1137,"name":"address","nodeType":"ElementaryTypeName","src":"1572:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1556:32:4"},"returnParameters":{"id":1142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1141,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1143,"src":"1612:7:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1140,"name":"uint256","nodeType":"ElementaryTypeName","src":"1612:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1611:9:4"},"scope":1166,"src":"1538:83:4","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1144,"nodeType":"StructuredDocumentation","src":"1627:642:4","text":" @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."},"functionSelector":"095ea7b3","id":1153,"implemented":false,"kind":"function","modifiers":[],"name":"approve","nameLocation":"2283:7:4","nodeType":"FunctionDefinition","parameters":{"id":1149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1146,"mutability":"mutable","name":"spender","nameLocation":"2299:7:4","nodeType":"VariableDeclaration","scope":1153,"src":"2291:15:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1145,"name":"address","nodeType":"ElementaryTypeName","src":"2291:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1148,"mutability":"mutable","name":"amount","nameLocation":"2316:6:4","nodeType":"VariableDeclaration","scope":1153,"src":"2308:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1147,"name":"uint256","nodeType":"ElementaryTypeName","src":"2308:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2290:33:4"},"returnParameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1153,"src":"2342:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1150,"name":"bool","nodeType":"ElementaryTypeName","src":"2342:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2341:6:4"},"scope":1166,"src":"2274:74:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"documentation":{"id":1154,"nodeType":"StructuredDocumentation","src":"2354:287:4","text":" @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."},"functionSelector":"23b872dd","id":1165,"implemented":false,"kind":"function","modifiers":[],"name":"transferFrom","nameLocation":"2655:12:4","nodeType":"FunctionDefinition","parameters":{"id":1161,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1156,"mutability":"mutable","name":"from","nameLocation":"2685:4:4","nodeType":"VariableDeclaration","scope":1165,"src":"2677:12:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1155,"name":"address","nodeType":"ElementaryTypeName","src":"2677:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1158,"mutability":"mutable","name":"to","nameLocation":"2707:2:4","nodeType":"VariableDeclaration","scope":1165,"src":"2699:10:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1157,"name":"address","nodeType":"ElementaryTypeName","src":"2699:7:4","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1160,"mutability":"mutable","name":"amount","nameLocation":"2727:6:4","nodeType":"VariableDeclaration","scope":1165,"src":"2719:14:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1159,"name":"uint256","nodeType":"ElementaryTypeName","src":"2719:7:4","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2667:72:4"},"returnParameters":{"id":1164,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1163,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1165,"src":"2758:4:4","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1162,"name":"bool","nodeType":"ElementaryTypeName","src":"2758:4:4","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2757:6:4"},"scope":1166,"src":"2646:118:4","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1167,"src":"202:2564:4","usedErrors":[]}],"src":"106:2661:4"},"id":4},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol","exportedSymbols":{"IERC20":[1166],"IERC20Metadata":[1191]},"id":1192,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1168,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"110:23:5"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"../IERC20.sol","id":1169,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1192,"sourceUnit":1167,"src":"135:23:5","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1171,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"305:6:5"},"id":1172,"nodeType":"InheritanceSpecifier","src":"305:6:5"}],"canonicalName":"IERC20Metadata","contractDependencies":[],"contractKind":"interface","documentation":{"id":1170,"nodeType":"StructuredDocumentation","src":"160:116:5","text":" @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"},"fullyImplemented":false,"id":1191,"linearizedBaseContracts":[1191,1166],"name":"IERC20Metadata","nameLocation":"287:14:5","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1173,"nodeType":"StructuredDocumentation","src":"318:54:5","text":" @dev Returns the name of the token."},"functionSelector":"06fdde03","id":1178,"implemented":false,"kind":"function","modifiers":[],"name":"name","nameLocation":"386:4:5","nodeType":"FunctionDefinition","parameters":{"id":1174,"nodeType":"ParameterList","parameters":[],"src":"390:2:5"},"returnParameters":{"id":1177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1178,"src":"416:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1175,"name":"string","nodeType":"ElementaryTypeName","src":"416:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"415:15:5"},"scope":1191,"src":"377:54:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1179,"nodeType":"StructuredDocumentation","src":"437:56:5","text":" @dev Returns the symbol of the token."},"functionSelector":"95d89b41","id":1184,"implemented":false,"kind":"function","modifiers":[],"name":"symbol","nameLocation":"507:6:5","nodeType":"FunctionDefinition","parameters":{"id":1180,"nodeType":"ParameterList","parameters":[],"src":"513:2:5"},"returnParameters":{"id":1183,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1182,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1184,"src":"539:13:5","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1181,"name":"string","nodeType":"ElementaryTypeName","src":"539:6:5","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"538:15:5"},"scope":1191,"src":"498:56:5","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":1185,"nodeType":"StructuredDocumentation","src":"560:65:5","text":" @dev Returns the decimals places of the token."},"functionSelector":"313ce567","id":1190,"implemented":false,"kind":"function","modifiers":[],"name":"decimals","nameLocation":"639:8:5","nodeType":"FunctionDefinition","parameters":{"id":1186,"nodeType":"ParameterList","parameters":[],"src":"647:2:5"},"returnParameters":{"id":1189,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1188,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1190,"src":"673:5:5","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1187,"name":"uint8","nodeType":"ElementaryTypeName","src":"673:5:5","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"672:7:5"},"scope":1191,"src":"630:50:5","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1192,"src":"277:405:5","usedErrors":[]}],"src":"110:573:5"},"id":5},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[1213]},"id":1214,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1193,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"86:23:6"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"111:496:6","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":1213,"linearizedBaseContracts":[1213],"name":"Context","nameLocation":"626:7:6","nodeType":"ContractDefinition","nodes":[{"body":{"id":1202,"nodeType":"Block","src":"702:34:6","statements":[{"expression":{"expression":{"id":1199,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"719:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"719:10:6","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":1198,"id":1201,"nodeType":"Return","src":"712:17:6"}]},"id":1203,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"649:10:6","nodeType":"FunctionDefinition","parameters":{"id":1195,"nodeType":"ParameterList","parameters":[],"src":"659:2:6"},"returnParameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1203,"src":"693:7:6","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1196,"name":"address","nodeType":"ElementaryTypeName","src":"693:7:6","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"692:9:6"},"scope":1213,"src":"640:96:6","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":1211,"nodeType":"Block","src":"809:32:6","statements":[{"expression":{"expression":{"id":1208,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"826:3:6","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"data","nodeType":"MemberAccess","src":"826:8:6","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":1207,"id":1210,"nodeType":"Return","src":"819:15:6"}]},"id":1212,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"751:8:6","nodeType":"FunctionDefinition","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[],"src":"759:2:6"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1212,"src":"793:14:6","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":1205,"name":"bytes","nodeType":"ElementaryTypeName","src":"793:5:6","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"792:16:6"},"scope":1213,"src":"742:99:6","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":1214,"src":"608:235:6","usedErrors":[]}],"src":"86:758:6"},"id":6},"@openzeppelin/contracts/utils/Strings.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Strings.sol","exportedSymbols":{"Math":[2289],"Strings":[1388]},"id":1389,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1215,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:7"},{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","file":"./math/Math.sol","id":1216,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1389,"sourceUnit":2290,"src":"126:25:7","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Strings","contractDependencies":[],"contractKind":"library","documentation":{"id":1217,"nodeType":"StructuredDocumentation","src":"153:34:7","text":" @dev String operations."},"fullyImplemented":true,"id":1388,"linearizedBaseContracts":[1388],"name":"Strings","nameLocation":"196:7:7","nodeType":"ContractDefinition","nodes":[{"constant":true,"id":1220,"mutability":"constant","name":"_SYMBOLS","nameLocation":"235:8:7","nodeType":"VariableDeclaration","scope":1388,"src":"210:54:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"},"typeName":{"id":1218,"name":"bytes16","nodeType":"ElementaryTypeName","src":"210:7:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"value":{"hexValue":"30313233343536373839616263646566","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"246:18:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_cb29997ed99ead0db59ce4d12b7d3723198c827273e5796737c926d78019c39f","typeString":"literal_string \"0123456789abcdef\""},"value":"0123456789abcdef"},"visibility":"private"},{"constant":true,"id":1223,"mutability":"constant","name":"_ADDRESS_LENGTH","nameLocation":"293:15:7","nodeType":"VariableDeclaration","scope":1388,"src":"270:43:7","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":1221,"name":"uint8","nodeType":"ElementaryTypeName","src":"270:5:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"value":{"hexValue":"3230","id":1222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"311:2:7","typeDescriptions":{"typeIdentifier":"t_rational_20_by_1","typeString":"int_const 20"},"value":"20"},"visibility":"private"},{"body":{"id":1270,"nodeType":"Block","src":"486:625:7","statements":[{"id":1269,"nodeType":"UncheckedBlock","src":"496:609:7","statements":[{"assignments":[1232],"declarations":[{"constant":false,"id":1232,"mutability":"mutable","name":"length","nameLocation":"528:6:7","nodeType":"VariableDeclaration","scope":1269,"src":"520:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1231,"name":"uint256","nodeType":"ElementaryTypeName","src":"520:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1239,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1235,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"548:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1233,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"537:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2289_$","typeString":"type(library Math)"}},"id":1234,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log10","nodeType":"MemberAccess","referencedDeclaration":2126,"src":"537:10:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1236,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"537:17:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"557:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"537:21:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"520:38:7"},{"assignments":[1241],"declarations":[{"constant":false,"id":1241,"mutability":"mutable","name":"buffer","nameLocation":"586:6:7","nodeType":"VariableDeclaration","scope":1269,"src":"572:20:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1240,"name":"string","nodeType":"ElementaryTypeName","src":"572:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":1246,"initialValue":{"arguments":[{"id":1244,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1232,"src":"606:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1243,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"595:10:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256) pure returns (string memory)"},"typeName":{"id":1242,"name":"string","nodeType":"ElementaryTypeName","src":"599:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}}},"id":1245,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"595:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"572:41:7"},{"assignments":[1248],"declarations":[{"constant":false,"id":1248,"mutability":"mutable","name":"ptr","nameLocation":"635:3:7","nodeType":"VariableDeclaration","scope":1269,"src":"627:11:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1247,"name":"uint256","nodeType":"ElementaryTypeName","src":"627:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1249,"nodeType":"VariableDeclarationStatement","src":"627:11:7"},{"AST":{"nodeType":"YulBlock","src":"708:67:7","statements":[{"nodeType":"YulAssignment","src":"726:35:7","value":{"arguments":[{"name":"buffer","nodeType":"YulIdentifier","src":"737:6:7"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"749:2:7","type":"","value":"32"},{"name":"length","nodeType":"YulIdentifier","src":"753:6:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"745:3:7"},"nodeType":"YulFunctionCall","src":"745:15:7"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"733:3:7"},"nodeType":"YulFunctionCall","src":"733:28:7"},"variableNames":[{"name":"ptr","nodeType":"YulIdentifier","src":"726:3:7"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1241,"isOffset":false,"isSlot":false,"src":"737:6:7","valueSize":1},{"declaration":1232,"isOffset":false,"isSlot":false,"src":"753:6:7","valueSize":1},{"declaration":1248,"isOffset":false,"isSlot":false,"src":"726:3:7","valueSize":1}],"id":1250,"nodeType":"InlineAssembly","src":"699:76:7"},{"body":{"id":1265,"nodeType":"Block","src":"801:267:7","statements":[{"expression":{"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":false,"src":"819:5:7","subExpression":{"id":1252,"name":"ptr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1248,"src":"819:3:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1254,"nodeType":"ExpressionStatement","src":"819:5:7"},{"AST":{"nodeType":"YulBlock","src":"902:84:7","statements":[{"expression":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"932:3:7"},{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"946:5:7"},{"kind":"number","nodeType":"YulLiteral","src":"953:2:7","type":"","value":"10"}],"functionName":{"name":"mod","nodeType":"YulIdentifier","src":"942:3:7"},"nodeType":"YulFunctionCall","src":"942:14:7"},{"name":"_SYMBOLS","nodeType":"YulIdentifier","src":"958:8:7"}],"functionName":{"name":"byte","nodeType":"YulIdentifier","src":"937:4:7"},"nodeType":"YulFunctionCall","src":"937:30:7"}],"functionName":{"name":"mstore8","nodeType":"YulIdentifier","src":"924:7:7"},"nodeType":"YulFunctionCall","src":"924:44:7"},"nodeType":"YulExpressionStatement","src":"924:44:7"}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":1220,"isOffset":false,"isSlot":false,"src":"958:8:7","valueSize":1},{"declaration":1248,"isOffset":false,"isSlot":false,"src":"932:3:7","valueSize":1},{"declaration":1226,"isOffset":false,"isSlot":false,"src":"946:5:7","valueSize":1}],"id":1255,"nodeType":"InlineAssembly","src":"893:93:7"},{"expression":{"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1256,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"1003:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"hexValue":"3130","id":1257,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1012:2:7","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"src":"1003:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1259,"nodeType":"ExpressionStatement","src":"1003:11:7"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1260,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1226,"src":"1036:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1045:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1036:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1264,"nodeType":"IfStatement","src":"1032:21:7","trueBody":{"id":1263,"nodeType":"Break","src":"1048:5:7"}}]},"condition":{"hexValue":"74727565","id":1251,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"795:4:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"id":1266,"nodeType":"WhileStatement","src":"788:280:7"},{"expression":{"id":1267,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1241,"src":"1088:6:7","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1230,"id":1268,"nodeType":"Return","src":"1081:13:7"}]}]},"documentation":{"id":1224,"nodeType":"StructuredDocumentation","src":"320:90:7","text":" @dev Converts a `uint256` to its ASCII `string` decimal representation."},"id":1271,"implemented":true,"kind":"function","modifiers":[],"name":"toString","nameLocation":"424:8:7","nodeType":"FunctionDefinition","parameters":{"id":1227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1226,"mutability":"mutable","name":"value","nameLocation":"441:5:7","nodeType":"VariableDeclaration","scope":1271,"src":"433:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1225,"name":"uint256","nodeType":"ElementaryTypeName","src":"433:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"432:15:7"},"returnParameters":{"id":1230,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1229,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1271,"src":"471:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1228,"name":"string","nodeType":"ElementaryTypeName","src":"471:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"470:15:7"},"scope":1388,"src":"415:696:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1290,"nodeType":"Block","src":"1290:100:7","statements":[{"id":1289,"nodeType":"UncheckedBlock","src":"1300:84:7","statements":[{"expression":{"arguments":[{"id":1280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"1343:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1286,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1283,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1274,"src":"1362:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":1281,"name":"Math","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2289,"src":"1350:4:7","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_Math_$2289_$","typeString":"type(library Math)"}},"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"log256","nodeType":"MemberAccess","referencedDeclaration":2249,"src":"1350:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1350:18:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1285,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1371:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1350:22:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1279,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1291,1367,1387],"referencedDeclaration":1367,"src":"1331:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1331:42:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1278,"id":1288,"nodeType":"Return","src":"1324:49:7"}]}]},"documentation":{"id":1272,"nodeType":"StructuredDocumentation","src":"1117:94:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation."},"id":1291,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1225:11:7","nodeType":"FunctionDefinition","parameters":{"id":1275,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1274,"mutability":"mutable","name":"value","nameLocation":"1245:5:7","nodeType":"VariableDeclaration","scope":1291,"src":"1237:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1273,"name":"uint256","nodeType":"ElementaryTypeName","src":"1237:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1236:15:7"},"returnParameters":{"id":1278,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1277,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1291,"src":"1275:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1276,"name":"string","nodeType":"ElementaryTypeName","src":"1275:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1274:15:7"},"scope":1388,"src":"1216:174:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1366,"nodeType":"Block","src":"1603:347:7","statements":[{"assignments":[1302],"declarations":[{"constant":false,"id":1302,"mutability":"mutable","name":"buffer","nameLocation":"1626:6:7","nodeType":"VariableDeclaration","scope":1366,"src":"1613:19:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes"},"typeName":{"id":1301,"name":"bytes","nodeType":"ElementaryTypeName","src":"1613:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"id":1311,"initialValue":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1309,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1307,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1645:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1306,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"1649:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1645:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"32","id":1308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1658:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"1645:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1304,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1635:9:7","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_bytes_memory_ptr_$","typeString":"function (uint256) pure returns (bytes memory)"},"typeName":{"id":1303,"name":"bytes","nodeType":"ElementaryTypeName","src":"1639:5:7","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}}},"id":1310,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1635:25:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"nodeType":"VariableDeclarationStatement","src":"1613:47:7"},{"expression":{"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1312,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"1670:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1314,"indexExpression":{"hexValue":"30","id":1313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1677:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1670:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1682:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_044852b2a670ade5407e78fb2863c51de9fcb96542a07186fe3aeda6bb8a116d","typeString":"literal_string \"0\""},"value":"0"},"src":"1670:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1317,"nodeType":"ExpressionStatement","src":"1670:15:7"},{"expression":{"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1318,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"1695:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1320,"indexExpression":{"hexValue":"31","id":1319,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1702:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1695:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"78","id":1321,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1707:3:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_7521d1cadbcfa91eec65aa16715b94ffc1c9654ba57ea2ef1a2127bca1127a83","typeString":"literal_string \"x\""},"value":"x"},"src":"1695:15:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1323,"nodeType":"ExpressionStatement","src":"1695:15:7"},{"body":{"id":1352,"nodeType":"Block","src":"1765:83:7","statements":[{"expression":{"id":1346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1338,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"1779:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":1340,"indexExpression":{"id":1339,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"1786:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1779:9:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1341,"name":"_SYMBOLS","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"1791:8:7","typeDescriptions":{"typeIdentifier":"t_bytes16","typeString":"bytes16"}},"id":1345,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1342,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"1800:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"hexValue":"307866","id":1343,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1808:3:7","typeDescriptions":{"typeIdentifier":"t_rational_15_by_1","typeString":"int_const 15"},"value":"0xf"},"src":"1800:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1791:21:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"src":"1779:33:7","typeDescriptions":{"typeIdentifier":"t_bytes1","typeString":"bytes1"}},"id":1347,"nodeType":"ExpressionStatement","src":"1779:33:7"},{"expression":{"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1348,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"1826:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1349,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1836:1:7","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"1826:11:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1351,"nodeType":"ExpressionStatement","src":"1826:11:7"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1334,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1332,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"1753:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"31","id":1333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1757:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1753:5:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1353,"initializationExpression":{"assignments":[1325],"declarations":[{"constant":false,"id":1325,"mutability":"mutable","name":"i","nameLocation":"1733:1:7","nodeType":"VariableDeclaration","scope":1353,"src":"1725:9:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1324,"name":"uint256","nodeType":"ElementaryTypeName","src":"1725:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1331,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1326,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1737:1:7","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1327,"name":"length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1296,"src":"1741:6:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1737:10:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1329,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1750:1:7","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1737:14:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1725:26:7"},"loopExpression":{"expression":{"id":1336,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"--","prefix":true,"src":"1760:3:7","subExpression":{"id":1335,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1325,"src":"1762:1:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1337,"nodeType":"ExpressionStatement","src":"1760:3:7"},"nodeType":"ForStatement","src":"1720:128:7"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1355,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"1865:5:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1356,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1874:1:7","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1865:10:7","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","id":1358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1877:34:7","typeDescriptions":{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""},"value":"Strings: hex length insufficient"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","typeString":"literal_string \"Strings: hex length insufficient\""}],"id":1354,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1857:7:7","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1857:55:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1360,"nodeType":"ExpressionStatement","src":"1857:55:7"},{"expression":{"arguments":[{"id":1363,"name":"buffer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1302,"src":"1936:6:7","typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":1362,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1929:6:7","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":1361,"name":"string","nodeType":"ElementaryTypeName","src":"1929:6:7","typeDescriptions":{}}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1929:14:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1300,"id":1365,"nodeType":"Return","src":"1922:21:7"}]},"documentation":{"id":1292,"nodeType":"StructuredDocumentation","src":"1396:112:7","text":" @dev Converts a `uint256` to its ASCII `string` hexadecimal representation with fixed length."},"id":1367,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"1522:11:7","nodeType":"FunctionDefinition","parameters":{"id":1297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1294,"mutability":"mutable","name":"value","nameLocation":"1542:5:7","nodeType":"VariableDeclaration","scope":1367,"src":"1534:13:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint256","nodeType":"ElementaryTypeName","src":"1534:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1296,"mutability":"mutable","name":"length","nameLocation":"1557:6:7","nodeType":"VariableDeclaration","scope":1367,"src":"1549:14:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1295,"name":"uint256","nodeType":"ElementaryTypeName","src":"1549:7:7","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1533:31:7"},"returnParameters":{"id":1300,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1299,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1367,"src":"1588:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1298,"name":"string","nodeType":"ElementaryTypeName","src":"1588:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1587:15:7"},"scope":1388,"src":"1513:437:7","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1386,"nodeType":"Block","src":"2175:76:7","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"id":1380,"name":"addr","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1370,"src":"2220:4:7","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1379,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2212:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":1378,"name":"uint160","nodeType":"ElementaryTypeName","src":"2212:7:7","typeDescriptions":{}}},"id":1381,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2212:13:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":1377,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2204:7:7","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1376,"name":"uint256","nodeType":"ElementaryTypeName","src":"2204:7:7","typeDescriptions":{}}},"id":1382,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2204:22:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1383,"name":"_ADDRESS_LENGTH","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"2228:15:7","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint8","typeString":"uint8"}],"id":1375,"name":"toHexString","nodeType":"Identifier","overloadedDeclarations":[1291,1367,1387],"referencedDeclaration":1367,"src":"2192:11:7","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_string_memory_ptr_$","typeString":"function (uint256,uint256) pure returns (string memory)"}},"id":1384,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2192:52:7","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":1374,"id":1385,"nodeType":"Return","src":"2185:59:7"}]},"documentation":{"id":1368,"nodeType":"StructuredDocumentation","src":"1956:141:7","text":" @dev Converts an `address` with fixed length of 20 bytes to its not checksummed ASCII `string` hexadecimal representation."},"id":1387,"implemented":true,"kind":"function","modifiers":[],"name":"toHexString","nameLocation":"2111:11:7","nodeType":"FunctionDefinition","parameters":{"id":1371,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1370,"mutability":"mutable","name":"addr","nameLocation":"2131:4:7","nodeType":"VariableDeclaration","scope":1387,"src":"2123:12:7","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1369,"name":"address","nodeType":"ElementaryTypeName","src":"2123:7:7","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2122:14:7"},"returnParameters":{"id":1374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1373,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1387,"src":"2160:13:7","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1372,"name":"string","nodeType":"ElementaryTypeName","src":"2160:6:7","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2159:15:7"},"scope":1388,"src":"2102:149:7","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1389,"src":"188:2065:7","usedErrors":[]}],"src":"101:2153:7"},"id":7},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/ERC165.sol","exportedSymbols":{"ERC165":[1412],"IERC165":[1424]},"id":1413,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1390,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"99:23:8"},{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","file":"./IERC165.sol","id":1391,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1413,"sourceUnit":1425,"src":"124:23:8","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":1393,"name":"IERC165","nodeType":"IdentifierPath","referencedDeclaration":1424,"src":"754:7:8"},"id":1394,"nodeType":"InheritanceSpecifier","src":"754:7:8"}],"canonicalName":"ERC165","contractDependencies":[],"contractKind":"contract","documentation":{"id":1392,"nodeType":"StructuredDocumentation","src":"149:576:8","text":" @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```\n Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation."},"fullyImplemented":true,"id":1412,"linearizedBaseContracts":[1412,1424],"name":"ERC165","nameLocation":"744:6:8","nodeType":"ContractDefinition","nodes":[{"baseFunctions":[1423],"body":{"id":1410,"nodeType":"Block","src":"920:64:8","statements":[{"expression":{"commonType":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1403,"name":"interfaceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"937:11:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"arguments":[{"id":1405,"name":"IERC165","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1424,"src":"957:7:8","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC165_$1424_$","typeString":"type(contract IERC165)"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_contract$_IERC165_$1424_$","typeString":"type(contract IERC165)"}],"id":1404,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"952:4:8","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1406,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"952:13:8","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_contract$_IERC165_$1424","typeString":"type(contract IERC165)"}},"id":1407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"interfaceId","nodeType":"MemberAccess","src":"952:25:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"src":"937:40:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1402,"id":1409,"nodeType":"Return","src":"930:47:8"}]},"documentation":{"id":1395,"nodeType":"StructuredDocumentation","src":"768:56:8","text":" @dev See {IERC165-supportsInterface}."},"functionSelector":"01ffc9a7","id":1411,"implemented":true,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"838:17:8","nodeType":"FunctionDefinition","overrides":{"id":1399,"nodeType":"OverrideSpecifier","overrides":[],"src":"896:8:8"},"parameters":{"id":1398,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1397,"mutability":"mutable","name":"interfaceId","nameLocation":"863:11:8","nodeType":"VariableDeclaration","scope":1411,"src":"856:18:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1396,"name":"bytes4","nodeType":"ElementaryTypeName","src":"856:6:8","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"855:20:8"},"returnParameters":{"id":1402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1411,"src":"914:4:8","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1400,"name":"bool","nodeType":"ElementaryTypeName","src":"914:4:8","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"913:6:8"},"scope":1412,"src":"829:155:8","stateMutability":"view","virtual":true,"visibility":"public"}],"scope":1413,"src":"726:260:8","usedErrors":[]}],"src":"99:888:8"},"id":8},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/introspection/IERC165.sol","exportedSymbols":{"IERC165":[1424]},"id":1425,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1414,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"100:23:9"},{"abstract":false,"baseContracts":[],"canonicalName":"IERC165","contractDependencies":[],"contractKind":"interface","documentation":{"id":1415,"nodeType":"StructuredDocumentation","src":"125:279:9","text":" @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."},"fullyImplemented":false,"id":1424,"linearizedBaseContracts":[1424],"name":"IERC165","nameLocation":"415:7:9","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":1416,"nodeType":"StructuredDocumentation","src":"429:340:9","text":" @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."},"functionSelector":"01ffc9a7","id":1423,"implemented":false,"kind":"function","modifiers":[],"name":"supportsInterface","nameLocation":"783:17:9","nodeType":"FunctionDefinition","parameters":{"id":1419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1418,"mutability":"mutable","name":"interfaceId","nameLocation":"808:11:9","nodeType":"VariableDeclaration","scope":1423,"src":"801:18:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"},"typeName":{"id":1417,"name":"bytes4","nodeType":"ElementaryTypeName","src":"801:6:9","typeDescriptions":{"typeIdentifier":"t_bytes4","typeString":"bytes4"}},"visibility":"internal"}],"src":"800:20:9"},"returnParameters":{"id":1422,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1421,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1423,"src":"844:4:9","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1420,"name":"bool","nodeType":"ElementaryTypeName","src":"844:4:9","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"843:6:9"},"scope":1424,"src":"774:76:9","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":1425,"src":"405:447:9","usedErrors":[]}],"src":"100:753:9"},"id":9},"@openzeppelin/contracts/utils/math/Math.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/Math.sol","exportedSymbols":{"Math":[2289]},"id":2290,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1426,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"103:23:10"},{"abstract":false,"baseContracts":[],"canonicalName":"Math","contractDependencies":[],"contractKind":"library","documentation":{"id":1427,"nodeType":"StructuredDocumentation","src":"128:73:10","text":" @dev Standard math utilities missing in the Solidity language."},"fullyImplemented":true,"id":2289,"linearizedBaseContracts":[2289],"name":"Math","nameLocation":"210:4:10","nodeType":"ContractDefinition","nodes":[{"canonicalName":"Math.Rounding","id":1431,"members":[{"id":1428,"name":"Down","nameLocation":"245:4:10","nodeType":"EnumValue","src":"245:4:10"},{"id":1429,"name":"Up","nameLocation":"287:2:10","nodeType":"EnumValue","src":"287:2:10"},{"id":1430,"name":"Zero","nameLocation":"318:4:10","nodeType":"EnumValue","src":"318:4:10"}],"name":"Rounding","nameLocation":"226:8:10","nodeType":"EnumDefinition","src":"221:122:10"},{"body":{"id":1448,"nodeType":"Block","src":"480:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1441,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"497:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1442,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"501:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"497:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1445,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1436,"src":"509:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"497:13:10","trueExpression":{"id":1444,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1434,"src":"505:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1440,"id":1447,"nodeType":"Return","src":"490:20:10"}]},"documentation":{"id":1432,"nodeType":"StructuredDocumentation","src":"349:59:10","text":" @dev Returns the largest of two numbers."},"id":1449,"implemented":true,"kind":"function","modifiers":[],"name":"max","nameLocation":"422:3:10","nodeType":"FunctionDefinition","parameters":{"id":1437,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1434,"mutability":"mutable","name":"a","nameLocation":"434:1:10","nodeType":"VariableDeclaration","scope":1449,"src":"426:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1433,"name":"uint256","nodeType":"ElementaryTypeName","src":"426:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1436,"mutability":"mutable","name":"b","nameLocation":"445:1:10","nodeType":"VariableDeclaration","scope":1449,"src":"437:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1435,"name":"uint256","nodeType":"ElementaryTypeName","src":"437:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"425:22:10"},"returnParameters":{"id":1440,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1439,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1449,"src":"471:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1438,"name":"uint256","nodeType":"ElementaryTypeName","src":"471:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"470:9:10"},"scope":2289,"src":"413:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1466,"nodeType":"Block","src":"655:37:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1461,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1459,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"672:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1460,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"676:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"672:5:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"id":1463,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1454,"src":"684:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1464,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"672:13:10","trueExpression":{"id":1462,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1452,"src":"680:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1458,"id":1465,"nodeType":"Return","src":"665:20:10"}]},"documentation":{"id":1450,"nodeType":"StructuredDocumentation","src":"523:60:10","text":" @dev Returns the smallest of two numbers."},"id":1467,"implemented":true,"kind":"function","modifiers":[],"name":"min","nameLocation":"597:3:10","nodeType":"FunctionDefinition","parameters":{"id":1455,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1452,"mutability":"mutable","name":"a","nameLocation":"609:1:10","nodeType":"VariableDeclaration","scope":1467,"src":"601:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1451,"name":"uint256","nodeType":"ElementaryTypeName","src":"601:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1454,"mutability":"mutable","name":"b","nameLocation":"620:1:10","nodeType":"VariableDeclaration","scope":1467,"src":"612:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1453,"name":"uint256","nodeType":"ElementaryTypeName","src":"612:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"600:22:10"},"returnParameters":{"id":1458,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1457,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1467,"src":"646:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1456,"name":"uint256","nodeType":"ElementaryTypeName","src":"646:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"645:9:10"},"scope":2289,"src":"588:104:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1489,"nodeType":"Block","src":"876:82:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1487,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1479,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1477,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"931:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"id":1478,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"935:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"931:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1480,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"930:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1486,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1481,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1470,"src":"941:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"id":1482,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1472,"src":"945:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"941:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1484,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"940:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"hexValue":"32","id":1485,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"950:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"940:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"930:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1476,"id":1488,"nodeType":"Return","src":"923:28:10"}]},"documentation":{"id":1468,"nodeType":"StructuredDocumentation","src":"698:102:10","text":" @dev Returns the average of two numbers. The result is rounded towards\n zero."},"id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"average","nameLocation":"814:7:10","nodeType":"FunctionDefinition","parameters":{"id":1473,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1470,"mutability":"mutable","name":"a","nameLocation":"830:1:10","nodeType":"VariableDeclaration","scope":1490,"src":"822:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1469,"name":"uint256","nodeType":"ElementaryTypeName","src":"822:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1472,"mutability":"mutable","name":"b","nameLocation":"841:1:10","nodeType":"VariableDeclaration","scope":1490,"src":"833:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1471,"name":"uint256","nodeType":"ElementaryTypeName","src":"833:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"821:22:10"},"returnParameters":{"id":1476,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1475,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1490,"src":"867:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1474,"name":"uint256","nodeType":"ElementaryTypeName","src":"867:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"866:9:10"},"scope":2289,"src":"805:153:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1514,"nodeType":"Block","src":"1228:123:10","statements":[{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1500,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1316:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1501,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1321:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1316:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1509,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1504,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"1330:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1505,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1334:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1330:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1507,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1329:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1508,"name":"b","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1495,"src":"1339:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1329:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1343:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"1329:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"1316:28:10","trueExpression":{"hexValue":"30","id":1503,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1325:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1499,"id":1513,"nodeType":"Return","src":"1309:35:10"}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"964:188:10","text":" @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."},"id":1515,"implemented":true,"kind":"function","modifiers":[],"name":"ceilDiv","nameLocation":"1166:7:10","nodeType":"FunctionDefinition","parameters":{"id":1496,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"a","nameLocation":"1182:1:10","nodeType":"VariableDeclaration","scope":1515,"src":"1174:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1492,"name":"uint256","nodeType":"ElementaryTypeName","src":"1174:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1495,"mutability":"mutable","name":"b","nameLocation":"1193:1:10","nodeType":"VariableDeclaration","scope":1515,"src":"1185:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1494,"name":"uint256","nodeType":"ElementaryTypeName","src":"1185:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1173:22:10"},"returnParameters":{"id":1499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1498,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1515,"src":"1219:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1497,"name":"uint256","nodeType":"ElementaryTypeName","src":"1219:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1218:9:10"},"scope":2289,"src":"1157:194:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1636,"nodeType":"Block","src":"1795:3797:10","statements":[{"id":1635,"nodeType":"UncheckedBlock","src":"1805:3781:10","statements":[{"assignments":[1528],"declarations":[{"constant":false,"id":1528,"mutability":"mutable","name":"prod0","nameLocation":"2134:5:10","nodeType":"VariableDeclaration","scope":1635,"src":"2126:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"2126:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1529,"nodeType":"VariableDeclarationStatement","src":"2126:13:10"},{"assignments":[1531],"declarations":[{"constant":false,"id":1531,"mutability":"mutable","name":"prod1","nameLocation":"2206:5:10","nodeType":"VariableDeclaration","scope":1635,"src":"2198:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1530,"name":"uint256","nodeType":"ElementaryTypeName","src":"2198:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1532,"nodeType":"VariableDeclarationStatement","src":"2198:13:10"},{"AST":{"nodeType":"YulBlock","src":"2278:157:10","statements":[{"nodeType":"YulVariableDeclaration","src":"2296:30:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2313:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"2316:1:10"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2323:1:10","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2319:3:10"},"nodeType":"YulFunctionCall","src":"2319:6:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"2306:6:10"},"nodeType":"YulFunctionCall","src":"2306:20:10"},"variables":[{"name":"mm","nodeType":"YulTypedName","src":"2300:2:10","type":""}]},{"nodeType":"YulAssignment","src":"2343:18:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"2356:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"2359:1:10"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"2352:3:10"},"nodeType":"YulFunctionCall","src":"2352:9:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"2343:5:10"}]},{"nodeType":"YulAssignment","src":"2378:43:10","value":{"arguments":[{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2395:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"2399:5:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2391:3:10"},"nodeType":"YulFunctionCall","src":"2391:14:10"},{"arguments":[{"name":"mm","nodeType":"YulIdentifier","src":"2410:2:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"2414:5:10"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2407:2:10"},"nodeType":"YulFunctionCall","src":"2407:13:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2387:3:10"},"nodeType":"YulFunctionCall","src":"2387:34:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"2378:5:10"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1528,"isOffset":false,"isSlot":false,"src":"2343:5:10","valueSize":1},{"declaration":1528,"isOffset":false,"isSlot":false,"src":"2399:5:10","valueSize":1},{"declaration":1528,"isOffset":false,"isSlot":false,"src":"2414:5:10","valueSize":1},{"declaration":1531,"isOffset":false,"isSlot":false,"src":"2378:5:10","valueSize":1},{"declaration":1518,"isOffset":false,"isSlot":false,"src":"2313:1:10","valueSize":1},{"declaration":1518,"isOffset":false,"isSlot":false,"src":"2356:1:10","valueSize":1},{"declaration":1520,"isOffset":false,"isSlot":false,"src":"2316:1:10","valueSize":1},{"declaration":1520,"isOffset":false,"isSlot":false,"src":"2359:1:10","valueSize":1}],"id":1533,"nodeType":"InlineAssembly","src":"2269:166:10"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1534,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"2516:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2525:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2516:10:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1542,"nodeType":"IfStatement","src":"2512:75:10","trueBody":{"id":1541,"nodeType":"Block","src":"2528:59:10","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1537,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"2553:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1538,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"2561:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2553:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1526,"id":1540,"nodeType":"Return","src":"2546:26:10"}]}},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1544,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"2697:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"id":1545,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"2711:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2697:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1543,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2689:7:10","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":1547,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2689:28:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1548,"nodeType":"ExpressionStatement","src":"2689:28:10"},{"assignments":[1550],"declarations":[{"constant":false,"id":1550,"mutability":"mutable","name":"remainder","nameLocation":"2981:9:10","nodeType":"VariableDeclaration","scope":1635,"src":"2973:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1549,"name":"uint256","nodeType":"ElementaryTypeName","src":"2973:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1551,"nodeType":"VariableDeclarationStatement","src":"2973:17:10"},{"AST":{"nodeType":"YulBlock","src":"3013:291:10","statements":[{"nodeType":"YulAssignment","src":"3082:38:10","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"3102:1:10"},{"name":"y","nodeType":"YulIdentifier","src":"3105:1:10"},{"name":"denominator","nodeType":"YulIdentifier","src":"3108:11:10"}],"functionName":{"name":"mulmod","nodeType":"YulIdentifier","src":"3095:6:10"},"nodeType":"YulFunctionCall","src":"3095:25:10"},"variableNames":[{"name":"remainder","nodeType":"YulIdentifier","src":"3082:9:10"}]},{"nodeType":"YulAssignment","src":"3202:41:10","value":{"arguments":[{"name":"prod1","nodeType":"YulIdentifier","src":"3215:5:10"},{"arguments":[{"name":"remainder","nodeType":"YulIdentifier","src":"3225:9:10"},{"name":"prod0","nodeType":"YulIdentifier","src":"3236:5:10"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3222:2:10"},"nodeType":"YulFunctionCall","src":"3222:20:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3211:3:10"},"nodeType":"YulFunctionCall","src":"3211:32:10"},"variableNames":[{"name":"prod1","nodeType":"YulIdentifier","src":"3202:5:10"}]},{"nodeType":"YulAssignment","src":"3260:30:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3273:5:10"},{"name":"remainder","nodeType":"YulIdentifier","src":"3280:9:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3269:3:10"},"nodeType":"YulFunctionCall","src":"3269:21:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3260:5:10"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1522,"isOffset":false,"isSlot":false,"src":"3108:11:10","valueSize":1},{"declaration":1528,"isOffset":false,"isSlot":false,"src":"3236:5:10","valueSize":1},{"declaration":1528,"isOffset":false,"isSlot":false,"src":"3260:5:10","valueSize":1},{"declaration":1528,"isOffset":false,"isSlot":false,"src":"3273:5:10","valueSize":1},{"declaration":1531,"isOffset":false,"isSlot":false,"src":"3202:5:10","valueSize":1},{"declaration":1531,"isOffset":false,"isSlot":false,"src":"3215:5:10","valueSize":1},{"declaration":1550,"isOffset":false,"isSlot":false,"src":"3082:9:10","valueSize":1},{"declaration":1550,"isOffset":false,"isSlot":false,"src":"3225:9:10","valueSize":1},{"declaration":1550,"isOffset":false,"isSlot":false,"src":"3280:9:10","valueSize":1},{"declaration":1518,"isOffset":false,"isSlot":false,"src":"3102:1:10","valueSize":1},{"declaration":1520,"isOffset":false,"isSlot":false,"src":"3105:1:10","valueSize":1}],"id":1552,"nodeType":"InlineAssembly","src":"3004:300:10"},{"assignments":[1554],"declarations":[{"constant":false,"id":1554,"mutability":"mutable","name":"twos","nameLocation":"3619:4:10","nodeType":"VariableDeclaration","scope":1635,"src":"3611:12:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1553,"name":"uint256","nodeType":"ElementaryTypeName","src":"3611:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1562,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1561,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1555,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"3626:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"&","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"~","prefix":true,"src":"3641:12:10","subExpression":{"id":1556,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"3642:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"hexValue":"31","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3656:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3641:16:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1560,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"3640:18:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3626:32:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3611:47:10"},{"AST":{"nodeType":"YulBlock","src":"3681:362:10","statements":[{"nodeType":"YulAssignment","src":"3746:37:10","value":{"arguments":[{"name":"denominator","nodeType":"YulIdentifier","src":"3765:11:10"},{"name":"twos","nodeType":"YulIdentifier","src":"3778:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3761:3:10"},"nodeType":"YulFunctionCall","src":"3761:22:10"},"variableNames":[{"name":"denominator","nodeType":"YulIdentifier","src":"3746:11:10"}]},{"nodeType":"YulAssignment","src":"3850:25:10","value":{"arguments":[{"name":"prod0","nodeType":"YulIdentifier","src":"3863:5:10"},{"name":"twos","nodeType":"YulIdentifier","src":"3870:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3859:3:10"},"nodeType":"YulFunctionCall","src":"3859:16:10"},"variableNames":[{"name":"prod0","nodeType":"YulIdentifier","src":"3850:5:10"}]},{"nodeType":"YulAssignment","src":"3990:39:10","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4010:1:10","type":"","value":"0"},{"name":"twos","nodeType":"YulIdentifier","src":"4013:4:10"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4006:3:10"},"nodeType":"YulFunctionCall","src":"4006:12:10"},{"name":"twos","nodeType":"YulIdentifier","src":"4020:4:10"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"4002:3:10"},"nodeType":"YulFunctionCall","src":"4002:23:10"},{"kind":"number","nodeType":"YulLiteral","src":"4027:1:10","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3998:3:10"},"nodeType":"YulFunctionCall","src":"3998:31:10"},"variableNames":[{"name":"twos","nodeType":"YulIdentifier","src":"3990:4:10"}]}]},"evmVersion":"london","externalReferences":[{"declaration":1522,"isOffset":false,"isSlot":false,"src":"3746:11:10","valueSize":1},{"declaration":1522,"isOffset":false,"isSlot":false,"src":"3765:11:10","valueSize":1},{"declaration":1528,"isOffset":false,"isSlot":false,"src":"3850:5:10","valueSize":1},{"declaration":1528,"isOffset":false,"isSlot":false,"src":"3863:5:10","valueSize":1},{"declaration":1554,"isOffset":false,"isSlot":false,"src":"3778:4:10","valueSize":1},{"declaration":1554,"isOffset":false,"isSlot":false,"src":"3870:4:10","valueSize":1},{"declaration":1554,"isOffset":false,"isSlot":false,"src":"3990:4:10","valueSize":1},{"declaration":1554,"isOffset":false,"isSlot":false,"src":"4013:4:10","valueSize":1},{"declaration":1554,"isOffset":false,"isSlot":false,"src":"4020:4:10","valueSize":1}],"id":1563,"nodeType":"InlineAssembly","src":"3672:371:10"},{"expression":{"id":1568,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1564,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"4109:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"|=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1567,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1565,"name":"prod1","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1531,"src":"4118:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1566,"name":"twos","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1554,"src":"4126:4:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4118:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4109:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1569,"nodeType":"ExpressionStatement","src":"4109:21:10"},{"assignments":[1571],"declarations":[{"constant":false,"id":1571,"mutability":"mutable","name":"inverse","nameLocation":"4456:7:10","nodeType":"VariableDeclaration","scope":1635,"src":"4448:15:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1570,"name":"uint256","nodeType":"ElementaryTypeName","src":"4448:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1578,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"33","id":1572,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4467:1:10","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1573,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"4471:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4467:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1575,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4466:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"^","rightExpression":{"hexValue":"32","id":1576,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4486:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4466:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4448:39:10"},{"expression":{"id":1585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1579,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"4704:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1584,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1580,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4715:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1583,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1581,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"4719:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1582,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"4733:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4719:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4715:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4704:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1586,"nodeType":"ExpressionStatement","src":"4704:36:10"},{"expression":{"id":1593,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1587,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"4773:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1592,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1588,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4784:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1591,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1589,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"4788:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1590,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"4802:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4788:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4784:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4773:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1594,"nodeType":"ExpressionStatement","src":"4773:36:10"},{"expression":{"id":1601,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1595,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"4843:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1600,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1596,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4854:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1597,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"4858:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1598,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"4872:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4858:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4854:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4843:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1602,"nodeType":"ExpressionStatement","src":"4843:36:10"},{"expression":{"id":1609,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1603,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"4913:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1608,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4924:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1605,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"4928:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1606,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"4942:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4928:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4924:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4913:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1610,"nodeType":"ExpressionStatement","src":"4913:36:10"},{"expression":{"id":1617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1611,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"4983:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1612,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4994:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1613,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"4998:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1614,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"5012:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4998:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4994:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4983:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1618,"nodeType":"ExpressionStatement","src":"4983:36:10"},{"expression":{"id":1625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1619,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"5054:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"*=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1624,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"32","id":1620,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5065:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1621,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"5069:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1622,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"5083:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5069:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5065:25:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5054:36:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1626,"nodeType":"ExpressionStatement","src":"5054:36:10"},{"expression":{"id":1631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1627,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"5524:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1630,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1628,"name":"prod0","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1528,"src":"5533:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1629,"name":"inverse","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1571,"src":"5541:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5533:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5524:24:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1632,"nodeType":"ExpressionStatement","src":"5524:24:10"},{"expression":{"id":1633,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1525,"src":"5569:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1526,"id":1634,"nodeType":"Return","src":"5562:13:10"}]}]},"documentation":{"id":1516,"nodeType":"StructuredDocumentation","src":"1357:305:10","text":" @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or denominator == 0\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv)\n with further edits by Uniswap Labs also under MIT license."},"id":1637,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"1676:6:10","nodeType":"FunctionDefinition","parameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1518,"mutability":"mutable","name":"x","nameLocation":"1700:1:10","nodeType":"VariableDeclaration","scope":1637,"src":"1692:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1517,"name":"uint256","nodeType":"ElementaryTypeName","src":"1692:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1520,"mutability":"mutable","name":"y","nameLocation":"1719:1:10","nodeType":"VariableDeclaration","scope":1637,"src":"1711:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1519,"name":"uint256","nodeType":"ElementaryTypeName","src":"1711:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1522,"mutability":"mutable","name":"denominator","nameLocation":"1738:11:10","nodeType":"VariableDeclaration","scope":1637,"src":"1730:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1521,"name":"uint256","nodeType":"ElementaryTypeName","src":"1730:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1682:73:10"},"returnParameters":{"id":1526,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1525,"mutability":"mutable","name":"result","nameLocation":"1787:6:10","nodeType":"VariableDeclaration","scope":1637,"src":"1779:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1524,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1778:16:10"},"scope":2289,"src":"1667:3925:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1680,"nodeType":"Block","src":"5872:189:10","statements":[{"assignments":[1653],"declarations":[{"constant":false,"id":1653,"mutability":"mutable","name":"result","nameLocation":"5890:6:10","nodeType":"VariableDeclaration","scope":1680,"src":"5882:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1652,"name":"uint256","nodeType":"ElementaryTypeName","src":"5882:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1659,"initialValue":{"arguments":[{"id":1655,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"5906:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1656,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"5909:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1657,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"5912:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1654,"name":"mulDiv","nodeType":"Identifier","overloadedDeclarations":[1637,1681],"referencedDeclaration":1637,"src":"5899:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1658,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5899:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5882:42:10"},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1671,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"},"id":1663,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1660,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1647,"src":"5938:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1661,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"5950:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1431_$","typeString":"type(enum Math.Rounding)"}},"id":1662,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1429,"src":"5950:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"}},"src":"5938:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1670,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1665,"name":"x","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1640,"src":"5972:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1666,"name":"y","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1642,"src":"5975:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1667,"name":"denominator","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1644,"src":"5978:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1664,"name":"mulmod","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-16,"src":"5965:6:10","typeDescriptions":{"typeIdentifier":"t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256,uint256) pure returns (uint256)"}},"id":1668,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5965:25:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5993:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5965:29:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5938:56:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1677,"nodeType":"IfStatement","src":"5934:98:10","trueBody":{"id":1676,"nodeType":"Block","src":"5996:36:10","statements":[{"expression":{"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1672,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"6010:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6020:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"6010:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1675,"nodeType":"ExpressionStatement","src":"6010:11:10"}]}},{"expression":{"id":1678,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1653,"src":"6048:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1651,"id":1679,"nodeType":"Return","src":"6041:13:10"}]},"documentation":{"id":1638,"nodeType":"StructuredDocumentation","src":"5598:121:10","text":" @notice Calculates x * y / denominator with full precision, following the selected rounding direction."},"id":1681,"implemented":true,"kind":"function","modifiers":[],"name":"mulDiv","nameLocation":"5733:6:10","nodeType":"FunctionDefinition","parameters":{"id":1648,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1640,"mutability":"mutable","name":"x","nameLocation":"5757:1:10","nodeType":"VariableDeclaration","scope":1681,"src":"5749:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1639,"name":"uint256","nodeType":"ElementaryTypeName","src":"5749:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1642,"mutability":"mutable","name":"y","nameLocation":"5776:1:10","nodeType":"VariableDeclaration","scope":1681,"src":"5768:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1641,"name":"uint256","nodeType":"ElementaryTypeName","src":"5768:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1644,"mutability":"mutable","name":"denominator","nameLocation":"5795:11:10","nodeType":"VariableDeclaration","scope":1681,"src":"5787:19:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1643,"name":"uint256","nodeType":"ElementaryTypeName","src":"5787:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1647,"mutability":"mutable","name":"rounding","nameLocation":"5825:8:10","nodeType":"VariableDeclaration","scope":1681,"src":"5816:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"},"typeName":{"id":1646,"nodeType":"UserDefinedTypeName","pathNode":{"id":1645,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1431,"src":"5816:8:10"},"referencedDeclaration":1431,"src":"5816:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"5739:100:10"},"returnParameters":{"id":1651,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1650,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1681,"src":"5863:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1649,"name":"uint256","nodeType":"ElementaryTypeName","src":"5863:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5862:9:10"},"scope":2289,"src":"5724:337:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1792,"nodeType":"Block","src":"6337:1585:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1691,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1689,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"6351:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":1690,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6356:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"6351:6:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1695,"nodeType":"IfStatement","src":"6347:45:10","trueBody":{"id":1694,"nodeType":"Block","src":"6359:33:10","statements":[{"expression":{"hexValue":"30","id":1692,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"6380:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":1688,"id":1693,"nodeType":"Return","src":"6373:8:10"}]}},{"assignments":[1697],"declarations":[{"constant":false,"id":1697,"mutability":"mutable","name":"result","nameLocation":"7079:6:10","nodeType":"VariableDeclaration","scope":1792,"src":"7071:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1696,"name":"uint256","nodeType":"ElementaryTypeName","src":"7071:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1706,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1705,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1698,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7088:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1703,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":1700,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"7099:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1699,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1961,1997],"referencedDeclaration":1961,"src":"7094:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1701,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7094:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1702,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7105:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7094:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1704,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7093:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7088:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7071:36:10"},{"id":1791,"nodeType":"UncheckedBlock","src":"7508:408:10","statements":[{"expression":{"id":1716,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1707,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7532:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1715,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1712,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1708,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7542:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1711,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1709,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"7551:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1710,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7555:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7551:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7542:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1713,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7541:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1714,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7566:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7541:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7532:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1717,"nodeType":"ExpressionStatement","src":"7532:35:10"},{"expression":{"id":1727,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1718,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7581:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1726,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1723,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1719,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7591:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1722,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1720,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"7600:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1721,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7604:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7600:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7591:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1724,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7590:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1725,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7615:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7590:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7581:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1728,"nodeType":"ExpressionStatement","src":"7581:35:10"},{"expression":{"id":1738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1729,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7630:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1737,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1734,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1730,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7640:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1731,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"7649:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1732,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7653:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7649:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7640:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1735,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7639:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7664:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7639:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7630:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1739,"nodeType":"ExpressionStatement","src":"7630:35:10"},{"expression":{"id":1749,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1740,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7679:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1748,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1745,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1741,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7689:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1744,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1742,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"7698:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1743,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7702:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7698:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7689:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1746,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7688:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1747,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7713:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7688:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7679:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1750,"nodeType":"ExpressionStatement","src":"7679:35:10"},{"expression":{"id":1760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1751,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7728:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1759,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1756,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1752,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7738:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1755,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1753,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"7747:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1754,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7751:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7747:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7738:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1757,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7737:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7762:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7737:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7728:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1761,"nodeType":"ExpressionStatement","src":"7728:35:10"},{"expression":{"id":1771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1762,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7777:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1770,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1767,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1763,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7787:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1766,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1764,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"7796:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7800:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7796:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7787:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1768,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7786:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1769,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7811:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7786:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7777:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1772,"nodeType":"ExpressionStatement","src":"7777:35:10"},{"expression":{"id":1782,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1773,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7826:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1781,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1778,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1774,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7836:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1777,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1775,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"7845:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1776,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7849:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7845:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7836:19:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1779,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7835:21:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1780,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7860:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7835:26:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7826:35:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1783,"nodeType":"ExpressionStatement","src":"7826:35:10"},{"expression":{"arguments":[{"id":1785,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7886:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1788,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1786,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1684,"src":"7894:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"/","rightExpression":{"id":1787,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1697,"src":"7898:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7894:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1784,"name":"min","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1467,"src":"7882:3:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256,uint256) pure returns (uint256)"}},"id":1789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7882:23:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1688,"id":1790,"nodeType":"Return","src":"7875:30:10"}]}]},"documentation":{"id":1682,"nodeType":"StructuredDocumentation","src":"6067:208:10","text":" @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded down.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."},"id":1793,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"6289:4:10","nodeType":"FunctionDefinition","parameters":{"id":1685,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1684,"mutability":"mutable","name":"a","nameLocation":"6302:1:10","nodeType":"VariableDeclaration","scope":1793,"src":"6294:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1683,"name":"uint256","nodeType":"ElementaryTypeName","src":"6294:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6293:11:10"},"returnParameters":{"id":1688,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1687,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1793,"src":"6328:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1686,"name":"uint256","nodeType":"ElementaryTypeName","src":"6328:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6327:9:10"},"scope":2289,"src":"6280:1642:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1828,"nodeType":"Block","src":"8098:161:10","statements":[{"id":1827,"nodeType":"UncheckedBlock","src":"8108:145:10","statements":[{"assignments":[1805],"declarations":[{"constant":false,"id":1805,"mutability":"mutable","name":"result","nameLocation":"8140:6:10","nodeType":"VariableDeclaration","scope":1827,"src":"8132:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1804,"name":"uint256","nodeType":"ElementaryTypeName","src":"8132:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1809,"initialValue":{"arguments":[{"id":1807,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"8154:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1806,"name":"sqrt","nodeType":"Identifier","overloadedDeclarations":[1793,1829],"referencedDeclaration":1793,"src":"8149:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1808,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8149:7:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8132:24:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1825,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1810,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"8177:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1820,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"},"id":1814,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1811,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1799,"src":"8187:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1812,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"8199:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1431_$","typeString":"type(enum Math.Rounding)"}},"id":1813,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1429,"src":"8199:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"}},"src":"8187:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1815,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"8214:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"id":1816,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1805,"src":"8223:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1818,"name":"a","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1796,"src":"8232:1:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8214:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8187:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1822,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8240:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"8187:54:10","trueExpression":{"hexValue":"31","id":1821,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8236:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1824,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"8186:56:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"8177:65:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1803,"id":1826,"nodeType":"Return","src":"8170:72:10"}]}]},"documentation":{"id":1794,"nodeType":"StructuredDocumentation","src":"7928:89:10","text":" @notice Calculates sqrt(a), following the selected rounding direction."},"id":1829,"implemented":true,"kind":"function","modifiers":[],"name":"sqrt","nameLocation":"8031:4:10","nodeType":"FunctionDefinition","parameters":{"id":1800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1796,"mutability":"mutable","name":"a","nameLocation":"8044:1:10","nodeType":"VariableDeclaration","scope":1829,"src":"8036:9:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1795,"name":"uint256","nodeType":"ElementaryTypeName","src":"8036:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1799,"mutability":"mutable","name":"rounding","nameLocation":"8056:8:10","nodeType":"VariableDeclaration","scope":1829,"src":"8047:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"},"typeName":{"id":1798,"nodeType":"UserDefinedTypeName","pathNode":{"id":1797,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1431,"src":"8047:8:10"},"referencedDeclaration":1431,"src":"8047:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"8035:30:10"},"returnParameters":{"id":1803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1829,"src":"8089:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1801,"name":"uint256","nodeType":"ElementaryTypeName","src":"8089:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8088:9:10"},"scope":2289,"src":"8022:237:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1960,"nodeType":"Block","src":"8444:922:10","statements":[{"assignments":[1838],"declarations":[{"constant":false,"id":1838,"mutability":"mutable","name":"result","nameLocation":"8462:6:10","nodeType":"VariableDeclaration","scope":1960,"src":"8454:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1837,"name":"uint256","nodeType":"ElementaryTypeName","src":"8454:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1840,"initialValue":{"hexValue":"30","id":1839,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8471:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"8454:18:10"},{"id":1957,"nodeType":"UncheckedBlock","src":"8482:855:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1845,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1843,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"8510:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":1842,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8519:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8510:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1844,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8525:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8510:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1855,"nodeType":"IfStatement","src":"8506:99:10","trueBody":{"id":1854,"nodeType":"Block","src":"8528:77:10","statements":[{"expression":{"id":1848,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1846,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"8546:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":1847,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8556:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8546:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1849,"nodeType":"ExpressionStatement","src":"8546:13:10"},{"expression":{"id":1852,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1850,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"8577:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"313238","id":1851,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8587:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"8577:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1853,"nodeType":"ExpressionStatement","src":"8577:13:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1858,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1856,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"8622:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":1857,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8631:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8622:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1859,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8636:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8622:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1870,"nodeType":"IfStatement","src":"8618:96:10","trueBody":{"id":1869,"nodeType":"Block","src":"8639:75:10","statements":[{"expression":{"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1861,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"8657:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":1862,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8667:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8657:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1864,"nodeType":"ExpressionStatement","src":"8657:12:10"},{"expression":{"id":1867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1865,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"8687:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":1866,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8697:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"8687:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1868,"nodeType":"ExpressionStatement","src":"8687:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1871,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"8731:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":1872,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8740:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8731:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8745:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8731:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1885,"nodeType":"IfStatement","src":"8727:96:10","trueBody":{"id":1884,"nodeType":"Block","src":"8748:75:10","statements":[{"expression":{"id":1878,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1876,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"8766:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":1877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8776:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8766:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1879,"nodeType":"ExpressionStatement","src":"8766:12:10"},{"expression":{"id":1882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1880,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"8796:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":1881,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8806:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"8796:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1883,"nodeType":"ExpressionStatement","src":"8796:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1886,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"8840:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":1887,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8849:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8840:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1889,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8854:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8840:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1900,"nodeType":"IfStatement","src":"8836:96:10","trueBody":{"id":1899,"nodeType":"Block","src":"8857:75:10","statements":[{"expression":{"id":1893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"8875:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":1892,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8885:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8875:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1894,"nodeType":"ExpressionStatement","src":"8875:12:10"},{"expression":{"id":1897,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1895,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"8905:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":1896,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8915:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"8905:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1898,"nodeType":"ExpressionStatement","src":"8905:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1905,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1903,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1901,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"8949:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":1902,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8958:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8949:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1904,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8962:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"8949:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1915,"nodeType":"IfStatement","src":"8945:93:10","trueBody":{"id":1914,"nodeType":"Block","src":"8965:73:10","statements":[{"expression":{"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1906,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"8983:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"38","id":1907,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"8993:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"8983:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1909,"nodeType":"ExpressionStatement","src":"8983:11:10"},{"expression":{"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1910,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"9012:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":1911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9022:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"9012:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1913,"nodeType":"ExpressionStatement","src":"9012:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1918,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"9055:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"34","id":1917,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9064:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9055:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9068:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9055:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1930,"nodeType":"IfStatement","src":"9051:93:10","trueBody":{"id":1929,"nodeType":"Block","src":"9071:73:10","statements":[{"expression":{"id":1923,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1921,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"9089:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"34","id":1922,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9099:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9089:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1924,"nodeType":"ExpressionStatement","src":"9089:11:10"},{"expression":{"id":1927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1925,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"9118:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":1926,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9128:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"9118:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1928,"nodeType":"ExpressionStatement","src":"9118:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1931,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"9161:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"32","id":1932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9170:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9161:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1934,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9174:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9161:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1945,"nodeType":"IfStatement","src":"9157:93:10","trueBody":{"id":1944,"nodeType":"Block","src":"9177:73:10","statements":[{"expression":{"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1936,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"9195:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"32","id":1937,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9205:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9195:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1939,"nodeType":"ExpressionStatement","src":"9195:11:10"},{"expression":{"id":1942,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1940,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"9224:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":1941,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9234:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"9224:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1943,"nodeType":"ExpressionStatement","src":"9224:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1950,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1948,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1946,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1832,"src":"9267:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"31","id":1947,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9276:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9267:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1949,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9280:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"9267:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1956,"nodeType":"IfStatement","src":"9263:64:10","trueBody":{"id":1955,"nodeType":"Block","src":"9283:44:10","statements":[{"expression":{"id":1953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1951,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"9301:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":1952,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9311:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"9301:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1954,"nodeType":"ExpressionStatement","src":"9301:11:10"}]}}]},{"expression":{"id":1958,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1838,"src":"9353:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1836,"id":1959,"nodeType":"Return","src":"9346:13:10"}]},"documentation":{"id":1830,"nodeType":"StructuredDocumentation","src":"8265:113:10","text":" @dev Return the log in base 2, rounded down, of a positive value.\n Returns 0 if given 0."},"id":1961,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"8392:4:10","nodeType":"FunctionDefinition","parameters":{"id":1833,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1832,"mutability":"mutable","name":"value","nameLocation":"8405:5:10","nodeType":"VariableDeclaration","scope":1961,"src":"8397:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1831,"name":"uint256","nodeType":"ElementaryTypeName","src":"8397:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8396:15:10"},"returnParameters":{"id":1836,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1835,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1961,"src":"8435:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1834,"name":"uint256","nodeType":"ElementaryTypeName","src":"8435:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8434:9:10"},"scope":2289,"src":"8383:983:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1996,"nodeType":"Block","src":"9599:165:10","statements":[{"id":1995,"nodeType":"UncheckedBlock","src":"9609:149:10","statements":[{"assignments":[1973],"declarations":[{"constant":false,"id":1973,"mutability":"mutable","name":"result","nameLocation":"9641:6:10","nodeType":"VariableDeclaration","scope":1995,"src":"9633:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1972,"name":"uint256","nodeType":"ElementaryTypeName","src":"9633:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1977,"initialValue":{"arguments":[{"id":1975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"9655:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1974,"name":"log2","nodeType":"Identifier","overloadedDeclarations":[1961,1997],"referencedDeclaration":1961,"src":"9650:4:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":1976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9650:11:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9633:28:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1978,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"9682:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"},"id":1982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1979,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1967,"src":"9692:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1980,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"9704:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1431_$","typeString":"type(enum Math.Rounding)"}},"id":1981,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1429,"src":"9704:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"}},"src":"9692:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":1983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9719:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"id":1984,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1973,"src":"9724:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":1986,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1964,"src":"9733:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9719:19:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"9692:46:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1990,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9745:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"9692:54:10","trueExpression":{"hexValue":"31","id":1989,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9741:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":1992,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"9691:56:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"9682:65:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1971,"id":1994,"nodeType":"Return","src":"9675:72:10"}]}]},"documentation":{"id":1962,"nodeType":"StructuredDocumentation","src":"9372:142:10","text":" @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":1997,"implemented":true,"kind":"function","modifiers":[],"name":"log2","nameLocation":"9528:4:10","nodeType":"FunctionDefinition","parameters":{"id":1968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1964,"mutability":"mutable","name":"value","nameLocation":"9541:5:10","nodeType":"VariableDeclaration","scope":1997,"src":"9533:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1963,"name":"uint256","nodeType":"ElementaryTypeName","src":"9533:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1967,"mutability":"mutable","name":"rounding","nameLocation":"9557:8:10","nodeType":"VariableDeclaration","scope":1997,"src":"9548:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"},"typeName":{"id":1966,"nodeType":"UserDefinedTypeName","pathNode":{"id":1965,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1431,"src":"9548:8:10"},"referencedDeclaration":1431,"src":"9548:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"9532:34:10"},"returnParameters":{"id":1971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1970,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1997,"src":"9590:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1969,"name":"uint256","nodeType":"ElementaryTypeName","src":"9590:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9589:9:10"},"scope":2289,"src":"9519:245:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2125,"nodeType":"Block","src":"9951:828:10","statements":[{"assignments":[2006],"declarations":[{"constant":false,"id":2006,"mutability":"mutable","name":"result","nameLocation":"9969:6:10","nodeType":"VariableDeclaration","scope":2125,"src":"9961:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2005,"name":"uint256","nodeType":"ElementaryTypeName","src":"9961:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2008,"initialValue":{"hexValue":"30","id":2007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9978:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9961:18:10"},{"id":2122,"nodeType":"UncheckedBlock","src":"9989:761:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2013,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2009,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"10017:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2012,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2010,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10026:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10030:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10026:6:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10017:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2025,"nodeType":"IfStatement","src":"10013:99:10","trueBody":{"id":2024,"nodeType":"Block","src":"10034:78:10","statements":[{"expression":{"id":2018,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2014,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"10052:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"},"id":2017,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2015,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10061:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3634","id":2016,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10065:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10061:6:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1","typeString":"int_const 1000...(57 digits omitted)...0000"}},"src":"10052:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2019,"nodeType":"ExpressionStatement","src":"10052:15:10"},{"expression":{"id":2022,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2020,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"10085:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3634","id":2021,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10095:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"10085:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2023,"nodeType":"ExpressionStatement","src":"10085:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2026,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"10129:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2029,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2027,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10138:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2028,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10142:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10138:6:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10129:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2042,"nodeType":"IfStatement","src":"10125:99:10","trueBody":{"id":2041,"nodeType":"Block","src":"10146:78:10","statements":[{"expression":{"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2031,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"10164:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"},"id":2034,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2032,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10173:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3332","id":2033,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10177:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10173:6:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000000000000000000000000000_by_1","typeString":"int_const 1000...(25 digits omitted)...0000"}},"src":"10164:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2036,"nodeType":"ExpressionStatement","src":"10164:15:10"},{"expression":{"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2037,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"10197:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3332","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10207:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"10197:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2040,"nodeType":"ExpressionStatement","src":"10197:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2043,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"10241:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2046,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2044,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10250:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2045,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10254:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10250:6:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10241:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2059,"nodeType":"IfStatement","src":"10237:99:10","trueBody":{"id":2058,"nodeType":"Block","src":"10258:78:10","statements":[{"expression":{"id":2052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2048,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"10276:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"},"id":2051,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2049,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10285:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"3136","id":2050,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10289:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10285:6:10","typeDescriptions":{"typeIdentifier":"t_rational_10000000000000000_by_1","typeString":"int_const 10000000000000000"}},"src":"10276:15:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2053,"nodeType":"ExpressionStatement","src":"10276:15:10"},{"expression":{"id":2056,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2054,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"10309:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2055,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10319:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"10309:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2057,"nodeType":"ExpressionStatement","src":"10309:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2060,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"10353:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2063,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2061,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10362:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2062,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10366:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10362:5:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10353:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2076,"nodeType":"IfStatement","src":"10349:96:10","trueBody":{"id":2075,"nodeType":"Block","src":"10369:76:10","statements":[{"expression":{"id":2069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2065,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"10387:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"},"id":2068,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2066,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10396:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"38","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10400:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10396:5:10","typeDescriptions":{"typeIdentifier":"t_rational_100000000_by_1","typeString":"int_const 100000000"}},"src":"10387:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2070,"nodeType":"ExpressionStatement","src":"10387:14:10"},{"expression":{"id":2073,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2071,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"10419:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2072,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10429:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"10419:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2074,"nodeType":"ExpressionStatement","src":"10419:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2077,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"10462:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2080,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2078,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10471:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2079,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10475:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10471:5:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10462:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2093,"nodeType":"IfStatement","src":"10458:96:10","trueBody":{"id":2092,"nodeType":"Block","src":"10478:76:10","statements":[{"expression":{"id":2086,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2082,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"10496:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"},"id":2085,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10505:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"34","id":2084,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10509:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10505:5:10","typeDescriptions":{"typeIdentifier":"t_rational_10000_by_1","typeString":"int_const 10000"}},"src":"10496:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2087,"nodeType":"ExpressionStatement","src":"10496:14:10"},{"expression":{"id":2090,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2088,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"10528:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2089,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10538:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"10528:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2091,"nodeType":"ExpressionStatement","src":"10528:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2098,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2094,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"10571:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2097,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2095,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10580:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2096,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10584:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10580:5:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10571:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2110,"nodeType":"IfStatement","src":"10567:96:10","trueBody":{"id":2109,"nodeType":"Block","src":"10587:76:10","statements":[{"expression":{"id":2103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2099,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"10605:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"/=","rightHandSide":{"commonType":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"},"id":2102,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10614:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"32","id":2101,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10618:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10614:5:10","typeDescriptions":{"typeIdentifier":"t_rational_100_by_1","typeString":"int_const 100"}},"src":"10605:14:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2104,"nodeType":"ExpressionStatement","src":"10605:14:10"},{"expression":{"id":2107,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2105,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"10637:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2106,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10647:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"10637:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2108,"nodeType":"ExpressionStatement","src":"10637:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2111,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2000,"src":"10680:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"commonType":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"id":2114,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10689:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"hexValue":"31","id":2113,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10693:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10689:5:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"}},"src":"10680:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2121,"nodeType":"IfStatement","src":"10676:64:10","trueBody":{"id":2120,"nodeType":"Block","src":"10696:44:10","statements":[{"expression":{"id":2118,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2116,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"10714:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2117,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10724:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10714:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2119,"nodeType":"ExpressionStatement","src":"10714:11:10"}]}}]},{"expression":{"id":2123,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2006,"src":"10766:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2004,"id":2124,"nodeType":"Return","src":"10759:13:10"}]},"documentation":{"id":1998,"nodeType":"StructuredDocumentation","src":"9770:114:10","text":" @dev Return the log in base 10, rounded down, of a positive value.\n Returns 0 if given 0."},"id":2126,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"9898:5:10","nodeType":"FunctionDefinition","parameters":{"id":2001,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2000,"mutability":"mutable","name":"value","nameLocation":"9912:5:10","nodeType":"VariableDeclaration","scope":2126,"src":"9904:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1999,"name":"uint256","nodeType":"ElementaryTypeName","src":"9904:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9903:15:10"},"returnParameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2003,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2126,"src":"9942:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2002,"name":"uint256","nodeType":"ElementaryTypeName","src":"9942:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9941:9:10"},"scope":2289,"src":"9889:890:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2161,"nodeType":"Block","src":"11014:165:10","statements":[{"id":2160,"nodeType":"UncheckedBlock","src":"11024:149:10","statements":[{"assignments":[2138],"declarations":[{"constant":false,"id":2138,"mutability":"mutable","name":"result","nameLocation":"11056:6:10","nodeType":"VariableDeclaration","scope":2160,"src":"11048:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2137,"name":"uint256","nodeType":"ElementaryTypeName","src":"11048:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2142,"initialValue":{"arguments":[{"id":2140,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"11071:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2139,"name":"log10","nodeType":"Identifier","overloadedDeclarations":[2126,2162],"referencedDeclaration":2126,"src":"11065:5:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2141,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11065:12:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"11048:29:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2143,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"11098:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2153,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"},"id":2147,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2144,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2132,"src":"11108:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2145,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"11120:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1431_$","typeString":"type(enum Math.Rounding)"}},"id":2146,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1429,"src":"11120:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"}},"src":"11108:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2152,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2150,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"3130","id":2148,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11135:2:10","typeDescriptions":{"typeIdentifier":"t_rational_10_by_1","typeString":"int_const 10"},"value":"10"},"nodeType":"BinaryOperation","operator":"**","rightExpression":{"id":2149,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2138,"src":"11139:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2151,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2129,"src":"11148:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11135:18:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"11108:45:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2155,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11160:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2156,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"11108:53:10","trueExpression":{"hexValue":"31","id":2154,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11156:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2157,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"11107:55:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"11098:64:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2136,"id":2159,"nodeType":"Return","src":"11091:71:10"}]}]},"documentation":{"id":2127,"nodeType":"StructuredDocumentation","src":"10785:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2162,"implemented":true,"kind":"function","modifiers":[],"name":"log10","nameLocation":"10942:5:10","nodeType":"FunctionDefinition","parameters":{"id":2133,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2129,"mutability":"mutable","name":"value","nameLocation":"10956:5:10","nodeType":"VariableDeclaration","scope":2162,"src":"10948:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2128,"name":"uint256","nodeType":"ElementaryTypeName","src":"10948:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2132,"mutability":"mutable","name":"rounding","nameLocation":"10972:8:10","nodeType":"VariableDeclaration","scope":2162,"src":"10963:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"},"typeName":{"id":2131,"nodeType":"UserDefinedTypeName","pathNode":{"id":2130,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1431,"src":"10963:8:10"},"referencedDeclaration":1431,"src":"10963:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"10947:34:10"},"returnParameters":{"id":2136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2135,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2162,"src":"11005:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2134,"name":"uint256","nodeType":"ElementaryTypeName","src":"11005:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11004:9:10"},"scope":2289,"src":"10933:246:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2248,"nodeType":"Block","src":"11493:600:10","statements":[{"assignments":[2171],"declarations":[{"constant":false,"id":2171,"mutability":"mutable","name":"result","nameLocation":"11511:6:10","nodeType":"VariableDeclaration","scope":2248,"src":"11503:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2170,"name":"uint256","nodeType":"ElementaryTypeName","src":"11503:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2173,"initialValue":{"hexValue":"30","id":2172,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11520:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11503:18:10"},{"id":2245,"nodeType":"UncheckedBlock","src":"11531:533:10","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2178,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2176,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2174,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"11559:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"313238","id":2175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11568:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11559:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2177,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11574:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11559:16:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2188,"nodeType":"IfStatement","src":"11555:98:10","trueBody":{"id":2187,"nodeType":"Block","src":"11577:76:10","statements":[{"expression":{"id":2181,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"11595:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"313238","id":2180,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11605:3:10","typeDescriptions":{"typeIdentifier":"t_rational_128_by_1","typeString":"int_const 128"},"value":"128"},"src":"11595:13:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2182,"nodeType":"ExpressionStatement","src":"11595:13:10"},{"expression":{"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2183,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"11626:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"3136","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11636:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11626:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2186,"nodeType":"ExpressionStatement","src":"11626:12:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2193,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2191,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2189,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"11670:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3634","id":2190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11679:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11670:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2192,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11684:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11670:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2203,"nodeType":"IfStatement","src":"11666:95:10","trueBody":{"id":2202,"nodeType":"Block","src":"11687:74:10","statements":[{"expression":{"id":2196,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2194,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"11705:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3634","id":2195,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11715:2:10","typeDescriptions":{"typeIdentifier":"t_rational_64_by_1","typeString":"int_const 64"},"value":"64"},"src":"11705:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2197,"nodeType":"ExpressionStatement","src":"11705:12:10"},{"expression":{"id":2200,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2198,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"11735:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"38","id":2199,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11745:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11735:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2201,"nodeType":"ExpressionStatement","src":"11735:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2206,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"11778:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3332","id":2205,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11787:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11778:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2207,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11792:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11778:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2218,"nodeType":"IfStatement","src":"11774:95:10","trueBody":{"id":2217,"nodeType":"Block","src":"11795:74:10","statements":[{"expression":{"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2209,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"11813:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3332","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11823:2:10","typeDescriptions":{"typeIdentifier":"t_rational_32_by_1","typeString":"int_const 32"},"value":"32"},"src":"11813:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2212,"nodeType":"ExpressionStatement","src":"11813:12:10"},{"expression":{"id":2215,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2213,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"11843:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"34","id":2214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11853:1:10","typeDescriptions":{"typeIdentifier":"t_rational_4_by_1","typeString":"int_const 4"},"value":"4"},"src":"11843:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2216,"nodeType":"ExpressionStatement","src":"11843:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2221,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2219,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"11886:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"3136","id":2220,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11895:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11886:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11900:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11886:15:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2233,"nodeType":"IfStatement","src":"11882:95:10","trueBody":{"id":2232,"nodeType":"Block","src":"11903:74:10","statements":[{"expression":{"id":2226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2224,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"11921:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":">>=","rightHandSide":{"hexValue":"3136","id":2225,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11931:2:10","typeDescriptions":{"typeIdentifier":"t_rational_16_by_1","typeString":"int_const 16"},"value":"16"},"src":"11921:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2227,"nodeType":"ExpressionStatement","src":"11921:12:10"},{"expression":{"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2228,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"11951:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"32","id":2229,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11961:1:10","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"11951:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2231,"nodeType":"ExpressionStatement","src":"11951:11:10"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2236,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2165,"src":"11994:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">>","rightExpression":{"hexValue":"38","id":2235,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12003:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"11994:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":2237,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12007:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"11994:14:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2244,"nodeType":"IfStatement","src":"11990:64:10","trueBody":{"id":2243,"nodeType":"Block","src":"12010:44:10","statements":[{"expression":{"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2239,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"12028:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"+=","rightHandSide":{"hexValue":"31","id":2240,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12038:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"12028:11:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2242,"nodeType":"ExpressionStatement","src":"12028:11:10"}]}}]},{"expression":{"id":2246,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2171,"src":"12080:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2169,"id":2247,"nodeType":"Return","src":"12073:13:10"}]},"documentation":{"id":2163,"nodeType":"StructuredDocumentation","src":"11185:240:10","text":" @dev Return the log in base 256, rounded down, of a positive value.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."},"id":2249,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"11439:6:10","nodeType":"FunctionDefinition","parameters":{"id":2166,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2165,"mutability":"mutable","name":"value","nameLocation":"11454:5:10","nodeType":"VariableDeclaration","scope":2249,"src":"11446:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2164,"name":"uint256","nodeType":"ElementaryTypeName","src":"11446:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11445:15:10"},"returnParameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2168,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2249,"src":"11484:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"11484:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11483:9:10"},"scope":2289,"src":"11430:663:10","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":2287,"nodeType":"Block","src":"12329:173:10","statements":[{"id":2286,"nodeType":"UncheckedBlock","src":"12339:157:10","statements":[{"assignments":[2261],"declarations":[{"constant":false,"id":2261,"mutability":"mutable","name":"result","nameLocation":"12371:6:10","nodeType":"VariableDeclaration","scope":2286,"src":"12363:14:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2260,"name":"uint256","nodeType":"ElementaryTypeName","src":"12363:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2265,"initialValue":{"arguments":[{"id":2263,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"12387:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2262,"name":"log256","nodeType":"Identifier","overloadedDeclarations":[2249,2288],"referencedDeclaration":2249,"src":"12380:6:10","typeDescriptions":{"typeIdentifier":"t_function_internal_pure$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) pure returns (uint256)"}},"id":2264,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12380:13:10","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"12363:30:10"},{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2284,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2266,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"12414:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"+","rightExpression":{"components":[{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2279,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"},"id":2270,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2267,"name":"rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2255,"src":"12424:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":2268,"name":"Rounding","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1431,"src":"12436:8:10","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_Rounding_$1431_$","typeString":"type(enum Math.Rounding)"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"Up","nodeType":"MemberAccess","referencedDeclaration":1429,"src":"12436:11:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"}},"src":"12424:23:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"hexValue":"31","id":2271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12451:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"nodeType":"BinaryOperation","operator":"<<","rightExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2272,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2261,"src":"12457:6:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"38","id":2273,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12466:1:10","typeDescriptions":{"typeIdentifier":"t_rational_8_by_1","typeString":"int_const 8"},"value":"8"},"src":"12457:10:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":2275,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12456:12:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:17:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2277,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2252,"src":"12471:5:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12451:25:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"12424:52:10","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":2281,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12483:1:10","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"12424:60:10","trueExpression":{"hexValue":"31","id":2280,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12479:1:10","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}}],"id":2283,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"12423:62:10","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"12414:71:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2259,"id":2285,"nodeType":"Return","src":"12407:78:10"}]}]},"documentation":{"id":2250,"nodeType":"StructuredDocumentation","src":"12099:143:10","text":" @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."},"id":2288,"implemented":true,"kind":"function","modifiers":[],"name":"log256","nameLocation":"12256:6:10","nodeType":"FunctionDefinition","parameters":{"id":2256,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2252,"mutability":"mutable","name":"value","nameLocation":"12271:5:10","nodeType":"VariableDeclaration","scope":2288,"src":"12263:13:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2251,"name":"uint256","nodeType":"ElementaryTypeName","src":"12263:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2255,"mutability":"mutable","name":"rounding","nameLocation":"12287:8:10","nodeType":"VariableDeclaration","scope":2288,"src":"12278:17:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"},"typeName":{"id":2254,"nodeType":"UserDefinedTypeName","pathNode":{"id":2253,"name":"Rounding","nodeType":"IdentifierPath","referencedDeclaration":1431,"src":"12278:8:10"},"referencedDeclaration":1431,"src":"12278:8:10","typeDescriptions":{"typeIdentifier":"t_enum$_Rounding_$1431","typeString":"enum Math.Rounding"}},"visibility":"internal"}],"src":"12262:34:10"},"returnParameters":{"id":2259,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2258,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2288,"src":"12320:7:10","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2257,"name":"uint256","nodeType":"ElementaryTypeName","src":"12320:7:10","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12319:9:10"},"scope":2289,"src":"12247:255:10","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":2290,"src":"202:12302:10","usedErrors":[]}],"src":"103:12402:10"},"id":10},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","exportedSymbols":{"EnumerableSet":[2902]},"id":2903,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2291,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"205:23:11"},{"abstract":false,"baseContracts":[],"canonicalName":"EnumerableSet","contractDependencies":[],"contractKind":"library","documentation":{"id":2292,"nodeType":"StructuredDocumentation","src":"230:1090:11","text":" @dev Library for managing\n https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive\n types.\n Sets have the following properties:\n - Elements are added, removed, and checked for existence in constant time\n (O(1)).\n - Elements are enumerated in O(n). No guarantees are made on the ordering.\n ```\n contract Example {\n     // Add the library methods\n     using EnumerableSet for EnumerableSet.AddressSet;\n     // Declare a set state variable\n     EnumerableSet.AddressSet private mySet;\n }\n ```\n As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`)\n and `uint256` (`UintSet`) are supported.\n [WARNING]\n ====\n Trying to delete such a structure from storage will likely result in data corruption, rendering the structure\n unusable.\n See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info.\n In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an\n array of EnumerableSet.\n ===="},"fullyImplemented":true,"id":2902,"linearizedBaseContracts":[2902],"name":"EnumerableSet","nameLocation":"1329:13:11","nodeType":"ContractDefinition","nodes":[{"canonicalName":"EnumerableSet.Set","id":2300,"members":[{"constant":false,"id":2295,"mutability":"mutable","name":"_values","nameLocation":"1853:7:11","nodeType":"VariableDeclaration","scope":2300,"src":"1843:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2293,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1843:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2294,"nodeType":"ArrayTypeName","src":"1843:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":2299,"mutability":"mutable","name":"_indexes","nameLocation":"2021:8:11","nodeType":"VariableDeclaration","scope":2300,"src":"1993:36:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"typeName":{"id":2298,"keyType":{"id":2296,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2001:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"1993:27:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"},"valueType":{"id":2297,"name":"uint256","nodeType":"ElementaryTypeName","src":"2012:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"internal"}],"name":"Set","nameLocation":"1796:3:11","nodeType":"StructDefinition","scope":2902,"src":"1789:247:11","visibility":"public"},{"body":{"id":2341,"nodeType":"Block","src":"2275:335:11","statements":[{"condition":{"id":2315,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2289:22:11","subExpression":{"arguments":[{"id":2312,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"2300:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},{"id":2313,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"2305:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2311,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"2290:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2300_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2314,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2290:21:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2339,"nodeType":"Block","src":"2567:37:11","statements":[{"expression":{"hexValue":"66616c7365","id":2337,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2588:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2310,"id":2338,"nodeType":"Return","src":"2581:12:11"}]},"id":2340,"nodeType":"IfStatement","src":"2285:319:11","trueBody":{"id":2336,"nodeType":"Block","src":"2313:248:11","statements":[{"expression":{"arguments":[{"id":2321,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"2344:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"expression":{"id":2316,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"2327:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2319,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2295,"src":"2327:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"push","nodeType":"MemberAccess","src":"2327:16:11","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$_t_bytes32_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer,bytes32)"}},"id":2322,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2327:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2323,"nodeType":"ExpressionStatement","src":"2327:23:11"},{"expression":{"id":2332,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2324,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"2485:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2327,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2299,"src":"2485:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2328,"indexExpression":{"id":2326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2306,"src":"2498:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"2485:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"expression":{"id":2329,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2304,"src":"2507:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2295,"src":"2507:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"2507:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2485:40:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2333,"nodeType":"ExpressionStatement","src":"2485:40:11"},{"expression":{"hexValue":"74727565","id":2334,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"2546:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2310,"id":2335,"nodeType":"Return","src":"2539:11:11"}]}}]},"documentation":{"id":2301,"nodeType":"StructuredDocumentation","src":"2042:159:11","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2342,"implemented":true,"kind":"function","modifiers":[],"name":"_add","nameLocation":"2215:4:11","nodeType":"FunctionDefinition","parameters":{"id":2307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2304,"mutability":"mutable","name":"set","nameLocation":"2232:3:11","nodeType":"VariableDeclaration","scope":2342,"src":"2220:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2303,"nodeType":"UserDefinedTypeName","pathNode":{"id":2302,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2300,"src":"2220:3:11"},"referencedDeclaration":2300,"src":"2220:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2306,"mutability":"mutable","name":"value","nameLocation":"2245:5:11","nodeType":"VariableDeclaration","scope":2342,"src":"2237:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2305,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2237:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2219:32:11"},"returnParameters":{"id":2310,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2309,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2342,"src":"2269:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2308,"name":"bool","nodeType":"ElementaryTypeName","src":"2269:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2268:6:11"},"scope":2902,"src":"2206:404:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2425,"nodeType":"Block","src":"2850:1316:11","statements":[{"assignments":[2354],"declarations":[{"constant":false,"id":2354,"mutability":"mutable","name":"valueIndex","nameLocation":"2968:10:11","nodeType":"VariableDeclaration","scope":2425,"src":"2960:18:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2960:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2359,"initialValue":{"baseExpression":{"expression":{"id":2355,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"2981:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2356,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2299,"src":"2981:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2358,"indexExpression":{"id":2357,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"2994:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2981:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2960:40:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2360,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"3015:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3029:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3015:15:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2423,"nodeType":"Block","src":"4123:37:11","statements":[{"expression":{"hexValue":"66616c7365","id":2421,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4144:5:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":2352,"id":2422,"nodeType":"Return","src":"4137:12:11"}]},"id":2424,"nodeType":"IfStatement","src":"3011:1149:11","trueBody":{"id":2420,"nodeType":"Block","src":"3032:1085:11","statements":[{"assignments":[2364],"declarations":[{"constant":false,"id":2364,"mutability":"mutable","name":"toDeleteIndex","nameLocation":"3392:13:11","nodeType":"VariableDeclaration","scope":2420,"src":"3384:21:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2363,"name":"uint256","nodeType":"ElementaryTypeName","src":"3384:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2368,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2367,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2365,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"3408:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2366,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3421:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3408:14:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3384:38:11"},{"assignments":[2370],"declarations":[{"constant":false,"id":2370,"mutability":"mutable","name":"lastIndex","nameLocation":"3444:9:11","nodeType":"VariableDeclaration","scope":2420,"src":"3436:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2369,"name":"uint256","nodeType":"ElementaryTypeName","src":"3436:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2376,"initialValue":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2375,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"expression":{"id":2371,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"3456:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2372,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2295,"src":"3456:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3456:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":2374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3477:1:11","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3456:22:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3436:42:11"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2377,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"3497:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"id":2378,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"3510:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3497:26:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2404,"nodeType":"IfStatement","src":"3493:398:11","trueBody":{"id":2403,"nodeType":"Block","src":"3525:366:11","statements":[{"assignments":[2381],"declarations":[{"constant":false,"id":2381,"mutability":"mutable","name":"lastValue","nameLocation":"3551:9:11","nodeType":"VariableDeclaration","scope":2403,"src":"3543:17:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2380,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3543:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":2386,"initialValue":{"baseExpression":{"expression":{"id":2382,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"3563:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2383,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2295,"src":"3563:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2385,"indexExpression":{"id":2384,"name":"lastIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2370,"src":"3575:9:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3563:22:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"3543:42:11"},{"expression":{"id":2393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2387,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"3685:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2390,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2295,"src":"3685:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2391,"indexExpression":{"id":2389,"name":"toDeleteIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2364,"src":"3697:13:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3685:26:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2392,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"3714:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"3685:38:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2394,"nodeType":"ExpressionStatement","src":"3685:38:11"},{"expression":{"id":2401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"expression":{"id":2395,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"3797:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2398,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2299,"src":"3797:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2399,"indexExpression":{"id":2397,"name":"lastValue","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2381,"src":"3810:9:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3797:23:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2400,"name":"valueIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2354,"src":"3823:10:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3797:36:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2402,"nodeType":"ExpressionStatement","src":"3797:36:11"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"expression":{"id":2405,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"3969:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2408,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2295,"src":"3969:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"pop","nodeType":"MemberAccess","src":"3969:15:11","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_bytes32_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_bytes32_$dyn_storage_ptr_$","typeString":"function (bytes32[] storage pointer)"}},"id":2410,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3969:17:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2411,"nodeType":"ExpressionStatement","src":"3969:17:11"},{"expression":{"id":2416,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"4054:26:11","subExpression":{"baseExpression":{"expression":{"id":2412,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2346,"src":"4061:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2413,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2299,"src":"4061:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2415,"indexExpression":{"id":2414,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2348,"src":"4074:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4061:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2417,"nodeType":"ExpressionStatement","src":"4054:26:11"},{"expression":{"hexValue":"74727565","id":2418,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4102:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":2352,"id":2419,"nodeType":"Return","src":"4095:11:11"}]}}]},"documentation":{"id":2343,"nodeType":"StructuredDocumentation","src":"2616:157:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2426,"implemented":true,"kind":"function","modifiers":[],"name":"_remove","nameLocation":"2787:7:11","nodeType":"FunctionDefinition","parameters":{"id":2349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2346,"mutability":"mutable","name":"set","nameLocation":"2807:3:11","nodeType":"VariableDeclaration","scope":2426,"src":"2795:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2345,"nodeType":"UserDefinedTypeName","pathNode":{"id":2344,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2300,"src":"2795:3:11"},"referencedDeclaration":2300,"src":"2795:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2348,"mutability":"mutable","name":"value","nameLocation":"2820:5:11","nodeType":"VariableDeclaration","scope":2426,"src":"2812:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2347,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2812:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2794:32:11"},"returnParameters":{"id":2352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2426,"src":"2844:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2350,"name":"bool","nodeType":"ElementaryTypeName","src":"2844:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2843:6:11"},"scope":2902,"src":"2778:1388:11","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":2444,"nodeType":"Block","src":"4326:48:11","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"expression":{"id":2437,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2430,"src":"4343:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2438,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_indexes","nodeType":"MemberAccess","referencedDeclaration":2299,"src":"4343:12:11","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_uint256_$","typeString":"mapping(bytes32 => uint256)"}},"id":2440,"indexExpression":{"id":2439,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2432,"src":"4356:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4343:19:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":2441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4366:1:11","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4343:24:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2436,"id":2443,"nodeType":"Return","src":"4336:31:11"}]},"documentation":{"id":2427,"nodeType":"StructuredDocumentation","src":"4172:70:11","text":" @dev Returns true if the value is in the set. O(1)."},"id":2445,"implemented":true,"kind":"function","modifiers":[],"name":"_contains","nameLocation":"4256:9:11","nodeType":"FunctionDefinition","parameters":{"id":2433,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2430,"mutability":"mutable","name":"set","nameLocation":"4278:3:11","nodeType":"VariableDeclaration","scope":2445,"src":"4266:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2429,"nodeType":"UserDefinedTypeName","pathNode":{"id":2428,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2300,"src":"4266:3:11"},"referencedDeclaration":2300,"src":"4266:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2432,"mutability":"mutable","name":"value","nameLocation":"4291:5:11","nodeType":"VariableDeclaration","scope":2445,"src":"4283:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2431,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4283:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4265:32:11"},"returnParameters":{"id":2436,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2435,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2445,"src":"4320:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2434,"name":"bool","nodeType":"ElementaryTypeName","src":"4320:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4319:6:11"},"scope":2902,"src":"4247:127:11","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2458,"nodeType":"Block","src":"4520:42:11","statements":[{"expression":{"expression":{"expression":{"id":2454,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2449,"src":"4537:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2455,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2295,"src":"4537:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"4537:18:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2453,"id":2457,"nodeType":"Return","src":"4530:25:11"}]},"documentation":{"id":2446,"nodeType":"StructuredDocumentation","src":"4380:70:11","text":" @dev Returns the number of values on the set. O(1)."},"id":2459,"implemented":true,"kind":"function","modifiers":[],"name":"_length","nameLocation":"4464:7:11","nodeType":"FunctionDefinition","parameters":{"id":2450,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2449,"mutability":"mutable","name":"set","nameLocation":"4484:3:11","nodeType":"VariableDeclaration","scope":2459,"src":"4472:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2448,"nodeType":"UserDefinedTypeName","pathNode":{"id":2447,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2300,"src":"4472:3:11"},"referencedDeclaration":2300,"src":"4472:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"4471:17:11"},"returnParameters":{"id":2453,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2452,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2459,"src":"4511:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2451,"name":"uint256","nodeType":"ElementaryTypeName","src":"4511:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4510:9:11"},"scope":2902,"src":"4455:107:11","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2475,"nodeType":"Block","src":"4980:42:11","statements":[{"expression":{"baseExpression":{"expression":{"id":2470,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2463,"src":"4997:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2471,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2295,"src":"4997:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"id":2473,"indexExpression":{"id":2472,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2465,"src":"5009:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4997:18:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2469,"id":2474,"nodeType":"Return","src":"4990:25:11"}]},"documentation":{"id":2460,"nodeType":"StructuredDocumentation","src":"4568:331:11","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2476,"implemented":true,"kind":"function","modifiers":[],"name":"_at","nameLocation":"4913:3:11","nodeType":"FunctionDefinition","parameters":{"id":2466,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2463,"mutability":"mutable","name":"set","nameLocation":"4929:3:11","nodeType":"VariableDeclaration","scope":2476,"src":"4917:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2462,"nodeType":"UserDefinedTypeName","pathNode":{"id":2461,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2300,"src":"4917:3:11"},"referencedDeclaration":2300,"src":"4917:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"},{"constant":false,"id":2465,"mutability":"mutable","name":"index","nameLocation":"4942:5:11","nodeType":"VariableDeclaration","scope":2476,"src":"4934:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2464,"name":"uint256","nodeType":"ElementaryTypeName","src":"4934:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4916:32:11"},"returnParameters":{"id":2469,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2468,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2476,"src":"4971:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2467,"name":"bytes32","nodeType":"ElementaryTypeName","src":"4971:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"4970:9:11"},"scope":2902,"src":"4904:118:11","stateMutability":"view","virtual":false,"visibility":"private"},{"body":{"id":2489,"nodeType":"Block","src":"5636:35:11","statements":[{"expression":{"expression":{"id":2486,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2480,"src":"5653:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set storage pointer"}},"id":2487,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_values","nodeType":"MemberAccess","referencedDeclaration":2295,"src":"5653:11:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage","typeString":"bytes32[] storage ref"}},"functionReturnParameters":2485,"id":2488,"nodeType":"Return","src":"5646:18:11"}]},"documentation":{"id":2477,"nodeType":"StructuredDocumentation","src":"5028:529:11","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2490,"implemented":true,"kind":"function","modifiers":[],"name":"_values","nameLocation":"5571:7:11","nodeType":"FunctionDefinition","parameters":{"id":2481,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2480,"mutability":"mutable","name":"set","nameLocation":"5591:3:11","nodeType":"VariableDeclaration","scope":2490,"src":"5579:15:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2479,"nodeType":"UserDefinedTypeName","pathNode":{"id":2478,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2300,"src":"5579:3:11"},"referencedDeclaration":2300,"src":"5579:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"src":"5578:17:11"},"returnParameters":{"id":2485,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2484,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2490,"src":"5618:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2482,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5618:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2483,"nodeType":"ArrayTypeName","src":"5618:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"5617:18:11"},"scope":2902,"src":"5562:109:11","stateMutability":"view","virtual":false,"visibility":"private"},{"canonicalName":"EnumerableSet.Bytes32Set","id":2494,"members":[{"constant":false,"id":2493,"mutability":"mutable","name":"_inner","nameLocation":"5728:6:11","nodeType":"VariableDeclaration","scope":2494,"src":"5724:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2492,"nodeType":"UserDefinedTypeName","pathNode":{"id":2491,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2300,"src":"5724:3:11"},"referencedDeclaration":2300,"src":"5724:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"Bytes32Set","nameLocation":"5703:10:11","nodeType":"StructDefinition","scope":2902,"src":"5696:45:11","visibility":"public"},{"body":{"id":2511,"nodeType":"Block","src":"5987:47:11","statements":[{"expression":{"arguments":[{"expression":{"id":2506,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2498,"src":"6009:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2507,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2493,"src":"6009:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2508,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2500,"src":"6021:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2505,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"6004:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2300_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2509,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6004:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2504,"id":2510,"nodeType":"Return","src":"5997:30:11"}]},"documentation":{"id":2495,"nodeType":"StructuredDocumentation","src":"5747:159:11","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2512,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"5920:3:11","nodeType":"FunctionDefinition","parameters":{"id":2501,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2498,"mutability":"mutable","name":"set","nameLocation":"5943:3:11","nodeType":"VariableDeclaration","scope":2512,"src":"5924:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2497,"nodeType":"UserDefinedTypeName","pathNode":{"id":2496,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":2494,"src":"5924:10:11"},"referencedDeclaration":2494,"src":"5924:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2500,"mutability":"mutable","name":"value","nameLocation":"5956:5:11","nodeType":"VariableDeclaration","scope":2512,"src":"5948:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2499,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5948:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5923:39:11"},"returnParameters":{"id":2504,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2503,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2512,"src":"5981:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2502,"name":"bool","nodeType":"ElementaryTypeName","src":"5981:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5980:6:11"},"scope":2902,"src":"5911:123:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2529,"nodeType":"Block","src":"6281:50:11","statements":[{"expression":{"arguments":[{"expression":{"id":2524,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2516,"src":"6306:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2525,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2493,"src":"6306:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2526,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2518,"src":"6318:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2523,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"6298:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2300_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2527,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6298:26:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2522,"id":2528,"nodeType":"Return","src":"6291:33:11"}]},"documentation":{"id":2513,"nodeType":"StructuredDocumentation","src":"6040:157:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2530,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"6211:6:11","nodeType":"FunctionDefinition","parameters":{"id":2519,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2516,"mutability":"mutable","name":"set","nameLocation":"6237:3:11","nodeType":"VariableDeclaration","scope":2530,"src":"6218:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2515,"nodeType":"UserDefinedTypeName","pathNode":{"id":2514,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":2494,"src":"6218:10:11"},"referencedDeclaration":2494,"src":"6218:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2518,"mutability":"mutable","name":"value","nameLocation":"6250:5:11","nodeType":"VariableDeclaration","scope":2530,"src":"6242:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2517,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6242:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6217:39:11"},"returnParameters":{"id":2522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2521,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2530,"src":"6275:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2520,"name":"bool","nodeType":"ElementaryTypeName","src":"6275:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6274:6:11"},"scope":2902,"src":"6202:129:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2547,"nodeType":"Block","src":"6498:52:11","statements":[{"expression":{"arguments":[{"expression":{"id":2542,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2534,"src":"6525:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2543,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2493,"src":"6525:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2544,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2536,"src":"6537:5:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2541,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"6515:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2300_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2545,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6515:28:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2540,"id":2546,"nodeType":"Return","src":"6508:35:11"}]},"documentation":{"id":2531,"nodeType":"StructuredDocumentation","src":"6337:70:11","text":" @dev Returns true if the value is in the set. O(1)."},"id":2548,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"6421:8:11","nodeType":"FunctionDefinition","parameters":{"id":2537,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2534,"mutability":"mutable","name":"set","nameLocation":"6449:3:11","nodeType":"VariableDeclaration","scope":2548,"src":"6430:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2533,"nodeType":"UserDefinedTypeName","pathNode":{"id":2532,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":2494,"src":"6430:10:11"},"referencedDeclaration":2494,"src":"6430:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2536,"mutability":"mutable","name":"value","nameLocation":"6462:5:11","nodeType":"VariableDeclaration","scope":2548,"src":"6454:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2535,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6454:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"6429:39:11"},"returnParameters":{"id":2540,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2539,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2548,"src":"6492:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2538,"name":"bool","nodeType":"ElementaryTypeName","src":"6492:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"6491:6:11"},"scope":2902,"src":"6412:138:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2562,"nodeType":"Block","src":"6703:43:11","statements":[{"expression":{"arguments":[{"expression":{"id":2558,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2552,"src":"6728:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2559,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2493,"src":"6728:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2557,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"6720:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2300_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2560,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6720:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2556,"id":2561,"nodeType":"Return","src":"6713:26:11"}]},"documentation":{"id":2549,"nodeType":"StructuredDocumentation","src":"6556:70:11","text":" @dev Returns the number of values in the set. O(1)."},"id":2563,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"6640:6:11","nodeType":"FunctionDefinition","parameters":{"id":2553,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2552,"mutability":"mutable","name":"set","nameLocation":"6666:3:11","nodeType":"VariableDeclaration","scope":2563,"src":"6647:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2551,"nodeType":"UserDefinedTypeName","pathNode":{"id":2550,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":2494,"src":"6647:10:11"},"referencedDeclaration":2494,"src":"6647:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"6646:24:11"},"returnParameters":{"id":2556,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2555,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2563,"src":"6694:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2554,"name":"uint256","nodeType":"ElementaryTypeName","src":"6694:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6693:9:11"},"scope":2902,"src":"6631:115:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2580,"nodeType":"Block","src":"7171:46:11","statements":[{"expression":{"arguments":[{"expression":{"id":2575,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2567,"src":"7192:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2576,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2493,"src":"7192:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2577,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2569,"src":"7204:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2574,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"7188:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2300_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2578,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7188:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":2573,"id":2579,"nodeType":"Return","src":"7181:29:11"}]},"documentation":{"id":2564,"nodeType":"StructuredDocumentation","src":"6752:331:11","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2581,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"7097:2:11","nodeType":"FunctionDefinition","parameters":{"id":2570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2567,"mutability":"mutable","name":"set","nameLocation":"7119:3:11","nodeType":"VariableDeclaration","scope":2581,"src":"7100:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2566,"nodeType":"UserDefinedTypeName","pathNode":{"id":2565,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":2494,"src":"7100:10:11"},"referencedDeclaration":2494,"src":"7100:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"},{"constant":false,"id":2569,"mutability":"mutable","name":"index","nameLocation":"7132:5:11","nodeType":"VariableDeclaration","scope":2581,"src":"7124:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2568,"name":"uint256","nodeType":"ElementaryTypeName","src":"7124:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7099:39:11"},"returnParameters":{"id":2573,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2572,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2581,"src":"7162:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":2571,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7162:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"7161:9:11"},"scope":2902,"src":"7088:129:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2610,"nodeType":"Block","src":"7838:219:11","statements":[{"assignments":[2595],"declarations":[{"constant":false,"id":2595,"mutability":"mutable","name":"store","nameLocation":"7865:5:11","nodeType":"VariableDeclaration","scope":2610,"src":"7848:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2593,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7848:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2594,"nodeType":"ArrayTypeName","src":"7848:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2600,"initialValue":{"arguments":[{"expression":{"id":2597,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2585,"src":"7881:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set storage pointer"}},"id":2598,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2493,"src":"7881:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2596,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"7873:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2300_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2599,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7873:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7848:44:11"},{"assignments":[2605],"declarations":[{"constant":false,"id":2605,"mutability":"mutable","name":"result","nameLocation":"7919:6:11","nodeType":"VariableDeclaration","scope":2610,"src":"7902:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2603,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7902:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2604,"nodeType":"ArrayTypeName","src":"7902:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2606,"nodeType":"VariableDeclarationStatement","src":"7902:23:11"},{"AST":{"nodeType":"YulBlock","src":"7988:39:11","statements":[{"nodeType":"YulAssignment","src":"8002:15:11","value":{"name":"store","nodeType":"YulIdentifier","src":"8012:5:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"8002:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2605,"isOffset":false,"isSlot":false,"src":"8002:6:11","valueSize":1},{"declaration":2595,"isOffset":false,"isSlot":false,"src":"8012:5:11","valueSize":1}],"id":2607,"nodeType":"InlineAssembly","src":"7979:48:11"},{"expression":{"id":2608,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2605,"src":"8044:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":2590,"id":2609,"nodeType":"Return","src":"8037:13:11"}]},"documentation":{"id":2582,"nodeType":"StructuredDocumentation","src":"7223:529:11","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2611,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"7766:6:11","nodeType":"FunctionDefinition","parameters":{"id":2586,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2585,"mutability":"mutable","name":"set","nameLocation":"7792:3:11","nodeType":"VariableDeclaration","scope":2611,"src":"7773:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":2584,"nodeType":"UserDefinedTypeName","pathNode":{"id":2583,"name":"Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":2494,"src":"7773:10:11"},"referencedDeclaration":2494,"src":"7773:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"internal"}],"src":"7772:24:11"},"returnParameters":{"id":2590,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2589,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2611,"src":"7820:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2587,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7820:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2588,"nodeType":"ArrayTypeName","src":"7820:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"7819:18:11"},"scope":2902,"src":"7757:300:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.AddressSet","id":2615,"members":[{"constant":false,"id":2614,"mutability":"mutable","name":"_inner","nameLocation":"8114:6:11","nodeType":"VariableDeclaration","scope":2615,"src":"8110:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2613,"nodeType":"UserDefinedTypeName","pathNode":{"id":2612,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2300,"src":"8110:3:11"},"referencedDeclaration":2300,"src":"8110:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"AddressSet","nameLocation":"8089:10:11","nodeType":"StructDefinition","scope":2902,"src":"8082:45:11","visibility":"public"},{"body":{"id":2641,"nodeType":"Block","src":"8373:74:11","statements":[{"expression":{"arguments":[{"expression":{"id":2627,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2619,"src":"8395:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2628,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2614,"src":"8395:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2635,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2621,"src":"8431:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8423:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2633,"name":"uint160","nodeType":"ElementaryTypeName","src":"8423:7:11","typeDescriptions":{}}},"id":2636,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8423:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8415:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2631,"name":"uint256","nodeType":"ElementaryTypeName","src":"8415:7:11","typeDescriptions":{}}},"id":2637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8415:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2630,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8407:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2629,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8407:7:11","typeDescriptions":{}}},"id":2638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8407:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2626,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"8390:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2300_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2639,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8390:50:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2625,"id":2640,"nodeType":"Return","src":"8383:57:11"}]},"documentation":{"id":2616,"nodeType":"StructuredDocumentation","src":"8133:159:11","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2642,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"8306:3:11","nodeType":"FunctionDefinition","parameters":{"id":2622,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2619,"mutability":"mutable","name":"set","nameLocation":"8329:3:11","nodeType":"VariableDeclaration","scope":2642,"src":"8310:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2618,"nodeType":"UserDefinedTypeName","pathNode":{"id":2617,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":2615,"src":"8310:10:11"},"referencedDeclaration":2615,"src":"8310:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2621,"mutability":"mutable","name":"value","nameLocation":"8342:5:11","nodeType":"VariableDeclaration","scope":2642,"src":"8334:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2620,"name":"address","nodeType":"ElementaryTypeName","src":"8334:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8309:39:11"},"returnParameters":{"id":2625,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2624,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2642,"src":"8367:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2623,"name":"bool","nodeType":"ElementaryTypeName","src":"8367:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8366:6:11"},"scope":2902,"src":"8297:150:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2668,"nodeType":"Block","src":"8694:77:11","statements":[{"expression":{"arguments":[{"expression":{"id":2654,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2646,"src":"8719:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2614,"src":"8719:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2662,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2648,"src":"8755:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2661,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8747:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2660,"name":"uint160","nodeType":"ElementaryTypeName","src":"8747:7:11","typeDescriptions":{}}},"id":2663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8747:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8739:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2658,"name":"uint256","nodeType":"ElementaryTypeName","src":"8739:7:11","typeDescriptions":{}}},"id":2664,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8739:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8731:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2656,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8731:7:11","typeDescriptions":{}}},"id":2665,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8731:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2653,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"8711:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2300_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2666,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8711:53:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2652,"id":2667,"nodeType":"Return","src":"8704:60:11"}]},"documentation":{"id":2643,"nodeType":"StructuredDocumentation","src":"8453:157:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2669,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"8624:6:11","nodeType":"FunctionDefinition","parameters":{"id":2649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2646,"mutability":"mutable","name":"set","nameLocation":"8650:3:11","nodeType":"VariableDeclaration","scope":2669,"src":"8631:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2645,"nodeType":"UserDefinedTypeName","pathNode":{"id":2644,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":2615,"src":"8631:10:11"},"referencedDeclaration":2615,"src":"8631:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2648,"mutability":"mutable","name":"value","nameLocation":"8663:5:11","nodeType":"VariableDeclaration","scope":2669,"src":"8655:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2647,"name":"address","nodeType":"ElementaryTypeName","src":"8655:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8630:39:11"},"returnParameters":{"id":2652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2669,"src":"8688:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2650,"name":"bool","nodeType":"ElementaryTypeName","src":"8688:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8687:6:11"},"scope":2902,"src":"8615:156:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2695,"nodeType":"Block","src":"8938:79:11","statements":[{"expression":{"arguments":[{"expression":{"id":2681,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2673,"src":"8965:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2682,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2614,"src":"8965:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"arguments":[{"arguments":[{"id":2689,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2675,"src":"9001:5:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2688,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8993:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2687,"name":"uint160","nodeType":"ElementaryTypeName","src":"8993:7:11","typeDescriptions":{}}},"id":2690,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8993:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2686,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8985:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2685,"name":"uint256","nodeType":"ElementaryTypeName","src":"8985:7:11","typeDescriptions":{}}},"id":2691,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8985:23:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8977:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2683,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8977:7:11","typeDescriptions":{}}},"id":2692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8977:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2680,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"8955:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2300_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2693,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"8955:55:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2679,"id":2694,"nodeType":"Return","src":"8948:62:11"}]},"documentation":{"id":2670,"nodeType":"StructuredDocumentation","src":"8777:70:11","text":" @dev Returns true if the value is in the set. O(1)."},"id":2696,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"8861:8:11","nodeType":"FunctionDefinition","parameters":{"id":2676,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2673,"mutability":"mutable","name":"set","nameLocation":"8889:3:11","nodeType":"VariableDeclaration","scope":2696,"src":"8870:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2672,"nodeType":"UserDefinedTypeName","pathNode":{"id":2671,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":2615,"src":"8870:10:11"},"referencedDeclaration":2615,"src":"8870:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2675,"mutability":"mutable","name":"value","nameLocation":"8902:5:11","nodeType":"VariableDeclaration","scope":2696,"src":"8894:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2674,"name":"address","nodeType":"ElementaryTypeName","src":"8894:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"8869:39:11"},"returnParameters":{"id":2679,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2678,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2696,"src":"8932:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2677,"name":"bool","nodeType":"ElementaryTypeName","src":"8932:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"8931:6:11"},"scope":2902,"src":"8852:165:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2710,"nodeType":"Block","src":"9170:43:11","statements":[{"expression":{"arguments":[{"expression":{"id":2706,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2700,"src":"9195:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2614,"src":"9195:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2705,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"9187:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2300_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9187:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2704,"id":2709,"nodeType":"Return","src":"9180:26:11"}]},"documentation":{"id":2697,"nodeType":"StructuredDocumentation","src":"9023:70:11","text":" @dev Returns the number of values in the set. O(1)."},"id":2711,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"9107:6:11","nodeType":"FunctionDefinition","parameters":{"id":2701,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2700,"mutability":"mutable","name":"set","nameLocation":"9133:3:11","nodeType":"VariableDeclaration","scope":2711,"src":"9114:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2699,"nodeType":"UserDefinedTypeName","pathNode":{"id":2698,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":2615,"src":"9114:10:11"},"referencedDeclaration":2615,"src":"9114:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"9113:24:11"},"returnParameters":{"id":2704,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2703,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2711,"src":"9161:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2702,"name":"uint256","nodeType":"ElementaryTypeName","src":"9161:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9160:9:11"},"scope":2902,"src":"9098:115:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2737,"nodeType":"Block","src":"9638:73:11","statements":[{"expression":{"arguments":[{"arguments":[{"arguments":[{"arguments":[{"expression":{"id":2729,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2715,"src":"9683:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2730,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2614,"src":"9683:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2731,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2717,"src":"9695:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2728,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"9679:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2300_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2732,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9679:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2727,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9671:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2726,"name":"uint256","nodeType":"ElementaryTypeName","src":"9671:7:11","typeDescriptions":{}}},"id":2733,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9671:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2725,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9663:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":2724,"name":"uint160","nodeType":"ElementaryTypeName","src":"9663:7:11","typeDescriptions":{}}},"id":2734,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9663:40:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint160","typeString":"uint160"}],"id":2723,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9655:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2722,"name":"address","nodeType":"ElementaryTypeName","src":"9655:7:11","typeDescriptions":{}}},"id":2735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"9655:49:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":2721,"id":2736,"nodeType":"Return","src":"9648:56:11"}]},"documentation":{"id":2712,"nodeType":"StructuredDocumentation","src":"9219:331:11","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2738,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"9564:2:11","nodeType":"FunctionDefinition","parameters":{"id":2718,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2715,"mutability":"mutable","name":"set","nameLocation":"9586:3:11","nodeType":"VariableDeclaration","scope":2738,"src":"9567:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2714,"nodeType":"UserDefinedTypeName","pathNode":{"id":2713,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":2615,"src":"9567:10:11"},"referencedDeclaration":2615,"src":"9567:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"},{"constant":false,"id":2717,"mutability":"mutable","name":"index","nameLocation":"9599:5:11","nodeType":"VariableDeclaration","scope":2738,"src":"9591:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2716,"name":"uint256","nodeType":"ElementaryTypeName","src":"9591:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9566:39:11"},"returnParameters":{"id":2721,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2720,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2738,"src":"9629:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2719,"name":"address","nodeType":"ElementaryTypeName","src":"9629:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"9628:9:11"},"scope":2902,"src":"9555:156:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2767,"nodeType":"Block","src":"10332:219:11","statements":[{"assignments":[2752],"declarations":[{"constant":false,"id":2752,"mutability":"mutable","name":"store","nameLocation":"10359:5:11","nodeType":"VariableDeclaration","scope":2767,"src":"10342:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2750,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10342:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2751,"nodeType":"ArrayTypeName","src":"10342:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2757,"initialValue":{"arguments":[{"expression":{"id":2754,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2742,"src":"10375:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet storage pointer"}},"id":2755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2614,"src":"10375:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2753,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"10367:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2300_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10367:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"10342:44:11"},{"assignments":[2762],"declarations":[{"constant":false,"id":2762,"mutability":"mutable","name":"result","nameLocation":"10413:6:11","nodeType":"VariableDeclaration","scope":2767,"src":"10396:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2760,"name":"address","nodeType":"ElementaryTypeName","src":"10396:7:11","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2761,"nodeType":"ArrayTypeName","src":"10396:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"id":2763,"nodeType":"VariableDeclarationStatement","src":"10396:23:11"},{"AST":{"nodeType":"YulBlock","src":"10482:39:11","statements":[{"nodeType":"YulAssignment","src":"10496:15:11","value":{"name":"store","nodeType":"YulIdentifier","src":"10506:5:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"10496:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2762,"isOffset":false,"isSlot":false,"src":"10496:6:11","valueSize":1},{"declaration":2752,"isOffset":false,"isSlot":false,"src":"10506:5:11","valueSize":1}],"id":2764,"nodeType":"InlineAssembly","src":"10473:48:11"},{"expression":{"id":2765,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2762,"src":"10538:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[] memory"}},"functionReturnParameters":2747,"id":2766,"nodeType":"Return","src":"10531:13:11"}]},"documentation":{"id":2739,"nodeType":"StructuredDocumentation","src":"9717:529:11","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2768,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"10260:6:11","nodeType":"FunctionDefinition","parameters":{"id":2743,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2742,"mutability":"mutable","name":"set","nameLocation":"10286:3:11","nodeType":"VariableDeclaration","scope":2768,"src":"10267:22:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet"},"typeName":{"id":2741,"nodeType":"UserDefinedTypeName","pathNode":{"id":2740,"name":"AddressSet","nodeType":"IdentifierPath","referencedDeclaration":2615,"src":"10267:10:11"},"referencedDeclaration":2615,"src":"10267:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_AddressSet_$2615_storage_ptr","typeString":"struct EnumerableSet.AddressSet"}},"visibility":"internal"}],"src":"10266:24:11"},"returnParameters":{"id":2747,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2746,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2768,"src":"10314:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":2744,"name":"address","nodeType":"ElementaryTypeName","src":"10314:7:11","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2745,"nodeType":"ArrayTypeName","src":"10314:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"10313:18:11"},"scope":2902,"src":"10251:300:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"canonicalName":"EnumerableSet.UintSet","id":2772,"members":[{"constant":false,"id":2771,"mutability":"mutable","name":"_inner","nameLocation":"10602:6:11","nodeType":"VariableDeclaration","scope":2772,"src":"10598:10:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"},"typeName":{"id":2770,"nodeType":"UserDefinedTypeName","pathNode":{"id":2769,"name":"Set","nodeType":"IdentifierPath","referencedDeclaration":2300,"src":"10598:3:11"},"referencedDeclaration":2300,"src":"10598:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage_ptr","typeString":"struct EnumerableSet.Set"}},"visibility":"internal"}],"name":"UintSet","nameLocation":"10580:7:11","nodeType":"StructDefinition","scope":2902,"src":"10573:42:11","visibility":"public"},{"body":{"id":2792,"nodeType":"Block","src":"10858:56:11","statements":[{"expression":{"arguments":[{"expression":{"id":2784,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2776,"src":"10880:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2785,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"10880:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2788,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2778,"src":"10900:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2787,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10892:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2786,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10892:7:11","typeDescriptions":{}}},"id":2789,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10892:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2783,"name":"_add","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2342,"src":"10875:4:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2300_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2790,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"10875:32:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2782,"id":2791,"nodeType":"Return","src":"10868:39:11"}]},"documentation":{"id":2773,"nodeType":"StructuredDocumentation","src":"10621:159:11","text":" @dev Add a value to a set. O(1).\n Returns true if the value was added to the set, that is if it was not\n already present."},"id":2793,"implemented":true,"kind":"function","modifiers":[],"name":"add","nameLocation":"10794:3:11","nodeType":"FunctionDefinition","parameters":{"id":2779,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2776,"mutability":"mutable","name":"set","nameLocation":"10814:3:11","nodeType":"VariableDeclaration","scope":2793,"src":"10798:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2775,"nodeType":"UserDefinedTypeName","pathNode":{"id":2774,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"10798:7:11"},"referencedDeclaration":2772,"src":"10798:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2778,"mutability":"mutable","name":"value","nameLocation":"10827:5:11","nodeType":"VariableDeclaration","scope":2793,"src":"10819:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2777,"name":"uint256","nodeType":"ElementaryTypeName","src":"10819:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10797:36:11"},"returnParameters":{"id":2782,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2781,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2793,"src":"10852:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2780,"name":"bool","nodeType":"ElementaryTypeName","src":"10852:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10851:6:11"},"scope":2902,"src":"10785:129:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2813,"nodeType":"Block","src":"11158:59:11","statements":[{"expression":{"arguments":[{"expression":{"id":2805,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2797,"src":"11183:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"11183:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2809,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2799,"src":"11203:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2808,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11195:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2807,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11195:7:11","typeDescriptions":{}}},"id":2810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11195:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2804,"name":"_remove","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2426,"src":"11175:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Set_$2300_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) returns (bool)"}},"id":2811,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11175:35:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2803,"id":2812,"nodeType":"Return","src":"11168:42:11"}]},"documentation":{"id":2794,"nodeType":"StructuredDocumentation","src":"10920:157:11","text":" @dev Removes a value from a set. O(1).\n Returns true if the value was removed from the set, that is if it was\n present."},"id":2814,"implemented":true,"kind":"function","modifiers":[],"name":"remove","nameLocation":"11091:6:11","nodeType":"FunctionDefinition","parameters":{"id":2800,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2797,"mutability":"mutable","name":"set","nameLocation":"11114:3:11","nodeType":"VariableDeclaration","scope":2814,"src":"11098:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2796,"nodeType":"UserDefinedTypeName","pathNode":{"id":2795,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"11098:7:11"},"referencedDeclaration":2772,"src":"11098:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2799,"mutability":"mutable","name":"value","nameLocation":"11127:5:11","nodeType":"VariableDeclaration","scope":2814,"src":"11119:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2798,"name":"uint256","nodeType":"ElementaryTypeName","src":"11119:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11097:36:11"},"returnParameters":{"id":2803,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2802,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2814,"src":"11152:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2801,"name":"bool","nodeType":"ElementaryTypeName","src":"11152:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11151:6:11"},"scope":2902,"src":"11082:135:11","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":2834,"nodeType":"Block","src":"11381:61:11","statements":[{"expression":{"arguments":[{"expression":{"id":2826,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2818,"src":"11408:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2827,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"11408:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"arguments":[{"id":2830,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2820,"src":"11428:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2829,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11420:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes32_$","typeString":"type(bytes32)"},"typeName":{"id":2828,"name":"bytes32","nodeType":"ElementaryTypeName","src":"11420:7:11","typeDescriptions":{}}},"id":2831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11420:14:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2825,"name":"_contains","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2445,"src":"11398:9:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2300_storage_ptr_$_t_bytes32_$returns$_t_bool_$","typeString":"function (struct EnumerableSet.Set storage pointer,bytes32) view returns (bool)"}},"id":2832,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11398:37:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2824,"id":2833,"nodeType":"Return","src":"11391:44:11"}]},"documentation":{"id":2815,"nodeType":"StructuredDocumentation","src":"11223:70:11","text":" @dev Returns true if the value is in the set. O(1)."},"id":2835,"implemented":true,"kind":"function","modifiers":[],"name":"contains","nameLocation":"11307:8:11","nodeType":"FunctionDefinition","parameters":{"id":2821,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2818,"mutability":"mutable","name":"set","nameLocation":"11332:3:11","nodeType":"VariableDeclaration","scope":2835,"src":"11316:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2817,"nodeType":"UserDefinedTypeName","pathNode":{"id":2816,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"11316:7:11"},"referencedDeclaration":2772,"src":"11316:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2820,"mutability":"mutable","name":"value","nameLocation":"11345:5:11","nodeType":"VariableDeclaration","scope":2835,"src":"11337:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2819,"name":"uint256","nodeType":"ElementaryTypeName","src":"11337:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11315:36:11"},"returnParameters":{"id":2824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2823,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2835,"src":"11375:4:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2822,"name":"bool","nodeType":"ElementaryTypeName","src":"11375:4:11","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"11374:6:11"},"scope":2902,"src":"11298:144:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2849,"nodeType":"Block","src":"11592:43:11","statements":[{"expression":{"arguments":[{"expression":{"id":2845,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2839,"src":"11617:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2846,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"11617:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2844,"name":"_length","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2459,"src":"11609:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2300_storage_ptr_$returns$_t_uint256_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (uint256)"}},"id":2847,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"11609:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2843,"id":2848,"nodeType":"Return","src":"11602:26:11"}]},"documentation":{"id":2836,"nodeType":"StructuredDocumentation","src":"11448:70:11","text":" @dev Returns the number of values in the set. O(1)."},"id":2850,"implemented":true,"kind":"function","modifiers":[],"name":"length","nameLocation":"11532:6:11","nodeType":"FunctionDefinition","parameters":{"id":2840,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2839,"mutability":"mutable","name":"set","nameLocation":"11555:3:11","nodeType":"VariableDeclaration","scope":2850,"src":"11539:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2838,"nodeType":"UserDefinedTypeName","pathNode":{"id":2837,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"11539:7:11"},"referencedDeclaration":2772,"src":"11539:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"11538:21:11"},"returnParameters":{"id":2843,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2842,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2850,"src":"11583:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2841,"name":"uint256","nodeType":"ElementaryTypeName","src":"11583:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11582:9:11"},"scope":2902,"src":"11523:112:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2870,"nodeType":"Block","src":"12057:55:11","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2864,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2854,"src":"12086:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"12086:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}},{"id":2866,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2856,"src":"12098:5:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2863,"name":"_at","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2476,"src":"12082:3:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2300_storage_ptr_$_t_uint256_$returns$_t_bytes32_$","typeString":"function (struct EnumerableSet.Set storage pointer,uint256) view returns (bytes32)"}},"id":2867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12082:22:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":2862,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12074:7:11","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":2861,"name":"uint256","nodeType":"ElementaryTypeName","src":"12074:7:11","typeDescriptions":{}}},"id":2868,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12074:31:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":2860,"id":2869,"nodeType":"Return","src":"12067:38:11"}]},"documentation":{"id":2851,"nodeType":"StructuredDocumentation","src":"11641:331:11","text":" @dev Returns the value stored at position `index` in the set. O(1).\n Note that there are no guarantees on the ordering of values inside the\n array, and it may change when more values are added or removed.\n Requirements:\n - `index` must be strictly less than {length}."},"id":2871,"implemented":true,"kind":"function","modifiers":[],"name":"at","nameLocation":"11986:2:11","nodeType":"FunctionDefinition","parameters":{"id":2857,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2854,"mutability":"mutable","name":"set","nameLocation":"12005:3:11","nodeType":"VariableDeclaration","scope":2871,"src":"11989:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2853,"nodeType":"UserDefinedTypeName","pathNode":{"id":2852,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"11989:7:11"},"referencedDeclaration":2772,"src":"11989:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"},{"constant":false,"id":2856,"mutability":"mutable","name":"index","nameLocation":"12018:5:11","nodeType":"VariableDeclaration","scope":2871,"src":"12010:13:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2855,"name":"uint256","nodeType":"ElementaryTypeName","src":"12010:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11988:36:11"},"returnParameters":{"id":2860,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2859,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2871,"src":"12048:7:11","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2858,"name":"uint256","nodeType":"ElementaryTypeName","src":"12048:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12047:9:11"},"scope":2902,"src":"11977:135:11","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":2900,"nodeType":"Block","src":"12730:219:11","statements":[{"assignments":[2885],"declarations":[{"constant":false,"id":2885,"mutability":"mutable","name":"store","nameLocation":"12757:5:11","nodeType":"VariableDeclaration","scope":2900,"src":"12740:22:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":2883,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12740:7:11","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":2884,"nodeType":"ArrayTypeName","src":"12740:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":2890,"initialValue":{"arguments":[{"expression":{"id":2887,"name":"set","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2875,"src":"12773:3:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet storage pointer"}},"id":2888,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"_inner","nodeType":"MemberAccess","referencedDeclaration":2771,"src":"12773:10:11","typeDescriptions":{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Set_$2300_storage","typeString":"struct EnumerableSet.Set storage ref"}],"id":2886,"name":"_values","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2490,"src":"12765:7:11","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Set_$2300_storage_ptr_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (struct EnumerableSet.Set storage pointer) view returns (bytes32[] memory)"}},"id":2889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"12765:19:11","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"12740:44:11"},{"assignments":[2895],"declarations":[{"constant":false,"id":2895,"mutability":"mutable","name":"result","nameLocation":"12811:6:11","nodeType":"VariableDeclaration","scope":2900,"src":"12794:23:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2893,"name":"uint256","nodeType":"ElementaryTypeName","src":"12794:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2894,"nodeType":"ArrayTypeName","src":"12794:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":2896,"nodeType":"VariableDeclarationStatement","src":"12794:23:11"},{"AST":{"nodeType":"YulBlock","src":"12880:39:11","statements":[{"nodeType":"YulAssignment","src":"12894:15:11","value":{"name":"store","nodeType":"YulIdentifier","src":"12904:5:11"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"12894:6:11"}]}]},"documentation":"@solidity memory-safe-assembly","evmVersion":"london","externalReferences":[{"declaration":2895,"isOffset":false,"isSlot":false,"src":"12894:6:11","valueSize":1},{"declaration":2885,"isOffset":false,"isSlot":false,"src":"12904:5:11","valueSize":1}],"id":2897,"nodeType":"InlineAssembly","src":"12871:48:11"},{"expression":{"id":2898,"name":"result","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2895,"src":"12936:6:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":2880,"id":2899,"nodeType":"Return","src":"12929:13:11"}]},"documentation":{"id":2872,"nodeType":"StructuredDocumentation","src":"12118:529:11","text":" @dev Return the entire set in an array\n WARNING: This operation will copy the entire storage to memory, which can be quite expensive. This is designed\n to mostly be used by view accessors that are queried without any gas fees. Developers should keep in mind that\n this function has an unbounded cost, and using it as part of a state-changing function may render the function\n uncallable if the set grows to a point where copying to memory consumes too much gas to fit in a block."},"id":2901,"implemented":true,"kind":"function","modifiers":[],"name":"values","nameLocation":"12661:6:11","nodeType":"FunctionDefinition","parameters":{"id":2876,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2875,"mutability":"mutable","name":"set","nameLocation":"12684:3:11","nodeType":"VariableDeclaration","scope":2901,"src":"12668:19:11","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":2874,"nodeType":"UserDefinedTypeName","pathNode":{"id":2873,"name":"UintSet","nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"12668:7:11"},"referencedDeclaration":2772,"src":"12668:7:11","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"internal"}],"src":"12667:21:11"},"returnParameters":{"id":2880,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2879,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2901,"src":"12712:16:11","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":2877,"name":"uint256","nodeType":"ElementaryTypeName","src":"12712:7:11","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2878,"nodeType":"ArrayTypeName","src":"12712:9:11","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"12711:18:11"},"scope":2902,"src":"12652:297:11","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":2903,"src":"1321:11630:11","usedErrors":[]}],"src":"205:12747:11"},"id":11},"contracts/ERC20.sol":{"ast":{"absolutePath":"contracts/ERC20.sol","exportedSymbols":{"Context":[1213],"ERC20":[1088],"IERC20":[1166],"IERC20Metadata":[1191],"Ownable":[501],"tradeToken":[2932]},"id":2933,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":2904,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"33:23:12"},{"absolutePath":"@openzeppelin/contracts/token/ERC20/ERC20.sol","file":"@openzeppelin/contracts/token/ERC20/ERC20.sol","id":2905,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2933,"sourceUnit":1089,"src":"58:55:12","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":2906,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2933,"sourceUnit":502,"src":"115:52:12","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":2907,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1088,"src":"192:5:12"},"id":2908,"nodeType":"InheritanceSpecifier","src":"192:5:12"},{"baseName":{"id":2909,"name":"Ownable","nodeType":"IdentifierPath","referencedDeclaration":501,"src":"199:7:12"},"id":2910,"nodeType":"InheritanceSpecifier","src":"199:7:12"}],"canonicalName":"tradeToken","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2932,"linearizedBaseContracts":[2932,501,1088,1191,1166,1213],"name":"tradeToken","nameLocation":"178:10:12","nodeType":"ContractDefinition","nodes":[{"body":{"id":2917,"nodeType":"Block","src":"256:2:12","statements":[]},"id":2918,"implemented":true,"kind":"constructor","modifiers":[{"arguments":[{"hexValue":"545241444520544f4b454e","id":2913,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"234:13:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_59d79fc75cbf1531a7e99ec1c1374bcb6f4f179cf70b013b2035e3657362a620","typeString":"literal_string \"TRADE TOKEN\""},"value":"TRADE TOKEN"},{"hexValue":"545244","id":2914,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"249:5:12","typeDescriptions":{"typeIdentifier":"t_stringliteral_3071c86cf81b3e6c5a38b39ea329aef0731bb017c077855d724773f847dc899f","typeString":"literal_string \"TRD\""},"value":"TRD"}],"id":2915,"kind":"baseConstructorSpecifier","modifierName":{"id":2912,"name":"ERC20","nodeType":"IdentifierPath","referencedDeclaration":1088,"src":"228:5:12"},"nodeType":"ModifierInvocation","src":"228:27:12"}],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2911,"nodeType":"ParameterList","parameters":[],"src":"225:2:12"},"returnParameters":{"id":2916,"nodeType":"ParameterList","parameters":[],"src":"256:0:12"},"scope":2932,"src":"214:44:12","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":2930,"nodeType":"Block","src":"315:36:12","statements":[{"expression":{"arguments":[{"id":2926,"name":"to","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2920,"src":"332:2:12","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2927,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2922,"src":"336:6:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2925,"name":"_mint","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":905,"src":"326:5:12","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,uint256)"}},"id":2928,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"326:17:12","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2929,"nodeType":"ExpressionStatement","src":"326:17:12"}]},"functionSelector":"40c10f19","id":2931,"implemented":true,"kind":"function","modifiers":[],"name":"mint","nameLocation":"273:4:12","nodeType":"FunctionDefinition","parameters":{"id":2923,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2920,"mutability":"mutable","name":"to","nameLocation":"286:2:12","nodeType":"VariableDeclaration","scope":2931,"src":"278:10:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2919,"name":"address","nodeType":"ElementaryTypeName","src":"278:7:12","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2922,"mutability":"mutable","name":"amount","nameLocation":"298:6:12","nodeType":"VariableDeclaration","scope":2931,"src":"290:14:12","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2921,"name":"uint256","nodeType":"ElementaryTypeName","src":"290:7:12","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"277:28:12"},"returnParameters":{"id":2924,"nodeType":"ParameterList","parameters":[],"src":"315:0:12"},"scope":2932,"src":"264:87:12","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":2933,"src":"169:185:12","usedErrors":[]}],"src":"33:321:12"},"id":12},"contracts/Lock.sol":{"ast":{"absolutePath":"contracts/Lock.sol","exportedSymbols":{"Lock":[3011]},"id":3012,"license":"UNLICENSED","nodeType":"SourceUnit","nodes":[{"id":2934,"literals":["solidity","^","0.8",".9"],"nodeType":"PragmaDirective","src":"39:23:13"},{"abstract":false,"baseContracts":[],"canonicalName":"Lock","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3011,"linearizedBaseContracts":[3011],"name":"Lock","nameLocation":"149:4:13","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"251c1aa3","id":2936,"mutability":"mutable","name":"unlockTime","nameLocation":"172:10:13","nodeType":"VariableDeclaration","scope":3011,"src":"160:22:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2935,"name":"uint","nodeType":"ElementaryTypeName","src":"160:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"public"},{"constant":false,"functionSelector":"8da5cb5b","id":2938,"mutability":"mutable","name":"owner","nameLocation":"211:5:13","nodeType":"VariableDeclaration","scope":3011,"src":"188:28:13","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"},"typeName":{"id":2937,"name":"address","nodeType":"ElementaryTypeName","src":"188:15:13","stateMutability":"payable","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"visibility":"public"},{"anonymous":false,"id":2944,"name":"Withdrawal","nameLocation":"229:10:13","nodeType":"EventDefinition","parameters":{"id":2943,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2940,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"245:6:13","nodeType":"VariableDeclaration","scope":2944,"src":"240:11:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2939,"name":"uint","nodeType":"ElementaryTypeName","src":"240:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2942,"indexed":false,"mutability":"mutable","name":"when","nameLocation":"258:4:13","nodeType":"VariableDeclaration","scope":2944,"src":"253:9:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2941,"name":"uint","nodeType":"ElementaryTypeName","src":"253:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"239:24:13"},"src":"223:41:13"},{"body":{"id":2969,"nodeType":"Block","src":"308:200:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2953,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2950,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"339:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2951,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"339:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":2952,"name":"_unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"357:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"339:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"556e6c6f636b2074696d652073686f756c6420626520696e2074686520667574757265","id":2954,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"382:37:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413","typeString":"literal_string \"Unlock time should be in the future\""},"value":"Unlock time should be in the future"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413","typeString":"literal_string \"Unlock time should be in the future\""}],"id":2949,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"318:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2955,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"318:111:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2956,"nodeType":"ExpressionStatement","src":"318:111:13"},{"expression":{"id":2959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2957,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"440:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":2958,"name":"_unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2946,"src":"453:11:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"440:24:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":2960,"nodeType":"ExpressionStatement","src":"440:24:13"},{"expression":{"id":2967,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2961,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"474:5:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"expression":{"id":2964,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"490:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"490:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":2963,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"482:8:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_payable_$","typeString":"type(address payable)"},"typeName":{"id":2962,"name":"address","nodeType":"ElementaryTypeName","src":"482:8:13","stateMutability":"payable","typeDescriptions":{}}},"id":2966,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"482:19:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"474:27:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":2968,"nodeType":"ExpressionStatement","src":"474:27:13"}]},"id":2970,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":2947,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2946,"mutability":"mutable","name":"_unlockTime","nameLocation":"287:11:13","nodeType":"VariableDeclaration","scope":2970,"src":"282:16:13","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2945,"name":"uint","nodeType":"ElementaryTypeName","src":"282:4:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"281:18:13"},"returnParameters":{"id":2948,"nodeType":"ParameterList","parameters":[],"src":"308:0:13"},"scope":3011,"src":"270:238:13","stateMutability":"payable","virtual":false,"visibility":"public"},{"body":{"id":3009,"nodeType":"Block","src":"541:463:13","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2974,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"765:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"765:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":2976,"name":"unlockTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2936,"src":"784:10:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"765:29:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f752063616e277420776974686472617720796574","id":2978,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"796:24:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8","typeString":"literal_string \"You can't withdraw yet\""},"value":"You can't withdraw yet"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8","typeString":"literal_string \"You can't withdraw yet\""}],"id":2973,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"757:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2979,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"757:64:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2980,"nodeType":"ExpressionStatement","src":"757:64:13"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2982,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"839:3:13","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2983,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"839:10:13","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":2984,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"853:5:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"src":"839:19:13","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"596f75206172656e277420746865206f776e6572","id":2986,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"860:22:13","typeDescriptions":{"typeIdentifier":"t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a","typeString":"literal_string \"You aren't the owner\""},"value":"You aren't the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a","typeString":"literal_string \"You aren't the owner\""}],"id":2981,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"831:7:13","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2987,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"831:52:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2988,"nodeType":"ExpressionStatement","src":"831:52:13"},{"eventCall":{"arguments":[{"expression":{"arguments":[{"id":2992,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"918:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Lock_$3011","typeString":"contract Lock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lock_$3011","typeString":"contract Lock"}],"id":2991,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"910:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":2990,"name":"address","nodeType":"ElementaryTypeName","src":"910:7:13","typeDescriptions":{}}},"id":2993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"910:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":2994,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"910:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":2995,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"933:5:13","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2996,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"timestamp","nodeType":"MemberAccess","src":"933:15:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":2989,"name":"Withdrawal","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2944,"src":"899:10:13","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,uint256)"}},"id":2997,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"899:50:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2998,"nodeType":"EmitStatement","src":"894:55:13"},{"expression":{"arguments":[{"expression":{"arguments":[{"id":3004,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"983:4:13","typeDescriptions":{"typeIdentifier":"t_contract$_Lock_$3011","typeString":"contract Lock"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_Lock_$3011","typeString":"contract Lock"}],"id":3003,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"975:7:13","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3002,"name":"address","nodeType":"ElementaryTypeName","src":"975:7:13","typeDescriptions":{}}},"id":3005,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"975:13:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3006,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"balance","nodeType":"MemberAccess","src":"975:21:13","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":2999,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2938,"src":"960:5:13","typeDescriptions":{"typeIdentifier":"t_address_payable","typeString":"address payable"}},"id":3001,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","src":"960:14:13","typeDescriptions":{"typeIdentifier":"t_function_transfer_nonpayable$_t_uint256_$returns$__$","typeString":"function (uint256)"}},"id":3007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"960:37:13","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3008,"nodeType":"ExpressionStatement","src":"960:37:13"}]},"functionSelector":"3ccfd60b","id":3010,"implemented":true,"kind":"function","modifiers":[],"name":"withdraw","nameLocation":"523:8:13","nodeType":"FunctionDefinition","parameters":{"id":2971,"nodeType":"ParameterList","parameters":[],"src":"531:2:13"},"returnParameters":{"id":2972,"nodeType":"ParameterList","parameters":[],"src":"541:0:13"},"scope":3011,"src":"514:490:13","stateMutability":"nonpayable","virtual":false,"visibility":"public"}],"scope":3012,"src":"140:866:13","usedErrors":[]}],"src":"39:968:13"},"id":13},"contracts/allowances.sol":{"ast":{"absolutePath":"contracts/allowances.sol","exportedSymbols":{"Allowances":[3184],"Context":[1213],"EnumerableSet":[2902],"Ownable":[501]},"id":3185,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":3013,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"37:23:14"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":3014,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3185,"sourceUnit":502,"src":"64:52:14","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":3015,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":3185,"sourceUnit":2903,"src":"118:65:14","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"Allowances","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":3184,"linearizedBaseContracts":[3184],"name":"Allowances","nameLocation":"196:10:14","nodeType":"ContractDefinition","nodes":[{"id":3019,"libraryName":{"id":3016,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":2902,"src":"220:13:14"},"nodeType":"UsingForDirective","src":"214:49:14","typeName":{"id":3018,"nodeType":"UserDefinedTypeName","pathNode":{"id":3017,"name":"EnumerableSet.Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":2494,"src":"238:24:14"},"referencedDeclaration":2494,"src":"238:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}}},{"constant":false,"id":3023,"mutability":"mutable","name":"_currencyAllowed","nameLocation":"307:16:14","nodeType":"VariableDeclaration","scope":3184,"src":"271:52:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"typeName":{"id":3022,"keyType":{"id":3020,"name":"bytes32","nodeType":"ElementaryTypeName","src":"279:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Mapping","src":"271:27:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"},"valueType":{"id":3021,"name":"address","nodeType":"ElementaryTypeName","src":"290:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}},"visibility":"private"},{"constant":false,"id":3026,"mutability":"mutable","name":"_totalCurrencies","nameLocation":"365:16:14","nodeType":"VariableDeclaration","scope":3184,"src":"332:49:14","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage","typeString":"struct EnumerableSet.Bytes32Set"},"typeName":{"id":3025,"nodeType":"UserDefinedTypeName","pathNode":{"id":3024,"name":"EnumerableSet.Bytes32Set","nodeType":"IdentifierPath","referencedDeclaration":2494,"src":"332:24:14"},"referencedDeclaration":2494,"src":"332:24:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage_ptr","typeString":"struct EnumerableSet.Bytes32Set"}},"visibility":"private"},{"body":{"id":3055,"nodeType":"Block","src":"466:200:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3039,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3034,"name":"currencyAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"485:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"512:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3036,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"504:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3035,"name":"address","nodeType":"ElementaryTypeName","src":"504:7:14","typeDescriptions":{}}},"id":3038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"504:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"485:29:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c6c6f77616e6365733a20546865205a65726f2041646472657373206973206e6f7420616c6c6f776564","id":3040,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"516:45:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_5da3a95acc8e6d5ca7b18b60537d16a9f25cf79235d81231c4e562d800763437","typeString":"literal_string \"Allowances: The Zero Address is not allowed\""},"value":"Allowances: The Zero Address is not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5da3a95acc8e6d5ca7b18b60537d16a9f25cf79235d81231c4e562d800763437","typeString":"literal_string \"Allowances: The Zero Address is not allowed\""}],"id":3033,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"477:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3041,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"477:85:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3042,"nodeType":"ExpressionStatement","src":"477:85:14"},{"expression":{"id":3047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3043,"name":"_currencyAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"573:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3045,"indexExpression":{"id":3044,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"590:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"573:26:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3046,"name":"currencyAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3030,"src":"602:15:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"573:44:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3048,"nodeType":"ExpressionStatement","src":"573:44:14"},{"expression":{"arguments":[{"id":3052,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3028,"src":"649:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3049,"name":"_totalCurrencies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"628:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2512,"src":"628:20:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2494_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$2494_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"628:30:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3054,"nodeType":"ExpressionStatement","src":"628:30:14"}]},"id":3056,"implemented":true,"kind":"function","modifiers":[],"name":"_addCurrency","nameLocation":"401:12:14","nodeType":"FunctionDefinition","parameters":{"id":3031,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3028,"mutability":"mutable","name":"currency","nameLocation":"422:8:14","nodeType":"VariableDeclaration","scope":3056,"src":"414:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3027,"name":"bytes32","nodeType":"ElementaryTypeName","src":"414:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3030,"mutability":"mutable","name":"currencyAddress","nameLocation":"440:15:14","nodeType":"VariableDeclaration","scope":3056,"src":"432:23:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3029,"name":"address","nodeType":"ElementaryTypeName","src":"432:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"413:43:14"},"returnParameters":{"id":3032,"nodeType":"ParameterList","parameters":[],"src":"466:0:14"},"scope":3184,"src":"392:274:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3083,"nodeType":"Block","src":"726:158:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3062,"name":"_currencyAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"745:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3064,"indexExpression":{"id":3063,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"762:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"745:26:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"783:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"775:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3065,"name":"address","nodeType":"ElementaryTypeName","src":"775:7:14","typeDescriptions":{}}},"id":3068,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"775:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"745:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"}],"id":3061,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"737:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$returns$__$","typeString":"function (bool) pure"}},"id":3070,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"737:49:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3071,"nodeType":"ExpressionStatement","src":"737:49:14"},{"expression":{"arguments":[{"id":3075,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"823:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":3072,"name":"_totalCurrencies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"799:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"remove","nodeType":"MemberAccess","referencedDeclaration":2530,"src":"799:23:14","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_Bytes32Set_$2494_storage_ptr_$_t_bytes32_$returns$_t_bool_$bound_to$_t_struct$_Bytes32Set_$2494_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,bytes32) returns (bool)"}},"id":3076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"799:33:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3077,"nodeType":"ExpressionStatement","src":"799:33:14"},{"expression":{"id":3081,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"843:33:14","subExpression":{"baseExpression":{"id":3078,"name":"_currencyAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"850:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3080,"indexExpression":{"id":3079,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3058,"src":"867:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"850:26:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3082,"nodeType":"ExpressionStatement","src":"843:33:14"}]},"id":3084,"implemented":true,"kind":"function","modifiers":[],"name":"_removeCurrency","nameLocation":"683:15:14","nodeType":"FunctionDefinition","parameters":{"id":3059,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3058,"mutability":"mutable","name":"currency","nameLocation":"707:8:14","nodeType":"VariableDeclaration","scope":3084,"src":"699:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3057,"name":"bytes32","nodeType":"ElementaryTypeName","src":"699:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"698:18:14"},"returnParameters":{"id":3060,"nodeType":"ParameterList","parameters":[],"src":"726:0:14"},"scope":3184,"src":"674:210:14","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3095,"nodeType":"Block","src":"964:52:14","statements":[{"expression":{"baseExpression":{"id":3091,"name":"_currencyAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"982:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3093,"indexExpression":{"id":3092,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3086,"src":"999:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"982:26:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":3090,"id":3094,"nodeType":"Return","src":"975:33:14"}]},"functionSelector":"46da743e","id":3096,"implemented":true,"kind":"function","modifiers":[],"name":"addressCurrency","nameLocation":"901:15:14","nodeType":"FunctionDefinition","parameters":{"id":3087,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3086,"mutability":"mutable","name":"currency","nameLocation":"925:8:14","nodeType":"VariableDeclaration","scope":3096,"src":"917:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3085,"name":"bytes32","nodeType":"ElementaryTypeName","src":"917:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"916:18:14"},"returnParameters":{"id":3090,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3089,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3096,"src":"955:7:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3088,"name":"address","nodeType":"ElementaryTypeName","src":"955:7:14","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"954:9:14"},"scope":3184,"src":"892:124:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3112,"nodeType":"Block","src":"1098:66:14","statements":[{"expression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3110,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3103,"name":"_currencyAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"1116:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3105,"indexExpression":{"id":3104,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3098,"src":"1133:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1116:26:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3108,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1154:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3107,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1146:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3106,"name":"address","nodeType":"ElementaryTypeName","src":"1146:7:14","typeDescriptions":{}}},"id":3109,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1146:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1116:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":3102,"id":3111,"nodeType":"Return","src":"1109:47:14"}]},"id":3113,"implemented":true,"kind":"function","modifiers":[],"name":"_allowedCurrency","nameLocation":"1036:16:14","nodeType":"FunctionDefinition","parameters":{"id":3099,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3098,"mutability":"mutable","name":"currency","nameLocation":"1061:8:14","nodeType":"VariableDeclaration","scope":3113,"src":"1053:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3097,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1053:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1052:18:14"},"returnParameters":{"id":3102,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3101,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3113,"src":"1093:4:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":3100,"name":"bool","nodeType":"ElementaryTypeName","src":"1093:4:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1092:6:14"},"scope":3184,"src":"1027:137:14","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3164,"nodeType":"Block","src":"1349:331:14","statements":[{"assignments":[3121],"declarations":[{"constant":false,"id":3121,"mutability":"mutable","name":"indexMax","nameLocation":"1368:8:14","nodeType":"VariableDeclaration","scope":3164,"src":"1360:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3120,"name":"uint256","nodeType":"ElementaryTypeName","src":"1360:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3125,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3122,"name":"_totalCurrencies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"1379:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3123,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2563,"src":"1379:23:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$2494_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Bytes32Set_$2494_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer) view returns (uint256)"}},"id":3124,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1379:25:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"1360:44:14"},{"assignments":[3130],"declarations":[{"constant":false,"id":3130,"mutability":"mutable","name":"currencies","nameLocation":"1432:10:14","nodeType":"VariableDeclaration","scope":3164,"src":"1415:27:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3128,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1415:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3129,"nodeType":"ArrayTypeName","src":"1415:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"id":3136,"initialValue":{"arguments":[{"id":3134,"name":"indexMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"1459:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3133,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"1445:13:14","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes32_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (bytes32[] memory)"},"typeName":{"baseType":{"id":3131,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1449:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3132,"nodeType":"ArrayTypeName","src":"1449:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}}},"id":3135,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1445:23:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"nodeType":"VariableDeclarationStatement","src":"1415:53:14"},{"body":{"id":3160,"nodeType":"Block","src":"1530:115:14","statements":[{"assignments":[3148],"declarations":[{"constant":false,"id":3148,"mutability":"mutable","name":"currency","nameLocation":"1553:8:14","nodeType":"VariableDeclaration","scope":3160,"src":"1545:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3147,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1545:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"id":3153,"initialValue":{"arguments":[{"id":3151,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"1584:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3149,"name":"_totalCurrencies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3026,"src":"1564:16:14","typeDescriptions":{"typeIdentifier":"t_struct$_Bytes32Set_$2494_storage","typeString":"struct EnumerableSet.Bytes32Set storage ref"}},"id":3150,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2581,"src":"1564:19:14","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_Bytes32Set_$2494_storage_ptr_$_t_uint256_$returns$_t_bytes32_$bound_to$_t_struct$_Bytes32Set_$2494_storage_ptr_$","typeString":"function (struct EnumerableSet.Bytes32Set storage pointer,uint256) view returns (bytes32)"}},"id":3152,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1564:26:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"VariableDeclarationStatement","src":"1545:45:14"},{"expression":{"id":3158,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3154,"name":"currencies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"1605:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"id":3156,"indexExpression":{"id":3155,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"1616:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"1605:17:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3157,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3148,"src":"1625:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"1605:28:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3159,"nodeType":"ExpressionStatement","src":"1605:28:14"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3141,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"1503:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3142,"name":"indexMax","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3121,"src":"1511:8:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"1503:16:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3161,"initializationExpression":{"assignments":[3138],"declarations":[{"constant":false,"id":3138,"mutability":"mutable","name":"index","nameLocation":"1492:5:14","nodeType":"VariableDeclaration","scope":3161,"src":"1484:13:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3137,"name":"uint256","nodeType":"ElementaryTypeName","src":"1484:7:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3140,"initialValue":{"hexValue":"30","id":3139,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1500:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"1484:17:14"},"loopExpression":{"expression":{"id":3145,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"1521:7:14","subExpression":{"id":3144,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3138,"src":"1523:5:14","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3146,"nodeType":"ExpressionStatement","src":"1521:7:14"},"nodeType":"ForStatement","src":"1479:166:14"},{"expression":{"id":3162,"name":"currencies","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3130,"src":"1662:10:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[] memory"}},"functionReturnParameters":3119,"id":3163,"nodeType":"Return","src":"1655:17:14"}]},"documentation":{"id":3114,"nodeType":"StructuredDocumentation","src":"1172:101:14","text":"@dev use this function to get all erc20 allowed as payment method in the contract."},"functionSelector":"a8ca9f68","id":3165,"implemented":true,"kind":"function","modifiers":[],"name":"allCurrenciesAllowed","nameLocation":"1288:20:14","nodeType":"FunctionDefinition","parameters":{"id":3115,"nodeType":"ParameterList","parameters":[],"src":"1308:2:14"},"returnParameters":{"id":3119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3165,"src":"1331:16:14","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_memory_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":3116,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1331:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":3117,"nodeType":"ArrayTypeName","src":"1331:9:14","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"1330:18:14"},"scope":3184,"src":"1279:401:14","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3182,"nodeType":"Block","src":"1732:126:14","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3177,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":3170,"name":"_currencyAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3023,"src":"1751:16:14","typeDescriptions":{"typeIdentifier":"t_mapping$_t_bytes32_$_t_address_$","typeString":"mapping(bytes32 => address)"}},"id":3172,"indexExpression":{"id":3171,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3167,"src":"1768:8:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1751:26:14","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":3175,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1789:1:14","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3174,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1781:7:14","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3173,"name":"address","nodeType":"ElementaryTypeName","src":"1781:7:14","typeDescriptions":{}}},"id":3176,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1781:10:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1751:40:14","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416c6c6f77616e6365733a20546869732063757272656e637920697473206e6f7420616c6c6f776564","id":3178,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1793:43:14","typeDescriptions":{"typeIdentifier":"t_stringliteral_11b337f246d75978dd49243a0e34d7383522ca75ad34568e9b03ecc1433910b0","typeString":"literal_string \"Allowances: This currency its not allowed\""},"value":"Allowances: This currency its not allowed"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_11b337f246d75978dd49243a0e34d7383522ca75ad34568e9b03ecc1433910b0","typeString":"literal_string \"Allowances: This currency its not allowed\""}],"id":3169,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1743:7:14","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":3179,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1743:95:14","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3180,"nodeType":"ExpressionStatement","src":"1743:95:14"},{"id":3181,"nodeType":"PlaceholderStatement","src":"1849:1:14"}]},"id":3183,"name":"currencyAllowed","nameLocation":"1697:15:14","nodeType":"ModifierDefinition","parameters":{"id":3168,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3167,"mutability":"mutable","name":"currency","nameLocation":"1721:8:14","nodeType":"VariableDeclaration","scope":3183,"src":"1713:16:14","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3166,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1713:7:14","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1712:18:14"},"src":"1688:170:14","virtual":false,"visibility":"internal"}],"scope":3185,"src":"187:1678:14","usedErrors":[]}],"src":"37:1828:14"},"id":14},"contracts/tradingInCrypto.sol":{"ast":{"absolutePath":"contracts/tradingInCrypto.sol","exportedSymbols":{"AccessControl":[315],"AllReadyAgreed":[3207],"Allowances":[3184],"AlreadyAddedBL":[3211],"Context":[1213],"CurrencyNotAllowed":[3205],"ERC165":[1412],"EnumerableSet":[2902],"IAccessControl":[388],"IERC165":[1424],"IERC20":[1166],"InvalidBuyer":[3201],"InvalidCallerAddress":[3203],"InvalidSeller":[3197],"InvalidTradeNumber":[3193],"InvalidTradeType":[3195],"InvalidTrader":[3199],"Math":[2289],"NotAcceptedYet":[3209],"NotBLAddedYet":[3213],"Ownable":[501],"Strings":[1388],"TradeCompleted":[3215],"tradingInCrypto":[4005],"tradingInCryptoStorage":[4315]},"id":4006,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":3186,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"32:23:15"},{"absolutePath":"contracts/tradingInCryptoStorage.sol","file":"./tradingInCryptoStorage.sol","id":3187,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4006,"sourceUnit":4316,"src":"59:38:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"contracts/allowances.sol","file":"./allowances.sol","id":3188,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4006,"sourceUnit":3185,"src":"99:26:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/token/ERC20/IERC20.sol","file":"@openzeppelin/contracts/token/ERC20/IERC20.sol","id":3189,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4006,"sourceUnit":1167,"src":"127:56:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/access/AccessControl.sol","file":"@openzeppelin/contracts/access/AccessControl.sol","id":3190,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4006,"sourceUnit":316,"src":"185:58:15","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","file":"@openzeppelin/contracts/utils/structs/EnumerableSet.sol","id":3191,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":4006,"sourceUnit":2903,"src":"245:65:15","symbolAliases":[],"unitAlias":""},{"id":3193,"name":"InvalidTradeNumber","nameLocation":"320:18:15","nodeType":"ErrorDefinition","parameters":{"id":3192,"nodeType":"ParameterList","parameters":[],"src":"338:2:15"},"src":"314:27:15"},{"id":3195,"name":"InvalidTradeType","nameLocation":"349:16:15","nodeType":"ErrorDefinition","parameters":{"id":3194,"nodeType":"ParameterList","parameters":[],"src":"365:2:15"},"src":"343:25:15"},{"id":3197,"name":"InvalidSeller","nameLocation":"376:13:15","nodeType":"ErrorDefinition","parameters":{"id":3196,"nodeType":"ParameterList","parameters":[],"src":"389:2:15"},"src":"370:22:15"},{"id":3199,"name":"InvalidTrader","nameLocation":"400:13:15","nodeType":"ErrorDefinition","parameters":{"id":3198,"nodeType":"ParameterList","parameters":[],"src":"413:2:15"},"src":"394:22:15"},{"id":3201,"name":"InvalidBuyer","nameLocation":"424:12:15","nodeType":"ErrorDefinition","parameters":{"id":3200,"nodeType":"ParameterList","parameters":[],"src":"436:2:15"},"src":"418:21:15"},{"id":3203,"name":"InvalidCallerAddress","nameLocation":"447:20:15","nodeType":"ErrorDefinition","parameters":{"id":3202,"nodeType":"ParameterList","parameters":[],"src":"467:2:15"},"src":"441:29:15"},{"id":3205,"name":"CurrencyNotAllowed","nameLocation":"478:18:15","nodeType":"ErrorDefinition","parameters":{"id":3204,"nodeType":"ParameterList","parameters":[],"src":"496:2:15"},"src":"472:27:15"},{"id":3207,"name":"AllReadyAgreed","nameLocation":"507:14:15","nodeType":"ErrorDefinition","parameters":{"id":3206,"nodeType":"ParameterList","parameters":[],"src":"521:2:15"},"src":"501:23:15"},{"id":3209,"name":"NotAcceptedYet","nameLocation":"532:14:15","nodeType":"ErrorDefinition","parameters":{"id":3208,"nodeType":"ParameterList","parameters":[],"src":"546:2:15"},"src":"526:23:15"},{"id":3211,"name":"AlreadyAddedBL","nameLocation":"557:14:15","nodeType":"ErrorDefinition","parameters":{"id":3210,"nodeType":"ParameterList","parameters":[],"src":"571:2:15"},"src":"551:23:15"},{"id":3213,"name":"NotBLAddedYet","nameLocation":"582:13:15","nodeType":"ErrorDefinition","parameters":{"id":3212,"nodeType":"ParameterList","parameters":[],"src":"595:2:15"},"src":"576:22:15"},{"id":3215,"name":"TradeCompleted","nameLocation":"606:14:15","nodeType":"ErrorDefinition","parameters":{"id":3214,"nodeType":"ParameterList","parameters":[],"src":"620:2:15"},"src":"600:23:15"},{"abstract":false,"baseContracts":[{"baseName":{"id":3216,"name":"AccessControl","nodeType":"IdentifierPath","referencedDeclaration":315,"src":"655:13:15"},"id":3217,"nodeType":"InheritanceSpecifier","src":"655:13:15"},{"baseName":{"id":3218,"name":"Allowances","nodeType":"IdentifierPath","referencedDeclaration":3184,"src":"670:10:15"},"id":3219,"nodeType":"InheritanceSpecifier","src":"670:10:15"}],"canonicalName":"tradingInCrypto","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":4005,"linearizedBaseContracts":[4005,3184,315,1412,1424,388,1213],"name":"tradingInCrypto","nameLocation":"636:15:15","nodeType":"ContractDefinition","nodes":[{"constant":true,"functionSelector":"dbe4613d","id":3224,"mutability":"constant","name":"SELLER_ROLE","nameLocation":"711:11:15","nodeType":"VariableDeclaration","scope":4005,"src":"687:62:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3220,"name":"bytes32","nodeType":"ElementaryTypeName","src":"687:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"53454c4c45525f524f4c45","id":3222,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"735:13:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_43f25613eb2f15fb17222a5d424ca2655743e71265d98e4b93c05e5fb589ecde","typeString":"literal_string \"SELLER_ROLE\""},"value":"SELLER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_43f25613eb2f15fb17222a5d424ca2655743e71265d98e4b93c05e5fb589ecde","typeString":"literal_string \"SELLER_ROLE\""}],"id":3221,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"725:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3223,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"725:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"f0a56fc8","id":3229,"mutability":"constant","name":"TRADER_ROLE","nameLocation":"780:11:15","nodeType":"VariableDeclaration","scope":4005,"src":"756:62:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3225,"name":"bytes32","nodeType":"ElementaryTypeName","src":"756:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"5452414445525f524f4c45","id":3227,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"804:13:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_facaf2747a7486cf5730e9265973fb54447d3ace6e7e4711f6360826b0731941","typeString":"literal_string \"TRADER_ROLE\""},"value":"TRADER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_facaf2747a7486cf5730e9265973fb54447d3ace6e7e4711f6360826b0731941","typeString":"literal_string \"TRADER_ROLE\""}],"id":3226,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"794:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3228,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"794:24:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"constant":true,"functionSelector":"7a01a1da","id":3234,"mutability":"constant","name":"BUYER_ROLE","nameLocation":"849:10:15","nodeType":"VariableDeclaration","scope":4005,"src":"825:60:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3230,"name":"bytes32","nodeType":"ElementaryTypeName","src":"825:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"value":{"arguments":[{"hexValue":"42555945525f524f4c45","id":3232,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"872:12:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_f8cd32ed93fc2f9fc78152a14807c9609af3d99c5fe4dc6b106a801aaddfe90e","typeString":"literal_string \"BUYER_ROLE\""},"value":"BUYER_ROLE"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_stringliteral_f8cd32ed93fc2f9fc78152a14807c9609af3d99c5fe4dc6b106a801aaddfe90e","typeString":"literal_string \"BUYER_ROLE\""}],"id":3231,"name":"keccak256","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-8,"src":"862:9:15","typeDescriptions":{"typeIdentifier":"t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$","typeString":"function (bytes memory) pure returns (bytes32)"}},"id":3233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"862:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"public"},{"id":3238,"libraryName":{"id":3235,"name":"tradingInCryptoStorage","nodeType":"IdentifierPath","referencedDeclaration":4315,"src":"903:22:15"},"nodeType":"UsingForDirective","src":"897:64:15","typeName":{"id":3237,"nodeType":"UserDefinedTypeName","pathNode":{"id":3236,"name":"tradingInCryptoStorage.trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"930:30:15"},"referencedDeclaration":4028,"src":"930:30:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}}},{"constant":false,"id":3241,"mutability":"mutable","name":"ERC20","nameLocation":"982:5:15","nodeType":"VariableDeclaration","scope":4005,"src":"967:20:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"},"typeName":{"id":3240,"nodeType":"UserDefinedTypeName","pathNode":{"id":3239,"name":"IERC20","nodeType":"IdentifierPath","referencedDeclaration":1166,"src":"967:6:15"},"referencedDeclaration":1166,"src":"967:6:15","typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"visibility":"private"},{"id":3245,"libraryName":{"id":3242,"name":"EnumerableSet","nodeType":"IdentifierPath","referencedDeclaration":2902,"src":"1002:13:15"},"nodeType":"UsingForDirective","src":"996:46:15","typeName":{"id":3244,"nodeType":"UserDefinedTypeName","pathNode":{"id":3243,"name":"EnumerableSet.UintSet","nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"1020:21:15"},"referencedDeclaration":2772,"src":"1020:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet"}}},{"constant":false,"id":3248,"mutability":"mutable","name":"totalTradingNumbers","nameLocation":"1078:19:15","nodeType":"VariableDeclaration","scope":4005,"src":"1048:49:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage","typeString":"struct EnumerableSet.UintSet"},"typeName":{"id":3247,"nodeType":"UserDefinedTypeName","pathNode":{"id":3246,"name":"EnumerableSet.UintSet","nodeType":"IdentifierPath","referencedDeclaration":2772,"src":"1048:21:15"},"referencedDeclaration":2772,"src":"1048:21:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage_ptr","typeString":"struct EnumerableSet.UintSet"}},"visibility":"private"},{"constant":false,"id":3250,"mutability":"mutable","name":"baseUri","nameLocation":"1121:7:15","nodeType":"VariableDeclaration","scope":4005,"src":"1106:22:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string"},"typeName":{"id":3249,"name":"string","nodeType":"ElementaryTypeName","src":"1106:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"private"},{"body":{"id":3283,"nodeType":"Block","src":"1169:208:15","statements":[{"expression":{"id":3257,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3255,"name":"baseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"1180:7:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3256,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3252,"src":"1188:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1180:11:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3258,"nodeType":"ExpressionStatement","src":"1180:11:15"},{"expression":{"arguments":[{"id":3260,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1210:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3261,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1230:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3262,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1230:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3259,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"1199:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3263,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1199:42:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3264,"nodeType":"ExpressionStatement","src":"1199:42:15"},{"expression":{"arguments":[{"id":3266,"name":"SELLER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"1260:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3267,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1273:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3268,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1273:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3265,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"1249:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3269,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1249:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3270,"nodeType":"ExpressionStatement","src":"1249:35:15"},{"expression":{"arguments":[{"id":3272,"name":"TRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"1303:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3273,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1316:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1316:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3271,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"1292:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1292:35:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3276,"nodeType":"ExpressionStatement","src":"1292:35:15"},{"expression":{"arguments":[{"id":3278,"name":"BUYER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"1346:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3279,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1358:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"1358:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3277,"name":"_grantRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"1335:10:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1335:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3282,"nodeType":"ExpressionStatement","src":"1335:34:15"}]},"id":3284,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":3253,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3252,"mutability":"mutable","name":"uri","nameLocation":"1164:3:15","nodeType":"VariableDeclaration","scope":3284,"src":"1150:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3251,"name":"string","nodeType":"ElementaryTypeName","src":"1150:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1149:19:15"},"returnParameters":{"id":3254,"nodeType":"ParameterList","parameters":[],"src":"1169:0:15"},"scope":4005,"src":"1137:240:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"constant":false,"id":3289,"mutability":"mutable","name":"trading","nameLocation":"1446:7:15","nodeType":"VariableDeclaration","scope":4005,"src":"1389:64:15","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading)"},"typeName":{"id":3288,"keyType":{"id":3285,"name":"uint256","nodeType":"ElementaryTypeName","src":"1398:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1389:49:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading)"},"valueType":{"id":3287,"nodeType":"UserDefinedTypeName","pathNode":{"id":3286,"name":"tradingInCryptoStorage.trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"1407:30:15"},"referencedDeclaration":4028,"src":"1407:30:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}}},"visibility":"private"},{"body":{"id":3301,"nodeType":"Block","src":"1542:27:15","statements":[{"expression":{"id":3299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3297,"name":"baseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"1550:7:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3298,"name":"uri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3291,"src":"1558:3:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1550:11:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":3300,"nodeType":"ExpressionStatement","src":"1550:11:15"}]},"functionSelector":"39f7e37f","id":3302,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3294,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1523:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3295,"kind":"modifierInvocation","modifierName":{"id":3293,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"1514:8:15"},"nodeType":"ModifierInvocation","src":"1514:28:15"}],"name":"updateBaseUri","nameLocation":"1475:13:15","nodeType":"FunctionDefinition","parameters":{"id":3292,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3291,"mutability":"mutable","name":"uri","nameLocation":"1503:3:15","nodeType":"VariableDeclaration","scope":3302,"src":"1489:17:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3290,"name":"string","nodeType":"ElementaryTypeName","src":"1489:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1488:19:15"},"returnParameters":{"id":3296,"nodeType":"ParameterList","parameters":[],"src":"1542:0:15"},"scope":4005,"src":"1466:103:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3309,"nodeType":"Block","src":"1636:29:15","statements":[{"expression":{"id":3307,"name":"baseUri","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3250,"src":"1650:7:15","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":3306,"id":3308,"nodeType":"Return","src":"1643:14:15"}]},"id":3310,"implemented":true,"kind":"function","modifiers":[],"name":"_baseURI","nameLocation":"1586:8:15","nodeType":"FunctionDefinition","parameters":{"id":3303,"nodeType":"ParameterList","parameters":[],"src":"1594:2:15"},"returnParameters":{"id":3306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3305,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3310,"src":"1621:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3304,"name":"string","nodeType":"ElementaryTypeName","src":"1621:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1620:15:15"},"scope":4005,"src":"1577:88:15","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":3325,"nodeType":"Block","src":"1775:58:15","statements":[{"expression":{"arguments":[{"id":3321,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3312,"src":"1799:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3322,"name":"currencyAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3314,"src":"1809:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3320,"name":"_addCurrency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3056,"src":"1786:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$","typeString":"function (bytes32,address)"}},"id":3323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1786:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3324,"nodeType":"ExpressionStatement","src":"1786:39:15"}]},"functionSelector":"c7d63a13","id":3326,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3317,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1755:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3318,"kind":"modifierInvocation","modifierName":{"id":3316,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"1746:8:15"},"nodeType":"ModifierInvocation","src":"1746:28:15"}],"name":"addCurrency","nameLocation":"1682:11:15","nodeType":"FunctionDefinition","parameters":{"id":3315,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3312,"mutability":"mutable","name":"currency","nameLocation":"1702:8:15","nodeType":"VariableDeclaration","scope":3326,"src":"1694:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3311,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1694:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3314,"mutability":"mutable","name":"currencyAddress","nameLocation":"1720:15:15","nodeType":"VariableDeclaration","scope":3326,"src":"1712:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3313,"name":"address","nodeType":"ElementaryTypeName","src":"1712:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1693:43:15"},"returnParameters":{"id":3319,"nodeType":"ParameterList","parameters":[],"src":"1775:0:15"},"scope":4005,"src":"1673:160:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3338,"nodeType":"Block","src":"1921:44:15","statements":[{"expression":{"arguments":[{"id":3335,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3328,"src":"1948:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3334,"name":"_removeCurrency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3084,"src":"1932:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_bytes32_$returns$__$","typeString":"function (bytes32)"}},"id":3336,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"1932:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3337,"nodeType":"ExpressionStatement","src":"1932:25:15"}]},"functionSelector":"efd4ad5a","id":3339,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":3331,"name":"DEFAULT_ADMIN_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":27,"src":"1901:18:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"id":3332,"kind":"modifierInvocation","modifierName":{"id":3330,"name":"onlyRole","nodeType":"IdentifierPath","referencedDeclaration":38,"src":"1892:8:15"},"nodeType":"ModifierInvocation","src":"1892:28:15"}],"name":"removeCurrency","nameLocation":"1850:14:15","nodeType":"FunctionDefinition","parameters":{"id":3329,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3328,"mutability":"mutable","name":"currency","nameLocation":"1873:8:15","nodeType":"VariableDeclaration","scope":3339,"src":"1865:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3327,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1865:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1864:18:15"},"returnParameters":{"id":3333,"nodeType":"ParameterList","parameters":[],"src":"1921:0:15"},"scope":4005,"src":"1841:124:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3348,"nodeType":"Block","src":"2025:54:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":3344,"name":"totalTradingNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"2043:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":3345,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","referencedDeclaration":2850,"src":"2043:26:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$2772_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$2772_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer) view returns (uint256)"}},"id":3346,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2043:28:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3343,"id":3347,"nodeType":"Return","src":"2036:35:15"}]},"functionSelector":"e275c997","id":3349,"implemented":true,"kind":"function","modifiers":[],"name":"totalTrades","nameLocation":"1982:11:15","nodeType":"FunctionDefinition","parameters":{"id":3340,"nodeType":"ParameterList","parameters":[],"src":"1993:2:15"},"returnParameters":{"id":3343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3342,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3349,"src":"2016:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3341,"name":"uint256","nodeType":"ElementaryTypeName","src":"2016:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2015:9:15"},"scope":4005,"src":"1973:106:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3361,"nodeType":"Block","src":"2163:55:15","statements":[{"expression":{"arguments":[{"id":3358,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3351,"src":"2204:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3356,"name":"totalTradingNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"2181:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":3357,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"at","nodeType":"MemberAccess","referencedDeclaration":2871,"src":"2181:22:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_UintSet_$2772_storage_ptr_$_t_uint256_$returns$_t_uint256_$bound_to$_t_struct$_UintSet_$2772_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer,uint256) view returns (uint256)"}},"id":3359,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2181:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":3355,"id":3360,"nodeType":"Return","src":"2174:36:15"}]},"functionSelector":"a4a591b7","id":3362,"implemented":true,"kind":"function","modifiers":[],"name":"totalTradesNumberByIndex","nameLocation":"2094:24:15","nodeType":"FunctionDefinition","parameters":{"id":3352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3351,"mutability":"mutable","name":"index","nameLocation":"2127:5:15","nodeType":"VariableDeclaration","scope":3362,"src":"2119:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3350,"name":"uint256","nodeType":"ElementaryTypeName","src":"2119:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2118:15:15"},"returnParameters":{"id":3355,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3354,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3362,"src":"2154:7:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3353,"name":"uint256","nodeType":"ElementaryTypeName","src":"2154:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2153:9:15"},"scope":4005,"src":"2085:133:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3396,"nodeType":"Block","src":"2490:275:15","statements":[{"assignments":[3380],"declarations":[{"constant":false,"id":3380,"mutability":"mutable","name":"matterId","nameLocation":"2509:8:15","nodeType":"VariableDeclaration","scope":3396,"src":"2501:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3379,"name":"uint256","nodeType":"ElementaryTypeName","src":"2501:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3382,"initialValue":{"id":3381,"name":"_tradingNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"2518:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2501:31:15"},{"expression":{"arguments":[{"id":3387,"name":"_tradingNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3364,"src":"2579:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3388,"name":"_assetName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3366,"src":"2608:10:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3389,"name":"_currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3368,"src":"2633:9:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3390,"name":"_fromAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3370,"src":"2657:12:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3391,"name":"_toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3372,"src":"2684:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3392,"name":"_totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3374,"src":"2709:12:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3393,"name":"_tradeType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3376,"src":"2736:10:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"baseExpression":{"id":3383,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"2543:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3385,"indexExpression":{"id":3384,"name":"matterId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3380,"src":"2551:8:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2543:17:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3386,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"set","nodeType":"MemberAccess","referencedDeclaration":4091,"src":"2543:21:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_trading_$4028_storage_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer,uint256,string memory,bytes32,address,address,uint256,uint256)"}},"id":3394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"2543:214:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3395,"nodeType":"ExpressionStatement","src":"2543:214:15"}]},"id":3397,"implemented":true,"kind":"function","modifiers":[],"name":"_createtrade","nameLocation":"2241:12:15","nodeType":"FunctionDefinition","parameters":{"id":3377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3364,"mutability":"mutable","name":"_tradingNumber","nameLocation":"2272:14:15","nodeType":"VariableDeclaration","scope":3397,"src":"2264:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3363,"name":"uint256","nodeType":"ElementaryTypeName","src":"2264:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3366,"mutability":"mutable","name":"_assetName","nameLocation":"2311:10:15","nodeType":"VariableDeclaration","scope":3397,"src":"2297:24:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3365,"name":"string","nodeType":"ElementaryTypeName","src":"2297:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3368,"mutability":"mutable","name":"_currency","nameLocation":"2340:9:15","nodeType":"VariableDeclaration","scope":3397,"src":"2332:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3367,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2332:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3370,"mutability":"mutable","name":"_fromAddress","nameLocation":"2368:12:15","nodeType":"VariableDeclaration","scope":3397,"src":"2360:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3369,"name":"address","nodeType":"ElementaryTypeName","src":"2360:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3372,"mutability":"mutable","name":"_toAddress","nameLocation":"2399:10:15","nodeType":"VariableDeclaration","scope":3397,"src":"2391:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3371,"name":"address","nodeType":"ElementaryTypeName","src":"2391:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3374,"mutability":"mutable","name":"_totalAmount","nameLocation":"2428:12:15","nodeType":"VariableDeclaration","scope":3397,"src":"2420:20:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3373,"name":"uint256","nodeType":"ElementaryTypeName","src":"2420:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3376,"mutability":"mutable","name":"_tradeType","nameLocation":"2459:10:15","nodeType":"VariableDeclaration","scope":3397,"src":"2451:18:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3375,"name":"uint256","nodeType":"ElementaryTypeName","src":"2451:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2253:223:15"},"returnParameters":{"id":3378,"nodeType":"ParameterList","parameters":[],"src":"2490:0:15"},"scope":4005,"src":"2232:533:15","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":3566,"nodeType":"Block","src":"3050:1330:15","statements":[{"assignments":[3413],"declarations":[{"constant":false,"id":3413,"mutability":"mutable","name":"fromAddress","nameLocation":"3069:11:15","nodeType":"VariableDeclaration","scope":3566,"src":"3061:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3412,"name":"address","nodeType":"ElementaryTypeName","src":"3061:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3414,"nodeType":"VariableDeclarationStatement","src":"3061:19:15"},{"assignments":[3416],"declarations":[{"constant":false,"id":3416,"mutability":"mutable","name":"toAddress","nameLocation":"3099:9:15","nodeType":"VariableDeclaration","scope":3566,"src":"3091:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3415,"name":"address","nodeType":"ElementaryTypeName","src":"3091:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3417,"nodeType":"VariableDeclarationStatement","src":"3091:17:15"},{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3418,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"3122:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3420,"indexExpression":{"id":3419,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"3130:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3122:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3421,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"peelTradeNumber","nodeType":"MemberAccess","referencedDeclaration":4188,"src":"3122:36:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_bool_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (bool)"}},"id":3422,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3122:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3427,"nodeType":"IfStatement","src":"3119:72:15","trueBody":{"id":3426,"nodeType":"Block","src":"3161:30:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3423,"name":"InvalidTradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"3169:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3424,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3169:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3425,"nodeType":"RevertStatement","src":"3162:27:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[{"id":3429,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"3218:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3428,"name":"addressCurrency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"3202:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3430,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3202:25:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[{"hexValue":"30","id":3433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3237:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":3432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3229:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3431,"name":"address","nodeType":"ElementaryTypeName","src":"3229:7:15","typeDescriptions":{}}},"id":3434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3229:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3202:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3440,"nodeType":"IfStatement","src":"3199:71:15","trueBody":{"id":3439,"nodeType":"Block","src":"3240:30:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3436,"name":"CurrencyNotAllowed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3205,"src":"3248:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3248:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3438,"nodeType":"RevertStatement","src":"3241:27:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3443,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3441,"name":"tradeType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"3283:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3442,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3294:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"3283:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3477,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3475,"name":"tradeType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"3557:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":3476,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3568:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"3557:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3509,"name":"tradeType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"3820:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"33","id":3510,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3831:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"3820:12:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3546,"nodeType":"Block","src":"4079:48:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3543,"name":"InvalidTradeType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"4099:16:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3544,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4099:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3545,"nodeType":"RevertStatement","src":"4092:25:15"}]},"id":3547,"nodeType":"IfStatement","src":"3817:310:15","trueBody":{"id":3542,"nodeType":"Block","src":"3833:242:15","statements":[{"condition":{"id":3517,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3865:31:15","subExpression":{"arguments":[{"id":3513,"name":"BUYER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"3874:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3514,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3885:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3515,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3885:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3512,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3866:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3516,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3866:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3522,"nodeType":"IfStatement","src":"3862:59:15","trueBody":{"id":3521,"nodeType":"Block","src":"3897:24:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3518,"name":"InvalidBuyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"3905:12:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3519,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3905:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3520,"nodeType":"RevertStatement","src":"3898:21:15"}]}},{"condition":{"id":3527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3934:35:15","subExpression":{"arguments":[{"id":3524,"name":"TRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"3943:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3525,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"3955:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3523,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3935:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3526,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3935:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3532,"nodeType":"IfStatement","src":"3931:64:15","trueBody":{"id":3531,"nodeType":"Block","src":"3970:25:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3528,"name":"InvalidTrader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"3978:13:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3978:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3530,"nodeType":"RevertStatement","src":"3971:22:15"}]}},{"expression":{"id":3535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3533,"name":"fromAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"4005:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3534,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"4019:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4005:27:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3536,"nodeType":"ExpressionStatement","src":"4005:27:15"},{"expression":{"id":3540,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3537,"name":"toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"4043:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3538,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4055:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3539,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4055:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4043:22:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3541,"nodeType":"ExpressionStatement","src":"4043:22:15"}]}},"id":3548,"nodeType":"IfStatement","src":"3554:573:15","trueBody":{"id":3508,"nodeType":"Block","src":"3570:242:15","statements":[{"condition":{"id":3483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3602:32:15","subExpression":{"arguments":[{"id":3479,"name":"TRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"3611:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3480,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3623:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3481,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3623:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3478,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3603:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3603:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3488,"nodeType":"IfStatement","src":"3599:61:15","trueBody":{"id":3487,"nodeType":"Block","src":"3635:25:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3484,"name":"InvalidTrader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"3643:13:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3485,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3643:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3486,"nodeType":"RevertStatement","src":"3636:22:15"}]}},{"condition":{"id":3493,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3673:34:15","subExpression":{"arguments":[{"id":3490,"name":"BUYER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3234,"src":"3682:10:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3491,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"3693:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3489,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3674:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3674:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3498,"nodeType":"IfStatement","src":"3670:62:15","trueBody":{"id":3497,"nodeType":"Block","src":"3708:24:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3494,"name":"InvalidBuyer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3201,"src":"3716:12:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3495,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3716:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3496,"nodeType":"RevertStatement","src":"3709:21:15"}]}},{"expression":{"id":3502,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3499,"name":"fromAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"3742:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3500,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3756:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3756:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3742:24:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3503,"nodeType":"ExpressionStatement","src":"3742:24:15"},{"expression":{"id":3506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3504,"name":"toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"3777:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3505,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"3789:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3777:25:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3507,"nodeType":"ExpressionStatement","src":"3777:25:15"}]}},"id":3549,"nodeType":"IfStatement","src":"3280:847:15","trueBody":{"id":3474,"nodeType":"Block","src":"3296:253:15","statements":[{"condition":{"id":3449,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3329:32:15","subExpression":{"arguments":[{"id":3445,"name":"SELLER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3224,"src":"3338:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":3446,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3350:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3350:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3444,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3330:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3448,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3330:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3454,"nodeType":"IfStatement","src":"3326:61:15","trueBody":{"id":3453,"nodeType":"Block","src":"3362:25:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3450,"name":"InvalidSeller","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3197,"src":"3370:13:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3451,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3370:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3452,"nodeType":"RevertStatement","src":"3363:22:15"}]}},{"condition":{"id":3459,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"3408:35:15","subExpression":{"arguments":[{"id":3456,"name":"TRADER_ROLE","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3229,"src":"3417:11:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3457,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"3429:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"}],"id":3455,"name":"hasRole","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":79,"src":"3409:7:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$","typeString":"function (bytes32,address) view returns (bool)"}},"id":3458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3409:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3464,"nodeType":"IfStatement","src":"3405:64:15","trueBody":{"id":3463,"nodeType":"Block","src":"3444:25:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3460,"name":"InvalidTrader","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3199,"src":"3452:13:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3461,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3452:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3462,"nodeType":"RevertStatement","src":"3445:22:15"}]}},{"expression":{"id":3468,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3465,"name":"fromAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"3479:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":3466,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3493:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3467,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"3493:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3479:24:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3469,"nodeType":"ExpressionStatement","src":"3479:24:15"},{"expression":{"id":3472,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":3470,"name":"toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"3514:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3471,"name":"walletAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3405,"src":"3526:13:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"3514:25:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":3473,"nodeType":"ExpressionStatement","src":"3514:25:15"}]}},{"expression":{"arguments":[{"id":3551,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"4166:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3552,"name":"assetName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3401,"src":"4192:9:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3553,"name":"currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3403,"src":"4216:8:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"id":3554,"name":"fromAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3413,"src":"4239:11:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3555,"name":"toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3416,"src":"4265:9:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":3556,"name":"totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3407,"src":"4289:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":3557,"name":"tradeType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3409,"src":"4315:9:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3550,"name":"_createtrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3397,"src":"4139:12:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$","typeString":"function (uint256,string memory,bytes32,address,address,uint256,uint256)"}},"id":3558,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4139:186:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3559,"nodeType":"ExpressionStatement","src":"4139:186:15"},{"expression":{"arguments":[{"id":3563,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3399,"src":"4360:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"id":3560,"name":"totalTradingNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3248,"src":"4336:19:15","typeDescriptions":{"typeIdentifier":"t_struct$_UintSet_$2772_storage","typeString":"struct EnumerableSet.UintSet storage ref"}},"id":3562,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"add","nodeType":"MemberAccess","referencedDeclaration":2793,"src":"4336:23:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_UintSet_$2772_storage_ptr_$_t_uint256_$returns$_t_bool_$bound_to$_t_struct$_UintSet_$2772_storage_ptr_$","typeString":"function (struct EnumerableSet.UintSet storage pointer,uint256) returns (bool)"}},"id":3564,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4336:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3565,"nodeType":"ExpressionStatement","src":"4336:36:15"}]},"functionSelector":"b4b83e93","id":3567,"implemented":true,"kind":"function","modifiers":[],"name":"createtrade","nameLocation":"2833:11:15","nodeType":"FunctionDefinition","parameters":{"id":3410,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3399,"mutability":"mutable","name":"tradeNumber","nameLocation":"2863:11:15","nodeType":"VariableDeclaration","scope":3567,"src":"2855:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3398,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3401,"mutability":"mutable","name":"assetName","nameLocation":"2899:9:15","nodeType":"VariableDeclaration","scope":3567,"src":"2885:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3400,"name":"string","nodeType":"ElementaryTypeName","src":"2885:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3403,"mutability":"mutable","name":"currency","nameLocation":"2927:8:15","nodeType":"VariableDeclaration","scope":3567,"src":"2919:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3402,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2919:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3405,"mutability":"mutable","name":"walletAddress","nameLocation":"2954:13:15","nodeType":"VariableDeclaration","scope":3567,"src":"2946:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3404,"name":"address","nodeType":"ElementaryTypeName","src":"2946:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3407,"mutability":"mutable","name":"totalAmount","nameLocation":"2986:11:15","nodeType":"VariableDeclaration","scope":3567,"src":"2978:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3406,"name":"uint256","nodeType":"ElementaryTypeName","src":"2978:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3409,"mutability":"mutable","name":"tradeType","nameLocation":"3016:9:15","nodeType":"VariableDeclaration","scope":3567,"src":"3008:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3408,"name":"uint256","nodeType":"ElementaryTypeName","src":"3008:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2844:188:15"},"returnParameters":{"id":3411,"nodeType":"ParameterList","parameters":[],"src":"3050:0:15"},"scope":4005,"src":"2824:1556:15","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":3685,"nodeType":"Block","src":"4441:855:15","statements":[{"condition":{"id":3577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"4453:39:15","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3572,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"4454:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3574,"indexExpression":{"id":3573,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"4462:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4454:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3575,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"peelTradeNumber","nodeType":"MemberAccess","referencedDeclaration":4188,"src":"4454:36:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_bool_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (bool)"}},"id":3576,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4454:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3582,"nodeType":"IfStatement","src":"4450:73:15","trueBody":{"id":3581,"nodeType":"Block","src":"4493:30:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3578,"name":"InvalidTradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"4501:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3579,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4501:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3580,"nodeType":"RevertStatement","src":"4494:27:15"}]}},{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3583,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"4534:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3585,"indexExpression":{"id":3584,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"4542:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4534:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3586,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isAcceptTrading","nodeType":"MemberAccess","referencedDeclaration":4248,"src":"4534:36:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_bool_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (bool)"}},"id":3587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4534:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3592,"nodeType":"IfStatement","src":"4531:68:15","trueBody":{"id":3591,"nodeType":"Block","src":"4573:26:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3588,"name":"AllReadyAgreed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3207,"src":"4581:14:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3589,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4581:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3590,"nodeType":"RevertStatement","src":"4574:23:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":3607,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3599,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3593,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"4610:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3595,"indexExpression":{"id":3594,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"4618:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4610:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3596,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradingType","nodeType":"MemberAccess","referencedDeclaration":4302,"src":"4610:32:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (uint256)"}},"id":3597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4610:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"31","id":3598,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4646:1:15","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4610:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3606,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3600,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"4651:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3602,"indexExpression":{"id":3601,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"4659:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4651:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3603,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradingType","nodeType":"MemberAccess","referencedDeclaration":4302,"src":"4651:32:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (uint256)"}},"id":3604,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4651:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"32","id":3605,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4687:1:15","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"src":"4651:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4610:78:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3628,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3622,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"4804:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3624,"indexExpression":{"id":3623,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"4812:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4804:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3625,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradingType","nodeType":"MemberAccess","referencedDeclaration":4302,"src":"4804:32:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (uint256)"}},"id":3626,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4804:34:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"33","id":3627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4840:1:15","typeDescriptions":{"typeIdentifier":"t_rational_3_by_1","typeString":"int_const 3"},"value":"3"},"src":"4804:37:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":3646,"nodeType":"Block","src":"4955:47:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3643,"name":"InvalidTradeType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3195,"src":"4974:16:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3644,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4974:18:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3645,"nodeType":"RevertStatement","src":"4967:25:15"}]},"id":3647,"nodeType":"IfStatement","src":"4801:201:15","trueBody":{"id":3642,"nodeType":"Block","src":"4842:109:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3636,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3629,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"4856:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3631,"indexExpression":{"id":3630,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"4864:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4856:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3632,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradingFromAddress","nodeType":"MemberAccess","referencedDeclaration":4224,"src":"4856:39:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_address_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (address)"}},"id":3633,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4856:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3634,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4899:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4899:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4856:53:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3641,"nodeType":"IfStatement","src":"4853:89:15","trueBody":{"id":3640,"nodeType":"Block","src":"4910:32:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3637,"name":"InvalidCallerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"4918:20:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3638,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4918:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3639,"nodeType":"RevertStatement","src":"4911:29:15"}]}}]}},"id":3648,"nodeType":"IfStatement","src":"4607:395:15","trueBody":{"id":3621,"nodeType":"Block","src":"4689:107:15","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3615,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3608,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"4703:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3610,"indexExpression":{"id":3609,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"4711:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4703:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3611,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradingToAddress","nodeType":"MemberAccess","referencedDeclaration":4236,"src":"4703:37:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_address_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (address)"}},"id":3612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4703:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3613,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4744:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"4744:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"4703:51:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3620,"nodeType":"IfStatement","src":"4700:87:15","trueBody":{"id":3619,"nodeType":"Block","src":"4755:32:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3616,"name":"InvalidCallerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"4763:20:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"4763:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3618,"nodeType":"RevertStatement","src":"4756:29:15"}]}}]}},{"assignments":[3650],"declarations":[{"constant":false,"id":3650,"mutability":"mutable","name":"tradingCurrency","nameLocation":"5018:15:15","nodeType":"VariableDeclaration","scope":3685,"src":"5010:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3649,"name":"address","nodeType":"ElementaryTypeName","src":"5010:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3658,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3652,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"5052:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3654,"indexExpression":{"id":3653,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"5060:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5052:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3655,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradingCurrency","nodeType":"MemberAccess","referencedDeclaration":4260,"src":"5052:36:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (bytes32)"}},"id":3656,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5052:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3651,"name":"addressCurrency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"5036:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3657,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5036:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"5010:81:15"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3659,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"5100:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3661,"indexExpression":{"id":3660,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"5108:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5100:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3662,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"setAcceptTrading","nodeType":"MemberAccess","referencedDeclaration":4104,"src":"5100:37:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_trading_$4028_storage_ptr_$returns$__$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer)"}},"id":3663,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5100:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3664,"nodeType":"ExpressionStatement","src":"5100:39:15"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3669,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"5185:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3671,"indexExpression":{"id":3670,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"5193:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5185:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3672,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradingToAddress","nodeType":"MemberAccess","referencedDeclaration":4236,"src":"5185:37:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_address_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (address)"}},"id":3673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5185:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[{"id":3676,"name":"this","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-28,"src":"5233:4:15","typeDescriptions":{"typeIdentifier":"t_contract$_tradingInCrypto_$4005","typeString":"contract tradingInCrypto"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_contract$_tradingInCrypto_$4005","typeString":"contract tradingInCrypto"}],"id":3675,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5225:7:15","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":3674,"name":"address","nodeType":"ElementaryTypeName","src":"5225:7:15","typeDescriptions":{}}},"id":3677,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5225:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3678,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"5239:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3680,"indexExpression":{"id":3679,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3569,"src":"5247:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5239:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradingTotalAmount","nodeType":"MemberAccess","referencedDeclaration":4212,"src":"5239:39:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (uint256)"}},"id":3682,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5239:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3666,"name":"tradingCurrency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3650,"src":"5155:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3665,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"5148:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1166_$","typeString":"type(contract IERC20)"}},"id":3667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5148:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":3668,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transferFrom","nodeType":"MemberAccess","referencedDeclaration":1165,"src":"5148:36:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,address,uint256) external returns (bool)"}},"id":3683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5148:133:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3684,"nodeType":"ExpressionStatement","src":"5148:133:15"}]},"functionSelector":"3d1d6a7f","id":3686,"implemented":true,"kind":"function","modifiers":[],"name":"agreeToTrade","nameLocation":"4401:12:15","nodeType":"FunctionDefinition","parameters":{"id":3570,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3569,"mutability":"mutable","name":"tradeNumber","nameLocation":"4422:11:15","nodeType":"VariableDeclaration","scope":3686,"src":"4414:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3568,"name":"uint256","nodeType":"ElementaryTypeName","src":"4414:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4413:21:15"},"returnParameters":{"id":3571,"nodeType":"ParameterList","parameters":[],"src":"4441:0:15"},"scope":4005,"src":"4392:904:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3746,"nodeType":"Block","src":"5367:393:15","statements":[{"condition":{"id":3698,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5379:39:15","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3693,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"5380:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3695,"indexExpression":{"id":3694,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"5388:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5380:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3696,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"peelTradeNumber","nodeType":"MemberAccess","referencedDeclaration":4188,"src":"5380:36:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_bool_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (bool)"}},"id":3697,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5380:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3703,"nodeType":"IfStatement","src":"5376:73:15","trueBody":{"id":3702,"nodeType":"Block","src":"5419:30:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3699,"name":"InvalidTradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"5427:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3700,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5427:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3701,"nodeType":"RevertStatement","src":"5420:27:15"}]}},{"condition":{"id":3709,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5460:39:15","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3704,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"5461:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3706,"indexExpression":{"id":3705,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"5469:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5461:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3707,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isAcceptTrading","nodeType":"MemberAccess","referencedDeclaration":4248,"src":"5461:36:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_bool_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (bool)"}},"id":3708,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5461:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3714,"nodeType":"IfStatement","src":"5457:69:15","trueBody":{"id":3713,"nodeType":"Block","src":"5500:26:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3710,"name":"NotAcceptedYet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3209,"src":"5508:14:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3711,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5508:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3712,"nodeType":"RevertStatement","src":"5501:23:15"}]}},{"condition":{"id":3720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5537:44:15","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3715,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"5538:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3717,"indexExpression":{"id":3716,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"5546:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5538:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3718,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isTradingBlHashEmpty","nodeType":"MemberAccess","referencedDeclaration":4290,"src":"5538:41:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_bool_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (bool)"}},"id":3719,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5538:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3725,"nodeType":"IfStatement","src":"5534:74:15","trueBody":{"id":3724,"nodeType":"Block","src":"5582:26:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3721,"name":"AlreadyAddedBL","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3211,"src":"5590:14:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3722,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5590:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3723,"nodeType":"RevertStatement","src":"5583:23:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3733,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3726,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"5619:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3728,"indexExpression":{"id":3727,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"5627:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5619:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3729,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradingFromAddress","nodeType":"MemberAccess","referencedDeclaration":4224,"src":"5619:39:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_address_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (address)"}},"id":3730,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5619:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3731,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5662:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3732,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"5662:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5619:53:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3738,"nodeType":"IfStatement","src":"5616:89:15","trueBody":{"id":3737,"nodeType":"Block","src":"5673:32:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3734,"name":"InvalidCallerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"5681:20:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3735,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5681:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3736,"nodeType":"RevertStatement","src":"5674:29:15"}]}},{"expression":{"arguments":[{"id":3743,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3690,"src":"5747:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"baseExpression":{"id":3739,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"5713:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3741,"indexExpression":{"id":3740,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3688,"src":"5721:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5713:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3742,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"setTradingBL","nodeType":"MemberAccess","referencedDeclaration":4119,"src":"5713:33:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_trading_$4028_storage_ptr_$_t_string_memory_ptr_$returns$__$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer,string memory)"}},"id":3744,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5713:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3745,"nodeType":"ExpressionStatement","src":"5713:39:15"}]},"functionSelector":"2c535497","id":3747,"implemented":true,"kind":"function","modifiers":[],"name":"updateBL","nameLocation":"5313:8:15","nodeType":"FunctionDefinition","parameters":{"id":3691,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3688,"mutability":"mutable","name":"tradeNumber","nameLocation":"5330:11:15","nodeType":"VariableDeclaration","scope":3747,"src":"5322:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3687,"name":"uint256","nodeType":"ElementaryTypeName","src":"5322:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3690,"mutability":"mutable","name":"hash","nameLocation":"5356:4:15","nodeType":"VariableDeclaration","scope":3747,"src":"5342:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3689,"name":"string","nodeType":"ElementaryTypeName","src":"5342:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"5321:40:15"},"returnParameters":{"id":3692,"nodeType":"ParameterList","parameters":[],"src":"5367:0:15"},"scope":4005,"src":"5304:456:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3828,"nodeType":"Block","src":"5812:601:15","statements":[{"condition":{"id":3757,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"5824:39:15","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3752,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"5825:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3754,"indexExpression":{"id":3753,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"5833:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5825:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3755,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"peelTradeNumber","nodeType":"MemberAccess","referencedDeclaration":4188,"src":"5825:36:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_bool_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (bool)"}},"id":3756,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5825:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3762,"nodeType":"IfStatement","src":"5821:73:15","trueBody":{"id":3761,"nodeType":"Block","src":"5864:30:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3758,"name":"InvalidTradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"5872:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3759,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5872:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3760,"nodeType":"RevertStatement","src":"5865:27:15"}]}},{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3763,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"5905:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3765,"indexExpression":{"id":3764,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"5913:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5905:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3766,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isVerifyBl","nodeType":"MemberAccess","referencedDeclaration":4314,"src":"5905:31:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_bool_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (bool)"}},"id":3767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5905:33:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3772,"nodeType":"IfStatement","src":"5902:63:15","trueBody":{"id":3771,"nodeType":"Block","src":"5939:26:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3768,"name":"TradeCompleted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3215,"src":"5947:14:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3769,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5947:16:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3770,"nodeType":"RevertStatement","src":"5940:23:15"}]}},{"condition":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3773,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"5976:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3775,"indexExpression":{"id":3774,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"5984:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5976:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3776,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"isTradingBlHashEmpty","nodeType":"MemberAccess","referencedDeclaration":4290,"src":"5976:41:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_bool_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (bool)"}},"id":3777,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"5976:43:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3782,"nodeType":"IfStatement","src":"5973:72:15","trueBody":{"id":3781,"nodeType":"Block","src":"6020:25:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3778,"name":"NotBLAddedYet","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3213,"src":"6028:13:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3779,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6028:15:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3780,"nodeType":"RevertStatement","src":"6021:22:15"}]}},{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":3790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3783,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"6056:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3785,"indexExpression":{"id":3784,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"6064:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6056:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3786,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradingToAddress","nodeType":"MemberAccess","referencedDeclaration":4236,"src":"6056:37:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_address_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (address)"}},"id":3787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6056:39:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":3788,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6097:3:15","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":3789,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"sender","nodeType":"MemberAccess","src":"6097:10:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6056:51:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3795,"nodeType":"IfStatement","src":"6053:87:15","trueBody":{"id":3794,"nodeType":"Block","src":"6108:32:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3791,"name":"InvalidCallerAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3203,"src":"6116:20:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6116:22:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3793,"nodeType":"RevertStatement","src":"6109:29:15"}]}},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3796,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"6148:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3798,"indexExpression":{"id":3797,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"6156:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6148:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"setVerifyTradingBL","nodeType":"MemberAccess","referencedDeclaration":4132,"src":"6148:39:15","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_struct$_trading_$4028_storage_ptr_$returns$__$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer)"}},"id":3800,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6148:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3801,"nodeType":"ExpressionStatement","src":"6148:41:15"},{"assignments":[3803],"declarations":[{"constant":false,"id":3803,"mutability":"mutable","name":"tradingCurrency","nameLocation":"6206:15:15","nodeType":"VariableDeclaration","scope":3828,"src":"6198:23:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3802,"name":"address","nodeType":"ElementaryTypeName","src":"6198:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":3811,"initialValue":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3805,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"6240:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3807,"indexExpression":{"id":3806,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"6248:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6240:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3808,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradingCurrency","nodeType":"MemberAccess","referencedDeclaration":4260,"src":"6240:36:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_bytes32_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (bytes32)"}},"id":3809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6240:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"id":3804,"name":"addressCurrency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3096,"src":"6224:15:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_bytes32_$returns$_t_address_$","typeString":"function (bytes32) view returns (address)"}},"id":3810,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6224:55:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"6198:81:15"},{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3816,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"6321:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3818,"indexExpression":{"id":3817,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"6329:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6321:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3819,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradingFromAddress","nodeType":"MemberAccess","referencedDeclaration":4224,"src":"6321:39:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_address_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (address)"}},"id":3820,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6321:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3821,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"6363:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3823,"indexExpression":{"id":3822,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3749,"src":"6371:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6363:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradingTotalAmount","nodeType":"MemberAccess","referencedDeclaration":4212,"src":"6363:39:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_uint256_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (uint256)"}},"id":3825,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6363:41:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"arguments":[{"id":3813,"name":"tradingCurrency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3803,"src":"6295:15:15","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":3812,"name":"IERC20","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1166,"src":"6288:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IERC20_$1166_$","typeString":"type(contract IERC20)"}},"id":3814,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6288:23:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IERC20_$1166","typeString":"contract IERC20"}},"id":3815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"transfer","nodeType":"MemberAccess","referencedDeclaration":1133,"src":"6288:32:15","typeDescriptions":{"typeIdentifier":"t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$","typeString":"function (address,uint256) external returns (bool)"}},"id":3826,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6288:117:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3827,"nodeType":"ExpressionStatement","src":"6288:117:15"}]},"functionSelector":"43786014","id":3829,"implemented":true,"kind":"function","modifiers":[],"name":"verifyBL","nameLocation":"5777:8:15","nodeType":"FunctionDefinition","parameters":{"id":3750,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3749,"mutability":"mutable","name":"tradeNumber","nameLocation":"5794:11:15","nodeType":"VariableDeclaration","scope":3829,"src":"5786:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3748,"name":"uint256","nodeType":"ElementaryTypeName","src":"5786:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5785:21:15"},"returnParameters":{"id":3751,"nodeType":"ParameterList","parameters":[],"src":"5812:0:15"},"scope":4005,"src":"5768:645:15","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":3854,"nodeType":"Block","src":"6720:63:15","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3848,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"6738:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3850,"indexExpression":{"id":3849,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3831,"src":"6746:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6738:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3851,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradingDetails","nodeType":"MemberAccess","referencedDeclaration":4169,"src":"6738:35:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_uint256_$_t_string_memory_ptr_$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (uint256,string memory,bytes32,address,address,uint256,string memory)"}},"id":3852,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6738:37:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_string_memory_ptr_$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$","typeString":"tuple(uint256,string memory,bytes32,address,address,uint256,string memory)"}},"functionReturnParameters":3847,"id":3853,"nodeType":"Return","src":"6731:44:15"}]},"functionSelector":"af4a9fe5","id":3855,"implemented":true,"kind":"function","modifiers":[],"name":"tradingDetails","nameLocation":"6457:14:15","nodeType":"FunctionDefinition","parameters":{"id":3832,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3831,"mutability":"mutable","name":"tradeNumber","nameLocation":"6480:11:15","nodeType":"VariableDeclaration","scope":3855,"src":"6472:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3830,"name":"uint256","nodeType":"ElementaryTypeName","src":"6472:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6471:21:15"},"returnParameters":{"id":3847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3834,"mutability":"mutable","name":"TradeNumber","nameLocation":"6520:11:15","nodeType":"VariableDeclaration","scope":3855,"src":"6512:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3833,"name":"uint256","nodeType":"ElementaryTypeName","src":"6512:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3836,"mutability":"mutable","name":"AssetName","nameLocation":"6556:9:15","nodeType":"VariableDeclaration","scope":3855,"src":"6542:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3835,"name":"string","nodeType":"ElementaryTypeName","src":"6542:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":3838,"mutability":"mutable","name":"Currency","nameLocation":"6584:8:15","nodeType":"VariableDeclaration","scope":3855,"src":"6576:16:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":3837,"name":"bytes32","nodeType":"ElementaryTypeName","src":"6576:7:15","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":3840,"mutability":"mutable","name":"FromAddress","nameLocation":"6611:11:15","nodeType":"VariableDeclaration","scope":3855,"src":"6603:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3839,"name":"address","nodeType":"ElementaryTypeName","src":"6603:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3842,"mutability":"mutable","name":"ToAddress","nameLocation":"6641:9:15","nodeType":"VariableDeclaration","scope":3855,"src":"6633:17:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":3841,"name":"address","nodeType":"ElementaryTypeName","src":"6633:7:15","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":3844,"mutability":"mutable","name":"TotalAmount","nameLocation":"6669:11:15","nodeType":"VariableDeclaration","scope":3855,"src":"6661:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3843,"name":"uint256","nodeType":"ElementaryTypeName","src":"6661:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":3846,"mutability":"mutable","name":"TradeBL","nameLocation":"6706:7:15","nodeType":"VariableDeclaration","scope":3855,"src":"6691:22:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3845,"name":"string","nodeType":"ElementaryTypeName","src":"6691:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6511:203:15"},"scope":4005,"src":"6448:335:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":3904,"nodeType":"Block","src":"6906:305:15","statements":[{"condition":{"id":3867,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6916:39:15","subExpression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3862,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"6917:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3864,"indexExpression":{"id":3863,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"6925:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6917:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3865,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"peelTradeNumber","nodeType":"MemberAccess","referencedDeclaration":4188,"src":"6917:36:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_bool_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (bool)"}},"id":3866,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6917:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3872,"nodeType":"IfStatement","src":"6913:73:15","trueBody":{"id":3871,"nodeType":"Block","src":"6956:30:15","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":3868,"name":"InvalidTradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3193,"src":"6964:18:15","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$__$","typeString":"function () pure"}},"id":3869,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"6964:20:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":3870,"nodeType":"RevertStatement","src":"6957:27:15"}]}},{"assignments":[3874],"declarations":[{"constant":false,"id":3874,"mutability":"mutable","name":"baseURI","nameLocation":"7006:7:15","nodeType":"VariableDeclaration","scope":3904,"src":"6992:21:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3873,"name":"string","nodeType":"ElementaryTypeName","src":"6992:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3877,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3875,"name":"_baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3310,"src":"7016:8:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_string_memory_ptr_$","typeString":"function () view returns (string memory)"}},"id":3876,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7016:10:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"6992:34:15"},{"assignments":[3879],"declarations":[{"constant":false,"id":3879,"mutability":"mutable","name":"hash","nameLocation":"7047:4:15","nodeType":"VariableDeclaration","scope":3904,"src":"7033:18:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3878,"name":"string","nodeType":"ElementaryTypeName","src":"7033:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"id":3885,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"baseExpression":{"id":3880,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"7052:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3882,"indexExpression":{"id":3881,"name":"tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3857,"src":"7060:11:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7052:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"id":3883,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradingBlHash","nodeType":"MemberAccess","referencedDeclaration":4272,"src":"7052:34:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_struct$_trading_$4028_storage_ptr_$returns$_t_string_memory_ptr_$bound_to$_t_struct$_trading_$4028_storage_ptr_$","typeString":"function (struct tradingInCryptoStorage.trading storage pointer) view returns (string memory)"}},"id":3884,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7052:36:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"nodeType":"VariableDeclarationStatement","src":"7033:55:15"},{"expression":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3892,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"id":3888,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"7117:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"id":3887,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7111:5:15","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":3886,"name":"bytes","nodeType":"ElementaryTypeName","src":"7111:5:15","typeDescriptions":{}}},"id":3889,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7111:14:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}},"id":3890,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7111:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":3891,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7135:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7111:25:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"","id":3901,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7198:2:15","typeDescriptions":{"typeIdentifier":"t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470","typeString":"literal_string \"\""},"value":""},"id":3902,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7111:89:15","trueExpression":{"arguments":[{"arguments":[{"id":3897,"name":"baseURI","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3874,"src":"7172:7:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":3898,"name":"hash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3879,"src":"7180:4:15","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}],"expression":{"id":3895,"name":"abi","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-1,"src":"7155:3:15","typeDescriptions":{"typeIdentifier":"t_magic_abi","typeString":"abi"}},"id":3896,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberName":"encodePacked","nodeType":"MemberAccess","src":"7155:16:15","typeDescriptions":{"typeIdentifier":"t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$","typeString":"function () pure returns (bytes memory)"}},"id":3899,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7155:30:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes_memory_ptr","typeString":"bytes memory"}],"id":3894,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7148:6:15","typeDescriptions":{"typeIdentifier":"t_type$_t_string_storage_ptr_$","typeString":"type(string storage pointer)"},"typeName":{"id":3893,"name":"string","nodeType":"ElementaryTypeName","src":"7148:6:15","typeDescriptions":{}}},"id":3900,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7148:38:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"functionReturnParameters":3861,"id":3903,"nodeType":"Return","src":"7095:105:15"}]},"functionSelector":"954679da","id":3905,"implemented":true,"kind":"function","modifiers":[],"name":"getTradingHash","nameLocation":"6827:14:15","nodeType":"FunctionDefinition","parameters":{"id":3858,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3857,"mutability":"mutable","name":"tradeNumber","nameLocation":"6850:11:15","nodeType":"VariableDeclaration","scope":3905,"src":"6842:19:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3856,"name":"uint256","nodeType":"ElementaryTypeName","src":"6842:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6841:21:15"},"returnParameters":{"id":3861,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3860,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3905,"src":"6891:13:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":3859,"name":"string","nodeType":"ElementaryTypeName","src":"6891:6:15","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"6890:15:15"},"scope":4005,"src":"6818:393:15","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":3953,"nodeType":"Block","src":"7316:340:15","statements":[{"assignments":[3912],"declarations":[{"constant":false,"id":3912,"mutability":"mutable","name":"tradingNumbers","nameLocation":"7335:14:15","nodeType":"VariableDeclaration","scope":3953,"src":"7327:22:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3911,"name":"uint256","nodeType":"ElementaryTypeName","src":"7327:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3915,"initialValue":{"arguments":[],"expression":{"argumentTypes":[],"id":3913,"name":"totalTrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3349,"src":"7352:11:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_uint256_$","typeString":"function () view returns (uint256)"}},"id":3914,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7352:13:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7327:38:15"},{"assignments":[3920],"declarations":[{"constant":false,"id":3920,"mutability":"mutable","name":"trades","nameLocation":"7393:6:15","nodeType":"VariableDeclaration","scope":3953,"src":"7376:23:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3918,"name":"uint256","nodeType":"ElementaryTypeName","src":"7376:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3919,"nodeType":"ArrayTypeName","src":"7376:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"id":3926,"initialValue":{"arguments":[{"id":3924,"name":"tradingNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"7416:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3923,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7402:13:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":3921,"name":"uint256","nodeType":"ElementaryTypeName","src":"7406:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3922,"nodeType":"ArrayTypeName","src":"7406:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":3925,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7402:29:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7376:55:15"},{"body":{"id":3949,"nodeType":"Block","src":"7499:126:15","statements":[{"assignments":[3938],"declarations":[{"constant":false,"id":3938,"mutability":"mutable","name":"tradingNumber","nameLocation":"7522:13:15","nodeType":"VariableDeclaration","scope":3949,"src":"7514:21:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3937,"name":"uint256","nodeType":"ElementaryTypeName","src":"7514:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3942,"initialValue":{"arguments":[{"id":3940,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"7563:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3939,"name":"totalTradesNumberByIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3362,"src":"7538:24:15","typeDescriptions":{"typeIdentifier":"t_function_internal_view$_t_uint256_$returns$_t_uint256_$","typeString":"function (uint256) view returns (uint256)"}},"id":3941,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7538:31:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7514:55:15"},{"expression":{"id":3947,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3943,"name":"trades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"7584:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3945,"indexExpression":{"id":3944,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"7591:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7584:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":3946,"name":"tradingNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3938,"src":"7600:13:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7584:29:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3948,"nodeType":"ExpressionStatement","src":"7584:29:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3933,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3931,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"7466:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"id":3932,"name":"tradingNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3912,"src":"7474:14:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7466:22:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":3950,"initializationExpression":{"assignments":[3928],"declarations":[{"constant":false,"id":3928,"mutability":"mutable","name":"index","nameLocation":"7455:5:15","nodeType":"VariableDeclaration","scope":3950,"src":"7447:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3927,"name":"uint256","nodeType":"ElementaryTypeName","src":"7447:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3930,"initialValue":{"hexValue":"30","id":3929,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7463:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7447:17:15"},"loopExpression":{"expression":{"id":3935,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7490:7:15","subExpression":{"id":3934,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3928,"src":"7492:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3936,"nodeType":"ExpressionStatement","src":"7490:7:15"},"nodeType":"ForStatement","src":"7442:183:15"},{"expression":{"id":3951,"name":"trades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3920,"src":"7642:6:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"functionReturnParameters":3910,"id":3952,"nodeType":"Return","src":"7635:13:15"}]},"functionSelector":"c47d62bd","id":3954,"implemented":true,"kind":"function","modifiers":[],"name":"allTradingNumbers","nameLocation":"7258:17:15","nodeType":"FunctionDefinition","parameters":{"id":3906,"nodeType":"ParameterList","parameters":[],"src":"7275:2:15"},"returnParameters":{"id":3910,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3909,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":3954,"src":"7298:16:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3907,"name":"uint256","nodeType":"ElementaryTypeName","src":"7298:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3908,"nodeType":"ArrayTypeName","src":"7298:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7297:18:15"},"scope":4005,"src":"7249:407:15","stateMutability":"view","virtual":false,"visibility":"public"},{"body":{"id":4003,"nodeType":"Block","src":"7786:319:15","statements":[{"assignments":[3969],"declarations":[{"constant":false,"id":3969,"mutability":"mutable","name":"detailsTrades","nameLocation":"7837:13:15","nodeType":"VariableDeclaration","scope":4003,"src":"7797:53:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr","typeString":"struct tradingInCryptoStorage.trading[]"},"typeName":{"baseType":{"id":3967,"nodeType":"UserDefinedTypeName","pathNode":{"id":3966,"name":"tradingInCryptoStorage.trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"7797:30:15"},"referencedDeclaration":4028,"src":"7797:30:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"id":3968,"nodeType":"ArrayTypeName","src":"7797:32:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_trading_$4028_storage_$dyn_storage_ptr","typeString":"struct tradingInCryptoStorage.trading[]"}},"visibility":"internal"}],"id":3977,"initialValue":{"arguments":[{"expression":{"id":3974,"name":"tradingNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"7890:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3975,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7890:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":3973,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"7853:36:15","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (struct tradingInCryptoStorage.trading memory[] memory)"},"typeName":{"baseType":{"id":3971,"nodeType":"UserDefinedTypeName","pathNode":{"id":3970,"name":"tradingInCryptoStorage.trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"7857:30:15"},"referencedDeclaration":4028,"src":"7857:30:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"id":3972,"nodeType":"ArrayTypeName","src":"7857:32:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_trading_$4028_storage_$dyn_storage_ptr","typeString":"struct tradingInCryptoStorage.trading[]"}}},"id":3976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"7853:59:15","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr","typeString":"struct tradingInCryptoStorage.trading memory[] memory"}},"nodeType":"VariableDeclarationStatement","src":"7797:115:15"},{"body":{"id":3999,"nodeType":"Block","src":"7987:80:15","statements":[{"expression":{"id":3997,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":3989,"name":"detailsTrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"8002:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr","typeString":"struct tradingInCryptoStorage.trading memory[] memory"}},"id":3991,"indexExpression":{"id":3990,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"8016:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"8002:20:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_memory_ptr","typeString":"struct tradingInCryptoStorage.trading memory"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":3992,"name":"trading","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3289,"src":"8025:7:15","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_struct$_trading_$4028_storage_$","typeString":"mapping(uint256 => struct tradingInCryptoStorage.trading storage ref)"}},"id":3996,"indexExpression":{"baseExpression":{"id":3993,"name":"tradingNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"8033:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3995,"indexExpression":{"id":3994,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"8048:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8033:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8025:30:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage","typeString":"struct tradingInCryptoStorage.trading storage ref"}},"src":"8002:53:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_memory_ptr","typeString":"struct tradingInCryptoStorage.trading memory"}},"id":3998,"nodeType":"ExpressionStatement","src":"8002:53:15"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":3985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":3982,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"7947:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":3983,"name":"tradingNumbers","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3957,"src":"7955:14:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}},"id":3984,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"7955:21:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7947:29:15","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4000,"initializationExpression":{"assignments":[3979],"declarations":[{"constant":false,"id":3979,"mutability":"mutable","name":"index","nameLocation":"7936:5:15","nodeType":"VariableDeclaration","scope":4000,"src":"7928:13:15","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":3978,"name":"uint256","nodeType":"ElementaryTypeName","src":"7928:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":3981,"initialValue":{"hexValue":"30","id":3980,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7944:1:15","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"7928:17:15"},"loopExpression":{"expression":{"id":3987,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":true,"src":"7978:7:15","subExpression":{"id":3986,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3979,"src":"7980:5:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3988,"nodeType":"ExpressionStatement","src":"7978:7:15"},"nodeType":"ForStatement","src":"7923:144:15"},{"expression":{"id":4001,"name":"detailsTrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":3969,"src":"8084:13:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr","typeString":"struct tradingInCryptoStorage.trading memory[] memory"}},"functionReturnParameters":3963,"id":4002,"nodeType":"Return","src":"8077:20:15"}]},"functionSelector":"770994d0","id":4004,"implemented":true,"kind":"function","modifiers":[],"name":"batchDetailsTrades","nameLocation":"7673:18:15","nodeType":"FunctionDefinition","parameters":{"id":3958,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3957,"mutability":"mutable","name":"tradingNumbers","nameLocation":"7709:14:15","nodeType":"VariableDeclaration","scope":4004,"src":"7692:31:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":3955,"name":"uint256","nodeType":"ElementaryTypeName","src":"7692:7:15","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":3956,"nodeType":"ArrayTypeName","src":"7692:9:15","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"7691:33:15"},"returnParameters":{"id":3963,"nodeType":"ParameterList","parameters":[{"constant":false,"id":3962,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4004,"src":"7745:39:15","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr","typeString":"struct tradingInCryptoStorage.trading[]"},"typeName":{"baseType":{"id":3960,"nodeType":"UserDefinedTypeName","pathNode":{"id":3959,"name":"tradingInCryptoStorage.trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"7745:30:15"},"referencedDeclaration":4028,"src":"7745:30:15","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"id":3961,"nodeType":"ArrayTypeName","src":"7745:32:15","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_trading_$4028_storage_$dyn_storage_ptr","typeString":"struct tradingInCryptoStorage.trading[]"}},"visibility":"internal"}],"src":"7744:41:15"},"scope":4005,"src":"7664:441:15","stateMutability":"view","virtual":false,"visibility":"public"}],"scope":4006,"src":"627:7489:15","usedErrors":[3193,3195,3197,3199,3201,3203,3205,3207,3209,3211,3213,3215]}],"src":"32:8084:15"},"id":15},"contracts/tradingInCryptoStorage.sol":{"ast":{"absolutePath":"contracts/tradingInCryptoStorage.sol","exportedSymbols":{"tradingInCryptoStorage":[4315]},"id":4316,"license":"GPL-3.0","nodeType":"SourceUnit","nodes":[{"id":4007,"literals":["solidity","^","0.8",".4"],"nodeType":"PragmaDirective","src":"37:23:16"},{"abstract":false,"baseContracts":[],"canonicalName":"tradingInCryptoStorage","contractDependencies":[],"contractKind":"library","fullyImplemented":true,"id":4315,"linearizedBaseContracts":[4315],"name":"tradingInCryptoStorage","nameLocation":"72:22:16","nodeType":"ContractDefinition","nodes":[{"canonicalName":"tradingInCryptoStorage.trading","id":4028,"members":[{"constant":false,"id":4009,"mutability":"mutable","name":"tradeNumber","nameLocation":"137:11:16","nodeType":"VariableDeclaration","scope":4028,"src":"129:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4008,"name":"uint256","nodeType":"ElementaryTypeName","src":"129:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4011,"mutability":"mutable","name":"assetName","nameLocation":"166:9:16","nodeType":"VariableDeclaration","scope":4028,"src":"159:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4010,"name":"string","nodeType":"ElementaryTypeName","src":"159:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4013,"mutability":"mutable","name":"currency","nameLocation":"194:8:16","nodeType":"VariableDeclaration","scope":4028,"src":"186:16:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4012,"name":"bytes32","nodeType":"ElementaryTypeName","src":"186:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4015,"mutability":"mutable","name":"fromAddress","nameLocation":"221:11:16","nodeType":"VariableDeclaration","scope":4028,"src":"213:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4014,"name":"address","nodeType":"ElementaryTypeName","src":"213:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4017,"mutability":"mutable","name":"toAddress","nameLocation":"251:9:16","nodeType":"VariableDeclaration","scope":4028,"src":"243:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4016,"name":"address","nodeType":"ElementaryTypeName","src":"243:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4019,"mutability":"mutable","name":"totalAmount","nameLocation":"279:11:16","nodeType":"VariableDeclaration","scope":4028,"src":"271:19:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4018,"name":"uint256","nodeType":"ElementaryTypeName","src":"271:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4021,"mutability":"mutable","name":"blHash","nameLocation":"308:6:16","nodeType":"VariableDeclaration","scope":4028,"src":"301:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":4020,"name":"string","nodeType":"ElementaryTypeName","src":"301:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4023,"mutability":"mutable","name":"acceptTrade","nameLocation":"331:11:16","nodeType":"VariableDeclaration","scope":4028,"src":"325:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4022,"name":"bool","nodeType":"ElementaryTypeName","src":"325:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4025,"mutability":"mutable","name":"verifyBl","nameLocation":"358:8:16","nodeType":"VariableDeclaration","scope":4028,"src":"353:13:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4024,"name":"bool","nodeType":"ElementaryTypeName","src":"353:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":4027,"mutability":"mutable","name":"tradeType","nameLocation":"385:9:16","nodeType":"VariableDeclaration","scope":4028,"src":"377:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4026,"name":"uint256","nodeType":"ElementaryTypeName","src":"377:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"trading","nameLocation":"110:7:16","nodeType":"StructDefinition","scope":4315,"src":"103:299:16","visibility":"public"},{"body":{"id":4090,"nodeType":"Block","src":"686:285:16","statements":[{"expression":{"id":4052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4048,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"697:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4050,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tradeNumber","nodeType":"MemberAccess","referencedDeclaration":4009,"src":"697:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4051,"name":"_tradeNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4033,"src":"716:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"697:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4053,"nodeType":"ExpressionStatement","src":"697:31:16"},{"expression":{"id":4058,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4054,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"739:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4056,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"assetName","nodeType":"MemberAccess","referencedDeclaration":4011,"src":"739:14:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4057,"name":"_assetName","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4035,"src":"756:10:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"739:27:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4059,"nodeType":"ExpressionStatement","src":"739:27:16"},{"expression":{"id":4064,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4060,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"777:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4062,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"currency","nodeType":"MemberAccess","referencedDeclaration":4013,"src":"777:13:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4063,"name":"_currency","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4037,"src":"792:9:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"src":"777:24:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":4065,"nodeType":"ExpressionStatement","src":"777:24:16"},{"expression":{"id":4070,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4066,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"812:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4068,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"fromAddress","nodeType":"MemberAccess","referencedDeclaration":4015,"src":"812:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4069,"name":"_fromAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4039,"src":"831:12:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"812:31:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4071,"nodeType":"ExpressionStatement","src":"812:31:16"},{"expression":{"id":4076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4072,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"854:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4074,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"toAddress","nodeType":"MemberAccess","referencedDeclaration":4017,"src":"854:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4075,"name":"_toAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4041,"src":"872:10:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"854:28:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":4077,"nodeType":"ExpressionStatement","src":"854:28:16"},{"expression":{"id":4082,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4078,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"894:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4080,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"totalAmount","nodeType":"MemberAccess","referencedDeclaration":4019,"src":"894:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4081,"name":"_totalAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4043,"src":"913:12:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"894:31:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4083,"nodeType":"ExpressionStatement","src":"894:31:16"},{"expression":{"id":4088,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4084,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4031,"src":"936:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4086,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"tradeType","nodeType":"MemberAccess","referencedDeclaration":4027,"src":"936:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4087,"name":"_tradeType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4045,"src":"953:10:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"936:27:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":4089,"nodeType":"ExpressionStatement","src":"936:27:16"}]},"id":4091,"implemented":true,"kind":"function","modifiers":[],"name":"set","nameLocation":"417:3:16","nodeType":"FunctionDefinition","parameters":{"id":4046,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4031,"mutability":"mutable","name":"self","nameLocation":"447:4:16","nodeType":"VariableDeclaration","scope":4091,"src":"431:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4030,"nodeType":"UserDefinedTypeName","pathNode":{"id":4029,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"431:7:16"},"referencedDeclaration":4028,"src":"431:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"},{"constant":false,"id":4033,"mutability":"mutable","name":"_tradeNumber","nameLocation":"470:12:16","nodeType":"VariableDeclaration","scope":4091,"src":"462:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4032,"name":"uint256","nodeType":"ElementaryTypeName","src":"462:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4035,"mutability":"mutable","name":"_assetName","nameLocation":"507:10:16","nodeType":"VariableDeclaration","scope":4091,"src":"493:24:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4034,"name":"string","nodeType":"ElementaryTypeName","src":"493:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4037,"mutability":"mutable","name":"_currency","nameLocation":"536:9:16","nodeType":"VariableDeclaration","scope":4091,"src":"528:17:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4036,"name":"bytes32","nodeType":"ElementaryTypeName","src":"528:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4039,"mutability":"mutable","name":"_fromAddress","nameLocation":"564:12:16","nodeType":"VariableDeclaration","scope":4091,"src":"556:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4038,"name":"address","nodeType":"ElementaryTypeName","src":"556:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4041,"mutability":"mutable","name":"_toAddress","nameLocation":"595:10:16","nodeType":"VariableDeclaration","scope":4091,"src":"587:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4040,"name":"address","nodeType":"ElementaryTypeName","src":"587:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4043,"mutability":"mutable","name":"_totalAmount","nameLocation":"624:12:16","nodeType":"VariableDeclaration","scope":4091,"src":"616:20:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4042,"name":"uint256","nodeType":"ElementaryTypeName","src":"616:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4045,"mutability":"mutable","name":"_tradeType","nameLocation":"655:10:16","nodeType":"VariableDeclaration","scope":4091,"src":"647:18:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4044,"name":"uint256","nodeType":"ElementaryTypeName","src":"647:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"420:256:16"},"returnParameters":{"id":4047,"nodeType":"ParameterList","parameters":[],"src":"686:0:16"},"scope":4315,"src":"408:563:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4103,"nodeType":"Block","src":"1050:40:16","statements":[{"expression":{"id":4101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4097,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4094,"src":"1061:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4099,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"acceptTrade","nodeType":"MemberAccess","referencedDeclaration":4023,"src":"1061:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4100,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1078:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1061:21:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4102,"nodeType":"ExpressionStatement","src":"1061:21:16"}]},"id":4104,"implemented":true,"kind":"function","modifiers":[],"name":"setAcceptTrading","nameLocation":"986:16:16","nodeType":"FunctionDefinition","parameters":{"id":4095,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4094,"mutability":"mutable","name":"self","nameLocation":"1025:4:16","nodeType":"VariableDeclaration","scope":4104,"src":"1009:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4093,"nodeType":"UserDefinedTypeName","pathNode":{"id":4092,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"1009:7:16"},"referencedDeclaration":4028,"src":"1009:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"}],"src":"1002:34:16"},"returnParameters":{"id":4096,"nodeType":"ParameterList","parameters":[],"src":"1050:0:16"},"scope":4315,"src":"977:113:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4118,"nodeType":"Block","src":"1193:38:16","statements":[{"expression":{"id":4116,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4112,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4107,"src":"1204:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4114,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"blHash","nodeType":"MemberAccess","referencedDeclaration":4021,"src":"1204:11:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":4115,"name":"_blHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4109,"src":"1216:7:16","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},"src":"1204:19:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"id":4117,"nodeType":"ExpressionStatement","src":"1204:19:16"}]},"id":4119,"implemented":true,"kind":"function","modifiers":[],"name":"setTradingBL","nameLocation":"1105:12:16","nodeType":"FunctionDefinition","parameters":{"id":4110,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4107,"mutability":"mutable","name":"self","nameLocation":"1140:4:16","nodeType":"VariableDeclaration","scope":4119,"src":"1124:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4106,"nodeType":"UserDefinedTypeName","pathNode":{"id":4105,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"1124:7:16"},"referencedDeclaration":4028,"src":"1124:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"},{"constant":false,"id":4109,"mutability":"mutable","name":"_blHash","nameLocation":"1165:7:16","nodeType":"VariableDeclaration","scope":4119,"src":"1151:21:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4108,"name":"string","nodeType":"ElementaryTypeName","src":"1151:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1117:62:16"},"returnParameters":{"id":4111,"nodeType":"ParameterList","parameters":[],"src":"1193:0:16"},"scope":4315,"src":"1096:135:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4131,"nodeType":"Block","src":"1312:37:16","statements":[{"expression":{"id":4129,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"id":4125,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4122,"src":"1323:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4127,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberName":"verifyBl","nodeType":"MemberAccess","referencedDeclaration":4025,"src":"1323:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":4128,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1337:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"1323:18:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4130,"nodeType":"ExpressionStatement","src":"1323:18:16"}]},"id":4132,"implemented":true,"kind":"function","modifiers":[],"name":"setVerifyTradingBL","nameLocation":"1246:18:16","nodeType":"FunctionDefinition","parameters":{"id":4123,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4122,"mutability":"mutable","name":"self","nameLocation":"1287:4:16","nodeType":"VariableDeclaration","scope":4132,"src":"1271:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4121,"nodeType":"UserDefinedTypeName","pathNode":{"id":4120,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"1271:7:16"},"referencedDeclaration":4028,"src":"1271:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"}],"src":"1264:34:16"},"returnParameters":{"id":4124,"nodeType":"ParameterList","parameters":[],"src":"1312:0:16"},"scope":4315,"src":"1237:112:16","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":4168,"nodeType":"Block","src":"1575:214:16","statements":[{"expression":{"components":[{"expression":{"id":4152,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"1604:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4153,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradeNumber","nodeType":"MemberAccess","referencedDeclaration":4009,"src":"1604:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4154,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"1631:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4155,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"assetName","nodeType":"MemberAccess","referencedDeclaration":4011,"src":"1631:14:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"expression":{"id":4156,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"1656:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4157,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currency","nodeType":"MemberAccess","referencedDeclaration":4013,"src":"1656:13:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"expression":{"id":4158,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"1680:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4159,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromAddress","nodeType":"MemberAccess","referencedDeclaration":4015,"src":"1680:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4160,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"1707:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4161,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"toAddress","nodeType":"MemberAccess","referencedDeclaration":4017,"src":"1707:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":4162,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"1732:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4163,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"totalAmount","nodeType":"MemberAccess","referencedDeclaration":4019,"src":"1732:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":4164,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4135,"src":"1759:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4165,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blHash","nodeType":"MemberAccess","referencedDeclaration":4021,"src":"1759:11:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"id":4166,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"1593:188:16","typeDescriptions":{"typeIdentifier":"t_tuple$_t_uint256_$_t_string_storage_$_t_bytes32_$_t_address_$_t_address_$_t_uint256_$_t_string_storage_$","typeString":"tuple(uint256,string storage ref,bytes32,address,address,uint256,string storage ref)"}},"functionReturnParameters":4151,"id":4167,"nodeType":"Return","src":"1586:195:16"}]},"id":4169,"implemented":true,"kind":"function","modifiers":[],"name":"tradingDetails","nameLocation":"1364:14:16","nodeType":"FunctionDefinition","parameters":{"id":4136,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4135,"mutability":"mutable","name":"self","nameLocation":"1405:4:16","nodeType":"VariableDeclaration","scope":4169,"src":"1389:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4134,"nodeType":"UserDefinedTypeName","pathNode":{"id":4133,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"1389:7:16"},"referencedDeclaration":4028,"src":"1389:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"}],"src":"1378:38:16"},"returnParameters":{"id":4151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4138,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4169,"src":"1439:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4137,"name":"uint256","nodeType":"ElementaryTypeName","src":"1439:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4169,"src":"1457:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4139,"name":"string","nodeType":"ElementaryTypeName","src":"1457:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":4142,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4169,"src":"1481:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4141,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1481:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":4144,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4169,"src":"1499:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4143,"name":"address","nodeType":"ElementaryTypeName","src":"1499:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4146,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4169,"src":"1517:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4145,"name":"address","nodeType":"ElementaryTypeName","src":"1517:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":4148,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4169,"src":"1535:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4147,"name":"uint256","nodeType":"ElementaryTypeName","src":"1535:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":4150,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4169,"src":"1553:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4149,"name":"string","nodeType":"ElementaryTypeName","src":"1553:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"1438:130:16"},"scope":4315,"src":"1355:434:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4187,"nodeType":"Block","src":"1890:111:16","statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4180,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":4177,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4172,"src":"1904:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4178,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradeNumber","nodeType":"MemberAccess","referencedDeclaration":4009,"src":"1904:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"hexValue":"30","id":4179,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1922:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1904:19:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":4184,"nodeType":"IfStatement","src":"1901:70:16","trueBody":{"id":4183,"nodeType":"Block","src":"1934:37:16","statements":[{"expression":{"hexValue":"74727565","id":4181,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1955:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"functionReturnParameters":4176,"id":4182,"nodeType":"Return","src":"1948:11:16"}]}},{"expression":{"hexValue":"66616c7365","id":4185,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"1988:5:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"functionReturnParameters":4176,"id":4186,"nodeType":"Return","src":"1981:12:16"}]},"id":4188,"implemented":true,"kind":"function","modifiers":[],"name":"peelTradeNumber","nameLocation":"1804:15:16","nodeType":"FunctionDefinition","parameters":{"id":4173,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4172,"mutability":"mutable","name":"self","nameLocation":"1846:4:16","nodeType":"VariableDeclaration","scope":4188,"src":"1830:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4171,"nodeType":"UserDefinedTypeName","pathNode":{"id":4170,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"1830:7:16"},"referencedDeclaration":4028,"src":"1830:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"}],"src":"1819:38:16"},"returnParameters":{"id":4176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4188,"src":"1879:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4174,"name":"bool","nodeType":"ElementaryTypeName","src":"1879:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"1878:6:16"},"scope":4315,"src":"1795:206:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4199,"nodeType":"Block","src":"2109:40:16","statements":[{"expression":{"expression":{"id":4196,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4191,"src":"2127:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4197,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"assetName","nodeType":"MemberAccess","referencedDeclaration":4011,"src":"2127:14:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":4195,"id":4198,"nodeType":"Return","src":"2120:21:16"}]},"id":4200,"implemented":true,"kind":"function","modifiers":[],"name":"tradingAssetName","nameLocation":"2016:16:16","nodeType":"FunctionDefinition","parameters":{"id":4192,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4191,"mutability":"mutable","name":"self","nameLocation":"2056:4:16","nodeType":"VariableDeclaration","scope":4200,"src":"2040:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4190,"nodeType":"UserDefinedTypeName","pathNode":{"id":4189,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"2040:7:16"},"referencedDeclaration":4028,"src":"2040:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"}],"src":"2032:35:16"},"returnParameters":{"id":4195,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4194,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4200,"src":"2089:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4193,"name":"string","nodeType":"ElementaryTypeName","src":"2089:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2088:15:16"},"scope":4315,"src":"2007:142:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4211,"nodeType":"Block","src":"2253:42:16","statements":[{"expression":{"expression":{"id":4208,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4203,"src":"2271:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4209,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"totalAmount","nodeType":"MemberAccess","referencedDeclaration":4019,"src":"2271:16:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4207,"id":4210,"nodeType":"Return","src":"2264:23:16"}]},"id":4212,"implemented":true,"kind":"function","modifiers":[],"name":"tradingTotalAmount","nameLocation":"2164:18:16","nodeType":"FunctionDefinition","parameters":{"id":4204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4203,"mutability":"mutable","name":"self","nameLocation":"2206:4:16","nodeType":"VariableDeclaration","scope":4212,"src":"2190:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4202,"nodeType":"UserDefinedTypeName","pathNode":{"id":4201,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"2190:7:16"},"referencedDeclaration":4028,"src":"2190:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"}],"src":"2182:35:16"},"returnParameters":{"id":4207,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4206,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4212,"src":"2239:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4205,"name":"uint256","nodeType":"ElementaryTypeName","src":"2239:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2238:9:16"},"scope":4315,"src":"2155:140:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4223,"nodeType":"Block","src":"2399:42:16","statements":[{"expression":{"expression":{"id":4220,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4215,"src":"2417:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4221,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"fromAddress","nodeType":"MemberAccess","referencedDeclaration":4015,"src":"2417:16:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4219,"id":4222,"nodeType":"Return","src":"2410:23:16"}]},"id":4224,"implemented":true,"kind":"function","modifiers":[],"name":"tradingFromAddress","nameLocation":"2310:18:16","nodeType":"FunctionDefinition","parameters":{"id":4216,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4215,"mutability":"mutable","name":"self","nameLocation":"2352:4:16","nodeType":"VariableDeclaration","scope":4224,"src":"2336:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4214,"nodeType":"UserDefinedTypeName","pathNode":{"id":4213,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"2336:7:16"},"referencedDeclaration":4028,"src":"2336:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"}],"src":"2328:35:16"},"returnParameters":{"id":4219,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4218,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4224,"src":"2385:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4217,"name":"address","nodeType":"ElementaryTypeName","src":"2385:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2384:9:16"},"scope":4315,"src":"2301:140:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4235,"nodeType":"Block","src":"2543:40:16","statements":[{"expression":{"expression":{"id":4232,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4227,"src":"2561:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4233,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"toAddress","nodeType":"MemberAccess","referencedDeclaration":4017,"src":"2561:14:16","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":4231,"id":4234,"nodeType":"Return","src":"2554:21:16"}]},"id":4236,"implemented":true,"kind":"function","modifiers":[],"name":"tradingToAddress","nameLocation":"2456:16:16","nodeType":"FunctionDefinition","parameters":{"id":4228,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4227,"mutability":"mutable","name":"self","nameLocation":"2496:4:16","nodeType":"VariableDeclaration","scope":4236,"src":"2480:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4226,"nodeType":"UserDefinedTypeName","pathNode":{"id":4225,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"2480:7:16"},"referencedDeclaration":4028,"src":"2480:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"}],"src":"2472:35:16"},"returnParameters":{"id":4231,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4230,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4236,"src":"2529:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":4229,"name":"address","nodeType":"ElementaryTypeName","src":"2529:7:16","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2528:9:16"},"scope":4315,"src":"2447:136:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4247,"nodeType":"Block","src":"2680:42:16","statements":[{"expression":{"expression":{"id":4244,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4239,"src":"2698:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4245,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"acceptTrade","nodeType":"MemberAccess","referencedDeclaration":4023,"src":"2698:16:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4243,"id":4246,"nodeType":"Return","src":"2691:23:16"}]},"id":4248,"implemented":true,"kind":"function","modifiers":[],"name":"isAcceptTrading","nameLocation":"2598:15:16","nodeType":"FunctionDefinition","parameters":{"id":4240,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4239,"mutability":"mutable","name":"self","nameLocation":"2636:4:16","nodeType":"VariableDeclaration","scope":4248,"src":"2620:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4238,"nodeType":"UserDefinedTypeName","pathNode":{"id":4237,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"2620:7:16"},"referencedDeclaration":4028,"src":"2620:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"}],"src":"2613:34:16"},"returnParameters":{"id":4243,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4242,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4248,"src":"2669:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4241,"name":"bool","nodeType":"ElementaryTypeName","src":"2669:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2668:6:16"},"scope":4315,"src":"2589:133:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4259,"nodeType":"Block","src":"2816:39:16","statements":[{"expression":{"expression":{"id":4256,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4251,"src":"2834:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4257,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"currency","nodeType":"MemberAccess","referencedDeclaration":4013,"src":"2834:13:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"functionReturnParameters":4255,"id":4258,"nodeType":"Return","src":"2827:20:16"}]},"id":4260,"implemented":true,"kind":"function","modifiers":[],"name":"tradingCurrency","nameLocation":"2737:15:16","nodeType":"FunctionDefinition","parameters":{"id":4252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4251,"mutability":"mutable","name":"self","nameLocation":"2775:4:16","nodeType":"VariableDeclaration","scope":4260,"src":"2759:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4250,"nodeType":"UserDefinedTypeName","pathNode":{"id":4249,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"2759:7:16"},"referencedDeclaration":4028,"src":"2759:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"}],"src":"2752:34:16"},"returnParameters":{"id":4255,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4254,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4260,"src":"2808:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":4253,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2808:7:16","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2807:9:16"},"scope":4315,"src":"2728:127:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4271,"nodeType":"Block","src":"2954:36:16","statements":[{"expression":{"expression":{"id":4268,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4263,"src":"2971:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4269,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blHash","nodeType":"MemberAccess","referencedDeclaration":4021,"src":"2971:11:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},"functionReturnParameters":4267,"id":4270,"nodeType":"Return","src":"2964:18:16"}]},"id":4272,"implemented":true,"kind":"function","modifiers":[],"name":"tradingBlHash","nameLocation":"2871:13:16","nodeType":"FunctionDefinition","parameters":{"id":4264,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4263,"mutability":"mutable","name":"self","nameLocation":"2907:4:16","nodeType":"VariableDeclaration","scope":4272,"src":"2891:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4262,"nodeType":"UserDefinedTypeName","pathNode":{"id":4261,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"2891:7:16"},"referencedDeclaration":4028,"src":"2891:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"}],"src":"2884:34:16"},"returnParameters":{"id":4267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4266,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4272,"src":"2940:13:16","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":4265,"name":"string","nodeType":"ElementaryTypeName","src":"2940:6:16","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"2939:15:16"},"scope":4315,"src":"2862:128:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4289,"nodeType":"Block","src":"3086:55:16","statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":4287,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"arguments":[{"expression":{"id":4282,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4275,"src":"3109:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4283,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"blHash","nodeType":"MemberAccess","referencedDeclaration":4021,"src":"3109:11:16","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}],"id":4281,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3103:5:16","typeDescriptions":{"typeIdentifier":"t_type$_t_bytes_storage_ptr_$","typeString":"type(bytes storage pointer)"},"typeName":{"id":4280,"name":"bytes","nodeType":"ElementaryTypeName","src":"3103:5:16","typeDescriptions":{}}},"id":4284,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"names":[],"nodeType":"FunctionCall","src":"3103:18:16","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes storage pointer"}},"id":4285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberName":"length","nodeType":"MemberAccess","src":"3103:25:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"30","id":4286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3132:1:16","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3103:30:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4279,"id":4288,"nodeType":"Return","src":"3096:37:16"}]},"id":4290,"implemented":true,"kind":"function","modifiers":[],"name":"isTradingBlHashEmpty","nameLocation":"3005:20:16","nodeType":"FunctionDefinition","parameters":{"id":4276,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4275,"mutability":"mutable","name":"self","nameLocation":"3048:4:16","nodeType":"VariableDeclaration","scope":4290,"src":"3032:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4274,"nodeType":"UserDefinedTypeName","pathNode":{"id":4273,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"3032:7:16"},"referencedDeclaration":4028,"src":"3032:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"}],"src":"3025:34:16"},"returnParameters":{"id":4279,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4278,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4290,"src":"3081:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4277,"name":"bool","nodeType":"ElementaryTypeName","src":"3081:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3080:6:16"},"scope":4315,"src":"2996:145:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4301,"nodeType":"Block","src":"3231:40:16","statements":[{"expression":{"expression":{"id":4298,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4293,"src":"3249:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4299,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"tradeType","nodeType":"MemberAccess","referencedDeclaration":4027,"src":"3249:14:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":4297,"id":4300,"nodeType":"Return","src":"3242:21:16"}]},"id":4302,"implemented":true,"kind":"function","modifiers":[],"name":"tradingType","nameLocation":"3156:11:16","nodeType":"FunctionDefinition","parameters":{"id":4294,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4293,"mutability":"mutable","name":"self","nameLocation":"3190:4:16","nodeType":"VariableDeclaration","scope":4302,"src":"3174:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4292,"nodeType":"UserDefinedTypeName","pathNode":{"id":4291,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"3174:7:16"},"referencedDeclaration":4028,"src":"3174:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"}],"src":"3167:34:16"},"returnParameters":{"id":4297,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4296,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4302,"src":"3223:7:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":4295,"name":"uint256","nodeType":"ElementaryTypeName","src":"3223:7:16","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3222:9:16"},"scope":4315,"src":"3147:124:16","stateMutability":"view","virtual":false,"visibility":"internal"},{"body":{"id":4313,"nodeType":"Block","src":"3357:39:16","statements":[{"expression":{"expression":{"id":4310,"name":"self","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":4305,"src":"3375:4:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading storage pointer"}},"id":4311,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberName":"verifyBl","nodeType":"MemberAccess","referencedDeclaration":4025,"src":"3375:13:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":4309,"id":4312,"nodeType":"Return","src":"3368:20:16"}]},"id":4314,"implemented":true,"kind":"function","modifiers":[],"name":"isVerifyBl","nameLocation":"3286:10:16","nodeType":"FunctionDefinition","parameters":{"id":4306,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4305,"mutability":"mutable","name":"self","nameLocation":"3319:4:16","nodeType":"VariableDeclaration","scope":4314,"src":"3303:20:16","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"},"typeName":{"id":4304,"nodeType":"UserDefinedTypeName","pathNode":{"id":4303,"name":"trading","nodeType":"IdentifierPath","referencedDeclaration":4028,"src":"3303:7:16"},"referencedDeclaration":4028,"src":"3303:7:16","typeDescriptions":{"typeIdentifier":"t_struct$_trading_$4028_storage_ptr","typeString":"struct tradingInCryptoStorage.trading"}},"visibility":"internal"}],"src":"3296:34:16"},"returnParameters":{"id":4309,"nodeType":"ParameterList","parameters":[{"constant":false,"id":4308,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":4314,"src":"3352:4:16","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":4307,"name":"bool","nodeType":"ElementaryTypeName","src":"3352:4:16","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3351:6:16"},"scope":4315,"src":"3277:119:16","stateMutability":"view","virtual":false,"visibility":"internal"}],"scope":4316,"src":"64:3335:16","usedErrors":[]}],"src":"37:3365:16"},"id":16}},"contracts":{"@openzeppelin/contracts/access/AccessControl.sol":{"AccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"DEFAULT_ADMIN_ROLE()":"a217fddf","getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ``` bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ``` function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it.\",\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/AccessControl.sol\":\"AccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/IAccessControl.sol":{"IAccessControl":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getRoleAdmin(bytes32)":"248a9ca3","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this. _Available since v3.1._\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]}},\"version\":1}"}},"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/ERC20.sol":{"ERC20":{"abi":[{"inputs":[{"internalType":"string","name":"name_","type":"string"},{"internalType":"string","name":"symbol_","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_546":{"entryPoint":null,"id":546,"parameterSlots":2,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":576,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":651,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory":{"entryPoint":702,"id":null,"parameterSlots":2,"returnSlots":2},"allocate_memory":{"entryPoint":437,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":289,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":468,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":522,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":882,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":383,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":835,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":336,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":309,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":314,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":304,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":299,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":319,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4093:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"423:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:17"},"nodeType":"YulFunctionCall","src":"433:12:17"},"nodeType":"YulExpressionStatement","src":"433:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:17"},{"body":{"nodeType":"YulBlock","src":"546:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:17"},"nodeType":"YulFunctionCall","src":"556:12:17"},"nodeType":"YulExpressionStatement","src":"556:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:17"},{"body":{"nodeType":"YulBlock","src":"628:54:17","statements":[{"nodeType":"YulAssignment","src":"638:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:17"},"nodeType":"YulFunctionCall","src":"652:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:17"},"nodeType":"YulFunctionCall","src":"668:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:17"},"nodeType":"YulFunctionCall","src":"648:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:17","type":""}],"src":"580:102:17"},{"body":{"nodeType":"YulBlock","src":"716:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:17"},"nodeType":"YulFunctionCall","src":"726:88:17"},"nodeType":"YulExpressionStatement","src":"726:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:17"},"nodeType":"YulFunctionCall","src":"823:15:17"},"nodeType":"YulExpressionStatement","src":"823:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:17"},"nodeType":"YulFunctionCall","src":"847:15:17"},"nodeType":"YulExpressionStatement","src":"847:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:17"},{"body":{"nodeType":"YulBlock","src":"917:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:17"},"nodeType":"YulFunctionCall","src":"957:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:17"},"nodeType":"YulFunctionCall","src":"945:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:17"},"nodeType":"YulFunctionCall","src":"1098:18:17"},"nodeType":"YulExpressionStatement","src":"1098:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:17"},"nodeType":"YulFunctionCall","src":"1036:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:17"},"nodeType":"YulFunctionCall","src":"1072:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:17"},"nodeType":"YulFunctionCall","src":"1033:62:17"},"nodeType":"YulIf","src":"1030:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:17"},"nodeType":"YulFunctionCall","src":"1127:22:17"},"nodeType":"YulExpressionStatement","src":"1127:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:17","type":""}],"src":"874:281:17"},{"body":{"nodeType":"YulBlock","src":"1202:88:17","statements":[{"nodeType":"YulAssignment","src":"1212:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:17"},"nodeType":"YulFunctionCall","src":"1222:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:17"},"nodeType":"YulFunctionCall","src":"1251:33:17"},"nodeType":"YulExpressionStatement","src":"1251:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:17","type":""}],"src":"1161:129:17"},{"body":{"nodeType":"YulBlock","src":"1363:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:17"},"nodeType":"YulFunctionCall","src":"1470:18:17"},"nodeType":"YulExpressionStatement","src":"1470:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:17"},"nodeType":"YulFunctionCall","src":"1437:30:17"},"nodeType":"YulIf","src":"1434:56:17"},{"nodeType":"YulAssignment","src":"1500:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:17"},"nodeType":"YulFunctionCall","src":"1508:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:17"}]},{"nodeType":"YulAssignment","src":"1574:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:17"},"nodeType":"YulFunctionCall","src":"1582:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:17","type":""}],"src":"1296:308:17"},{"body":{"nodeType":"YulBlock","src":"1659:258:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:17"},"nodeType":"YulFunctionCall","src":"1759:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:17"},"nodeType":"YulFunctionCall","src":"1778:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:17"},"nodeType":"YulFunctionCall","src":"1772:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:17"},"nodeType":"YulFunctionCall","src":"1752:39:17"},"nodeType":"YulExpressionStatement","src":"1752:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:17"},"nodeType":"YulFunctionCall","src":"1696:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:17","statements":[{"nodeType":"YulAssignment","src":"1712:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:17"},"nodeType":"YulFunctionCall","src":"1717:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:17","statements":[]},"src":"1688:113:17"},{"body":{"nodeType":"YulBlock","src":"1835:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:17"},"nodeType":"YulFunctionCall","src":"1881:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:17"},"nodeType":"YulFunctionCall","src":"1874:27:17"},"nodeType":"YulExpressionStatement","src":"1874:27:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:17"},"nodeType":"YulFunctionCall","src":"1813:13:17"},"nodeType":"YulIf","src":"1810:101:17"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:17","type":""}],"src":"1610:307:17"},{"body":{"nodeType":"YulBlock","src":"2018:326:17","statements":[{"nodeType":"YulAssignment","src":"2028:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:17"},"nodeType":"YulFunctionCall","src":"2053:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:17"},"nodeType":"YulFunctionCall","src":"2037:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:17"},"nodeType":"YulFunctionCall","src":"2112:21:17"},"nodeType":"YulExpressionStatement","src":"2112:21:17"},{"nodeType":"YulVariableDeclaration","src":"2142:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:17"},"nodeType":"YulFunctionCall","src":"2153:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:17"},"nodeType":"YulFunctionCall","src":"2209:79:17"},"nodeType":"YulExpressionStatement","src":"2209:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:17"},"nodeType":"YulFunctionCall","src":"2184:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:17"},"nodeType":"YulFunctionCall","src":"2181:25:17"},"nodeType":"YulIf","src":"2178:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:17"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:17"},"nodeType":"YulFunctionCall","src":"2299:39:17"},"nodeType":"YulExpressionStatement","src":"2299:39:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:17","type":""}],"src":"1923:421:17"},{"body":{"nodeType":"YulBlock","src":"2437:282:17","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:17"},"nodeType":"YulFunctionCall","src":"2488:79:17"},"nodeType":"YulExpressionStatement","src":"2488:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:17"},"nodeType":"YulFunctionCall","src":"2461:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:17"},"nodeType":"YulFunctionCall","src":"2457:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:17"},"nodeType":"YulFunctionCall","src":"2450:35:17"},"nodeType":"YulIf","src":"2447:122:17"},{"nodeType":"YulVariableDeclaration","src":"2578:27:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:17"},"nodeType":"YulFunctionCall","src":"2592:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:17"},"nodeType":"YulFunctionCall","src":"2682:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:17"},"nodeType":"YulFunctionCall","src":"2623:90:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:17","type":""}],"src":"2364:355:17"},{"body":{"nodeType":"YulBlock","src":"2839:739:17","statements":[{"body":{"nodeType":"YulBlock","src":"2885:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2887:77:17"},"nodeType":"YulFunctionCall","src":"2887:79:17"},"nodeType":"YulExpressionStatement","src":"2887:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2860:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2869:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2856:3:17"},"nodeType":"YulFunctionCall","src":"2856:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2881:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2852:3:17"},"nodeType":"YulFunctionCall","src":"2852:32:17"},"nodeType":"YulIf","src":"2849:119:17"},{"nodeType":"YulBlock","src":"2978:291:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2993:38:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3017:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3028:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3013:3:17"},"nodeType":"YulFunctionCall","src":"3013:17:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3007:5:17"},"nodeType":"YulFunctionCall","src":"3007:24:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2997:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3078:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3080:77:17"},"nodeType":"YulFunctionCall","src":"3080:79:17"},"nodeType":"YulExpressionStatement","src":"3080:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3050:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3058:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3047:2:17"},"nodeType":"YulFunctionCall","src":"3047:30:17"},"nodeType":"YulIf","src":"3044:117:17"},{"nodeType":"YulAssignment","src":"3175:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3231:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3242:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3227:3:17"},"nodeType":"YulFunctionCall","src":"3227:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3251:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3185:41:17"},"nodeType":"YulFunctionCall","src":"3185:74:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3175:6:17"}]}]},{"nodeType":"YulBlock","src":"3279:292:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3294:39:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3318:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3329:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3314:3:17"},"nodeType":"YulFunctionCall","src":"3314:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3308:5:17"},"nodeType":"YulFunctionCall","src":"3308:25:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"3298:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3380:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3382:77:17"},"nodeType":"YulFunctionCall","src":"3382:79:17"},"nodeType":"YulExpressionStatement","src":"3382:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3352:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3360:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3349:2:17"},"nodeType":"YulFunctionCall","src":"3349:30:17"},"nodeType":"YulIf","src":"3346:117:17"},{"nodeType":"YulAssignment","src":"3477:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3533:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3544:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3529:3:17"},"nodeType":"YulFunctionCall","src":"3529:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3553:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3487:41:17"},"nodeType":"YulFunctionCall","src":"3487:74:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"3477:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2801:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2812:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2824:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2832:6:17","type":""}],"src":"2725:853:17"},{"body":{"nodeType":"YulBlock","src":"3612:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3629:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3632:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3622:6:17"},"nodeType":"YulFunctionCall","src":"3622:88:17"},"nodeType":"YulExpressionStatement","src":"3622:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3726:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3729:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3719:6:17"},"nodeType":"YulFunctionCall","src":"3719:15:17"},"nodeType":"YulExpressionStatement","src":"3719:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3750:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3753:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3743:6:17"},"nodeType":"YulFunctionCall","src":"3743:15:17"},"nodeType":"YulExpressionStatement","src":"3743:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3584:180:17"},{"body":{"nodeType":"YulBlock","src":"3821:269:17","statements":[{"nodeType":"YulAssignment","src":"3831:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3845:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3851:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3841:3:17"},"nodeType":"YulFunctionCall","src":"3841:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3831:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"3862:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3892:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3898:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3888:3:17"},"nodeType":"YulFunctionCall","src":"3888:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3866:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3939:51:17","statements":[{"nodeType":"YulAssignment","src":"3953:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3967:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3975:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3963:3:17"},"nodeType":"YulFunctionCall","src":"3963:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3953:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3919:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3912:6:17"},"nodeType":"YulFunctionCall","src":"3912:26:17"},"nodeType":"YulIf","src":"3909:81:17"},{"body":{"nodeType":"YulBlock","src":"4042:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"4056:16:17"},"nodeType":"YulFunctionCall","src":"4056:18:17"},"nodeType":"YulExpressionStatement","src":"4056:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"4006:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4029:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4037:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4026:2:17"},"nodeType":"YulFunctionCall","src":"4026:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4003:2:17"},"nodeType":"YulFunctionCall","src":"4003:38:17"},"nodeType":"YulIf","src":"4000:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3805:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3814:6:17","type":""}],"src":"3770:320:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := mload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162001617380380620016178339818101604052810190620000379190620002be565b81600390805190602001906200004f92919062000071565b5080600490805190602001906200006892919062000071565b505050620003a8565b8280546200007f9062000372565b90600052602060002090601f016020900481019282620000a35760008555620000ef565b82601f10620000be57805160ff1916838001178555620000ef565b82800160010185558215620000ef579182015b82811115620000ee578251825591602001919060010190620000d1565b5b509050620000fe919062000102565b5090565b5b808211156200011d57600081600090555060010162000103565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200018a826200013f565b810181811067ffffffffffffffff82111715620001ac57620001ab62000150565b5b80604052505050565b6000620001c162000121565b9050620001cf82826200017f565b919050565b600067ffffffffffffffff821115620001f257620001f162000150565b5b620001fd826200013f565b9050602081019050919050565b60005b838110156200022a5780820151818401526020810190506200020d565b838111156200023a576000848401525b50505050565b6000620002576200025184620001d4565b620001b5565b9050828152602081018484840111156200027657620002756200013a565b5b620002838482856200020a565b509392505050565b600082601f830112620002a357620002a262000135565b5b8151620002b584826020860162000240565b91505092915050565b60008060408385031215620002d857620002d76200012b565b5b600083015167ffffffffffffffff811115620002f957620002f862000130565b5b62000307858286016200028b565b925050602083015167ffffffffffffffff8111156200032b576200032a62000130565b5b62000339858286016200028b565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200038b57607f821691505b60208210811415620003a257620003a162000343565b5b50919050565b61125f80620003b86000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b19565b60405180910390f35b6100e660048036038101906100e19190610bd4565b610308565b6040516100f39190610c2f565b60405180910390f35b61010461032b565b6040516101119190610c59565b60405180910390f35b610134600480360381019061012f9190610c74565b610335565b6040516101419190610c2f565b60405180910390f35b610152610364565b60405161015f9190610ce3565b60405180910390f35b610182600480360381019061017d9190610bd4565b61036d565b60405161018f9190610c2f565b60405180910390f35b6101b260048036038101906101ad9190610cfe565b6103a4565b6040516101bf9190610c59565b60405180910390f35b6101d06103ec565b6040516101dd9190610b19565b60405180910390f35b61020060048036038101906101fb9190610bd4565b61047e565b60405161020d9190610c2f565b60405180910390f35b610230600480360381019061022b9190610bd4565b6104f5565b60405161023d9190610c2f565b60405180910390f35b610260600480360381019061025b9190610d2b565b610518565b60405161026d9190610c59565b60405180910390f35b60606003805461028590610d9a565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d9a565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610dfb565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d9a565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d9a565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ec3565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f55565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610fe7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610c59565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190611053565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610865906110e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590611177565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690611209565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610c59565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aba578082015181840152602081019050610a9f565b83811115610ac9576000848401525b50505050565b6000601f19601f8301169050919050565b6000610aeb82610a80565b610af58185610a8b565b9350610b05818560208601610a9c565b610b0e81610acf565b840191505092915050565b60006020820190508181036000830152610b338184610ae0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6b82610b40565b9050919050565b610b7b81610b60565b8114610b8657600080fd5b50565b600081359050610b9881610b72565b92915050565b6000819050919050565b610bb181610b9e565b8114610bbc57600080fd5b50565b600081359050610bce81610ba8565b92915050565b60008060408385031215610beb57610bea610b3b565b5b6000610bf985828601610b89565b9250506020610c0a85828601610bbf565b9150509250929050565b60008115159050919050565b610c2981610c14565b82525050565b6000602082019050610c446000830184610c20565b92915050565b610c5381610b9e565b82525050565b6000602082019050610c6e6000830184610c4a565b92915050565b600080600060608486031215610c8d57610c8c610b3b565b5b6000610c9b86828701610b89565b9350506020610cac86828701610b89565b9250506040610cbd86828701610bbf565b9150509250925092565b600060ff82169050919050565b610cdd81610cc7565b82525050565b6000602082019050610cf86000830184610cd4565b92915050565b600060208284031215610d1457610d13610b3b565b5b6000610d2284828501610b89565b91505092915050565b60008060408385031215610d4257610d41610b3b565b5b6000610d5085828601610b89565b9250506020610d6185828601610b89565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610db257607f821691505b60208210811415610dc657610dc5610d6b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0682610b9e565b9150610e1183610b9e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4657610e45610dcc565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610ead602583610a8b565b9150610eb882610e51565b604082019050919050565b60006020820190508181036000830152610edc81610ea0565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f3f602483610a8b565b9150610f4a82610ee3565b604082019050919050565b60006020820190508181036000830152610f6e81610f32565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd1602283610a8b565b9150610fdc82610f75565b604082019050919050565b6000602082019050818103600083015261100081610fc4565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061103d601d83610a8b565b915061104882611007565b602082019050919050565b6000602082019050818103600083015261106c81611030565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110cf602583610a8b565b91506110da82611073565b604082019050919050565b600060208201905081810360008301526110fe816110c2565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611161602383610a8b565b915061116c82611105565b604082019050919050565b6000602082019050818103600083015261119081611154565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111f3602683610a8b565b91506111fe82611197565b604082019050919050565b60006020820190508181036000830152611222816111e6565b905091905056fea2646970667358221220b9b7d234f7ab4359952e2b9496d689a1d788ce8358d4d0d4ece25a09087f3d7464736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x1617 CODESIZE SUB DUP1 PUSH3 0x1617 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x2BE JUMP JUMPDEST DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x68 SWAP3 SWAP2 SWAP1 PUSH3 0x71 JUMP JUMPDEST POP POP POP PUSH3 0x3A8 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x7F SWAP1 PUSH3 0x372 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0xA3 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xBE JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xEF JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xEF JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xEE JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xD1 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0xFE SWAP2 SWAP1 PUSH3 0x102 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x11D JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x103 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x18A DUP3 PUSH3 0x13F JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x1AC JUMPI PUSH3 0x1AB PUSH3 0x150 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1C1 PUSH3 0x121 JUMP JUMPDEST SWAP1 POP PUSH3 0x1CF DUP3 DUP3 PUSH3 0x17F JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x1F2 JUMPI PUSH3 0x1F1 PUSH3 0x150 JUMP JUMPDEST JUMPDEST PUSH3 0x1FD DUP3 PUSH3 0x13F JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x22A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x20D JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x23A JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x257 PUSH3 0x251 DUP5 PUSH3 0x1D4 JUMP JUMPDEST PUSH3 0x1B5 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x276 JUMPI PUSH3 0x275 PUSH3 0x13A JUMP JUMPDEST JUMPDEST PUSH3 0x283 DUP5 DUP3 DUP6 PUSH3 0x20A JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x2A3 JUMPI PUSH3 0x2A2 PUSH3 0x135 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x2B5 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x240 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x2D8 JUMPI PUSH3 0x2D7 PUSH3 0x12B JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x2F9 JUMPI PUSH3 0x2F8 PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x307 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x32B JUMPI PUSH3 0x32A PUSH3 0x130 JUMP JUMPDEST JUMPDEST PUSH3 0x339 DUP6 DUP3 DUP7 ADD PUSH3 0x28B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x38B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x3A2 JUMPI PUSH3 0x3A1 PUSH3 0x343 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125F DUP1 PUSH3 0x3B8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB DUP3 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xAF5 DUP2 DUP6 PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP PUSH2 0xB05 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xB0E DUP2 PUSH2 0xACF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB33 DUP2 DUP5 PUSH2 0xAE0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP3 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7B DUP2 PUSH2 0xB60 JUMP JUMPDEST DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB98 DUP2 PUSH2 0xB72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB1 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP2 EQ PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCE DUP2 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF9 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0A DUP6 DUP3 DUP7 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC29 DUP2 PUSH2 0xC14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC53 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC8D JUMPI PUSH2 0xC8C PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC9B DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCAC DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCBD DUP7 DUP3 DUP8 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD13 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD22 DUP5 DUP3 DUP6 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH2 0xD41 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD50 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD61 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0xD6B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE06 DUP3 PUSH2 0xB9E JUMP JUMPDEST SWAP2 POP PUSH2 0xE11 DUP4 PUSH2 0xB9E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0xDCC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAD PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xEB8 DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEDC DUP2 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3F PUSH1 0x24 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A DUP3 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF6E DUP2 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD1 PUSH1 0x22 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xFDC DUP3 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1000 DUP2 PUSH2 0xFC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103D PUSH1 0x1D DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x1048 DUP3 PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x106C DUP2 PUSH2 0x1030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CF PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x10DA DUP3 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10FE DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 PUSH1 0x23 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x116C DUP3 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1190 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F3 PUSH1 0x26 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x11FE DUP3 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1222 DUP2 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xB7 0xD2 CALLVALUE 0xF7 0xAB NUMBER MSIZE SWAP6 0x2E 0x2B SWAP5 SWAP7 0xD6 DUP10 LOG1 0xD7 DUP9 0xCE DUP4 PC 0xD4 0xD0 0xD4 0xEC 0xE2 GAS MULMOD ADDMOD PUSH32 0x3D7464736F6C6343000809003300000000000000000000000000000000000000 ","sourceMap":"1401:11610:3:-:0;;;1976:113;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2050:5;2042;:13;;;;;;;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;;;;;;;:::i;:::-;;1976:113;;1401:11610;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:853::-;2824:6;2832;2881:2;2869:9;2860:7;2856:23;2852:32;2849:119;;;2887:79;;:::i;:::-;2849:119;3028:1;3017:9;3013:17;3007:24;3058:18;3050:6;3047:30;3044:117;;;3080:79;;:::i;:::-;3044:117;3185:74;3251:7;3242:6;3231:9;3227:22;3185:74;:::i;:::-;3175:84;;2978:291;3329:2;3318:9;3314:18;3308:25;3360:18;3352:6;3349:30;3346:117;;;3382:79;;:::i;:::-;3346:117;3487:74;3553:7;3544:6;3533:9;3529:22;3487:74;:::i;:::-;3477:84;;3279:292;2725:853;;;;;:::o;3584:180::-;3632:77;3629:1;3622:88;3729:4;3726:1;3719:15;3753:4;3750:1;3743:15;3770:320;3814:6;3851:1;3845:4;3841:12;3831:22;;3898:1;3892:4;3888:12;3919:18;3909:81;;3975:4;3967:6;3963:17;3953:27;;3909:81;4037:2;4029:6;4026:14;4006:18;4003:38;4000:84;;;4056:18;;:::i;:::-;4000:84;3821:269;3770:320;;;:::o;1401:11610:3:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1087":{"entryPoint":2683,"id":1087,"parameterSlots":3,"returnSlots":0},"@_approve_1022":{"entryPoint":1447,"id":1022,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1076":{"entryPoint":2678,"id":1076,"parameterSlots":3,"returnSlots":0},"@_msgSender_1203":{"entryPoint":1439,"id":1203,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1065":{"entryPoint":1906,"id":1065,"parameterSlots":3,"returnSlots":0},"@_transfer_848":{"entryPoint":2046,"id":848,"parameterSlots":3,"returnSlots":0},"@allowance_643":{"entryPoint":1304,"id":643,"parameterSlots":2,"returnSlots":1},"@approve_668":{"entryPoint":776,"id":668,"parameterSlots":2,"returnSlots":1},"@balanceOf_600":{"entryPoint":932,"id":600,"parameterSlots":1,"returnSlots":1},"@decimals_576":{"entryPoint":868,"id":576,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_771":{"entryPoint":1150,"id":771,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_730":{"entryPoint":877,"id":730,"parameterSlots":2,"returnSlots":1},"@name_556":{"entryPoint":630,"id":556,"parameterSlots":0,"returnSlots":1},"@symbol_566":{"entryPoint":1004,"id":566,"parameterSlots":0,"returnSlots":1},"@totalSupply_586":{"entryPoint":811,"id":586,"parameterSlots":0,"returnSlots":1},"@transferFrom_701":{"entryPoint":821,"id":701,"parameterSlots":3,"returnSlots":1},"@transfer_625":{"entryPoint":1269,"id":625,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":2953,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":3007,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":3326,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":3371,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":3188,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":3028,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":3104,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":2784,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":4436,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":4036,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":4144,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":4582,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":4290,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":3890,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":3744,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":3146,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":3284,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":3119,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":2841,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4471,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4071,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4179,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4617,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4325,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3925,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3779,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":3161,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":3299,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":2688,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":2699,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":3579,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":2912,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":3092,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":2880,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":2974,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":3271,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":2716,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":3482,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":3532,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":3435,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":2875,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":2767,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":4357,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":3957,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":4103,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":4503,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":4211,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":3811,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":3665,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":2930,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":2984,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:13861:17","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:17","statements":[{"nodeType":"YulAssignment","src":"77:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:17"},"nodeType":"YulFunctionCall","src":"87:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:17","type":""}],"src":"7:99:17"},{"body":{"nodeType":"YulBlock","src":"208:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:17"},"nodeType":"YulFunctionCall","src":"218:19:17"},"nodeType":"YulExpressionStatement","src":"218:19:17"},{"nodeType":"YulAssignment","src":"246:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:17"},"nodeType":"YulFunctionCall","src":"261:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:17","type":""}],"src":"112:169:17"},{"body":{"nodeType":"YulBlock","src":"336:258:17","statements":[{"nodeType":"YulVariableDeclaration","src":"346:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"355:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"350:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"415:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"440:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"436:3:17"},"nodeType":"YulFunctionCall","src":"436:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"459:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"464:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"455:3:17"},"nodeType":"YulFunctionCall","src":"455:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:17"},"nodeType":"YulFunctionCall","src":"449:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:17"},"nodeType":"YulFunctionCall","src":"429:39:17"},"nodeType":"YulExpressionStatement","src":"429:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"376:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"373:2:17"},"nodeType":"YulFunctionCall","src":"373:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"387:19:17","statements":[{"nodeType":"YulAssignment","src":"389:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"398:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:17"},"nodeType":"YulFunctionCall","src":"394:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"369:3:17","statements":[]},"src":"365:113:17"},{"body":{"nodeType":"YulBlock","src":"512:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"562:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"567:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:17"},"nodeType":"YulFunctionCall","src":"558:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"551:6:17"},"nodeType":"YulFunctionCall","src":"551:27:17"},"nodeType":"YulExpressionStatement","src":"551:27:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"493:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:17"},"nodeType":"YulFunctionCall","src":"490:13:17"},"nodeType":"YulIf","src":"487:101:17"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"318:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"323:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"328:6:17","type":""}],"src":"287:307:17"},{"body":{"nodeType":"YulBlock","src":"648:54:17","statements":[{"nodeType":"YulAssignment","src":"658:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:17"},"nodeType":"YulFunctionCall","src":"672:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"688:3:17"},"nodeType":"YulFunctionCall","src":"688:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:17"},"nodeType":"YulFunctionCall","src":"668:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"658:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"631:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"641:6:17","type":""}],"src":"600:102:17"},{"body":{"nodeType":"YulBlock","src":"800:272:17","statements":[{"nodeType":"YulVariableDeclaration","src":"810:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"857:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"824:32:17"},"nodeType":"YulFunctionCall","src":"824:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"814:6:17","type":""}]},{"nodeType":"YulAssignment","src":"872:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"938:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"943:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"879:58:17"},"nodeType":"YulFunctionCall","src":"879:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:17"},"nodeType":"YulFunctionCall","src":"981:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"999:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1004:6:17"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"959:21:17"},"nodeType":"YulFunctionCall","src":"959:52:17"},"nodeType":"YulExpressionStatement","src":"959:52:17"},{"nodeType":"YulAssignment","src":"1020:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1058:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1036:21:17"},"nodeType":"YulFunctionCall","src":"1036:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:17"},"nodeType":"YulFunctionCall","src":"1027:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1020:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"781:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"788:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"796:3:17","type":""}],"src":"708:364:17"},{"body":{"nodeType":"YulBlock","src":"1196:195:17","statements":[{"nodeType":"YulAssignment","src":"1206:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1218:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1229:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:17"},"nodeType":"YulFunctionCall","src":"1214:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1206:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1264:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:17"},"nodeType":"YulFunctionCall","src":"1249:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1272:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1268:3:17"},"nodeType":"YulFunctionCall","src":"1268:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:17"},"nodeType":"YulFunctionCall","src":"1242:47:17"},"nodeType":"YulExpressionStatement","src":"1242:47:17"},{"nodeType":"YulAssignment","src":"1298:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1306:63:17"},"nodeType":"YulFunctionCall","src":"1306:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1298:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1180:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1191:4:17","type":""}],"src":"1078:313:17"},{"body":{"nodeType":"YulBlock","src":"1437:35:17","statements":[{"nodeType":"YulAssignment","src":"1447:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1463:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:17"},"nodeType":"YulFunctionCall","src":"1457:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1430:6:17","type":""}],"src":"1397:75:17"},{"body":{"nodeType":"YulBlock","src":"1567:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1584:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1587:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1577:6:17"},"nodeType":"YulFunctionCall","src":"1577:12:17"},"nodeType":"YulExpressionStatement","src":"1577:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1478:117:17"},{"body":{"nodeType":"YulBlock","src":"1690:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:17"},"nodeType":"YulFunctionCall","src":"1700:12:17"},"nodeType":"YulExpressionStatement","src":"1700:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1601:117:17"},{"body":{"nodeType":"YulBlock","src":"1769:81:17","statements":[{"nodeType":"YulAssignment","src":"1779:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1794:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1801:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1790:3:17"},"nodeType":"YulFunctionCall","src":"1790:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1779:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1761:7:17","type":""}],"src":"1724:126:17"},{"body":{"nodeType":"YulBlock","src":"1901:51:17","statements":[{"nodeType":"YulAssignment","src":"1911:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1940:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1922:17:17"},"nodeType":"YulFunctionCall","src":"1922:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1911:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1893:7:17","type":""}],"src":"1856:96:17"},{"body":{"nodeType":"YulBlock","src":"2001:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2058:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2067:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2070:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2060:6:17"},"nodeType":"YulFunctionCall","src":"2060:12:17"},"nodeType":"YulExpressionStatement","src":"2060:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2024:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2031:17:17"},"nodeType":"YulFunctionCall","src":"2031:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2021:2:17"},"nodeType":"YulFunctionCall","src":"2021:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2014:6:17"},"nodeType":"YulFunctionCall","src":"2014:43:17"},"nodeType":"YulIf","src":"2011:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1994:5:17","type":""}],"src":"1958:122:17"},{"body":{"nodeType":"YulBlock","src":"2138:87:17","statements":[{"nodeType":"YulAssignment","src":"2148:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2170:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2157:12:17"},"nodeType":"YulFunctionCall","src":"2157:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2148:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2186:26:17"},"nodeType":"YulFunctionCall","src":"2186:33:17"},"nodeType":"YulExpressionStatement","src":"2186:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2116:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2124:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2132:5:17","type":""}],"src":"2086:139:17"},{"body":{"nodeType":"YulBlock","src":"2276:32:17","statements":[{"nodeType":"YulAssignment","src":"2286:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2297:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2286:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2268:7:17","type":""}],"src":"2231:77:17"},{"body":{"nodeType":"YulBlock","src":"2357:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2414:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2426:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2416:6:17"},"nodeType":"YulFunctionCall","src":"2416:12:17"},"nodeType":"YulExpressionStatement","src":"2416:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2387:17:17"},"nodeType":"YulFunctionCall","src":"2387:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2377:2:17"},"nodeType":"YulFunctionCall","src":"2377:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2370:6:17"},"nodeType":"YulFunctionCall","src":"2370:43:17"},"nodeType":"YulIf","src":"2367:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2350:5:17","type":""}],"src":"2314:122:17"},{"body":{"nodeType":"YulBlock","src":"2494:87:17","statements":[{"nodeType":"YulAssignment","src":"2504:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2526:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2513:12:17"},"nodeType":"YulFunctionCall","src":"2513:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2504:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2569:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2542:26:17"},"nodeType":"YulFunctionCall","src":"2542:33:17"},"nodeType":"YulExpressionStatement","src":"2542:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2472:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2480:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2488:5:17","type":""}],"src":"2442:139:17"},{"body":{"nodeType":"YulBlock","src":"2670:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"2716:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2718:77:17"},"nodeType":"YulFunctionCall","src":"2718:79:17"},"nodeType":"YulExpressionStatement","src":"2718:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2691:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2687:3:17"},"nodeType":"YulFunctionCall","src":"2687:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2712:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2683:3:17"},"nodeType":"YulFunctionCall","src":"2683:32:17"},"nodeType":"YulIf","src":"2680:119:17"},{"nodeType":"YulBlock","src":"2809:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2824:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2838:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2828:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:17"},"nodeType":"YulFunctionCall","src":"2884:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2863:20:17"},"nodeType":"YulFunctionCall","src":"2863:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:17"}]}]},{"nodeType":"YulBlock","src":"2936:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2951:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2965:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2955:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2981:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3016:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3027:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3012:3:17"},"nodeType":"YulFunctionCall","src":"3012:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3036:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2991:20:17"},"nodeType":"YulFunctionCall","src":"2991:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2981:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2632:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2643:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2655:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2663:6:17","type":""}],"src":"2587:474:17"},{"body":{"nodeType":"YulBlock","src":"3109:48:17","statements":[{"nodeType":"YulAssignment","src":"3119:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3144:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3137:6:17"},"nodeType":"YulFunctionCall","src":"3137:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:17"},"nodeType":"YulFunctionCall","src":"3130:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3119:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3101:7:17","type":""}],"src":"3067:90:17"},{"body":{"nodeType":"YulBlock","src":"3222:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3239:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3259:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3244:14:17"},"nodeType":"YulFunctionCall","src":"3244:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3232:6:17"},"nodeType":"YulFunctionCall","src":"3232:34:17"},"nodeType":"YulExpressionStatement","src":"3232:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3210:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3217:3:17","type":""}],"src":"3163:109:17"},{"body":{"nodeType":"YulBlock","src":"3370:118:17","statements":[{"nodeType":"YulAssignment","src":"3380:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:17"},"nodeType":"YulFunctionCall","src":"3388:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3380:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3454:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3478:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:17"},"nodeType":"YulFunctionCall","src":"3463:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3416:37:17"},"nodeType":"YulFunctionCall","src":"3416:65:17"},"nodeType":"YulExpressionStatement","src":"3416:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3342:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3354:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3365:4:17","type":""}],"src":"3278:210:17"},{"body":{"nodeType":"YulBlock","src":"3559:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3576:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3599:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3581:17:17"},"nodeType":"YulFunctionCall","src":"3581:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3569:6:17"},"nodeType":"YulFunctionCall","src":"3569:37:17"},"nodeType":"YulExpressionStatement","src":"3569:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3547:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3554:3:17","type":""}],"src":"3494:118:17"},{"body":{"nodeType":"YulBlock","src":"3716:124:17","statements":[{"nodeType":"YulAssignment","src":"3726:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3738:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3734:3:17"},"nodeType":"YulFunctionCall","src":"3734:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3726:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3806:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3819:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:17"},"nodeType":"YulFunctionCall","src":"3815:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3762:43:17"},"nodeType":"YulFunctionCall","src":"3762:71:17"},"nodeType":"YulExpressionStatement","src":"3762:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3688:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3700:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3711:4:17","type":""}],"src":"3618:222:17"},{"body":{"nodeType":"YulBlock","src":"3946:519:17","statements":[{"body":{"nodeType":"YulBlock","src":"3992:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3994:77:17"},"nodeType":"YulFunctionCall","src":"3994:79:17"},"nodeType":"YulExpressionStatement","src":"3994:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3967:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3963:3:17"},"nodeType":"YulFunctionCall","src":"3963:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3988:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3959:3:17"},"nodeType":"YulFunctionCall","src":"3959:32:17"},"nodeType":"YulIf","src":"3956:119:17"},{"nodeType":"YulBlock","src":"4085:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4100:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4114:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4104:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4129:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4175:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:17"},"nodeType":"YulFunctionCall","src":"4160:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4184:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4139:20:17"},"nodeType":"YulFunctionCall","src":"4139:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4129:6:17"}]}]},{"nodeType":"YulBlock","src":"4212:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4227:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4241:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4231:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4257:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4303:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:17"},"nodeType":"YulFunctionCall","src":"4288:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4312:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4267:20:17"},"nodeType":"YulFunctionCall","src":"4267:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4257:6:17"}]}]},{"nodeType":"YulBlock","src":"4340:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4355:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4369:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4359:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4385:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4420:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4431:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:17"},"nodeType":"YulFunctionCall","src":"4416:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4440:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4395:20:17"},"nodeType":"YulFunctionCall","src":"4395:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4385:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3911:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3923:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3931:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3939:6:17","type":""}],"src":"3846:619:17"},{"body":{"nodeType":"YulBlock","src":"4514:43:17","statements":[{"nodeType":"YulAssignment","src":"4524:27:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4539:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4546:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4535:3:17"},"nodeType":"YulFunctionCall","src":"4535:16:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4524:7:17"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4496:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4506:7:17","type":""}],"src":"4471:86:17"},{"body":{"nodeType":"YulBlock","src":"4624:51:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4641:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:17"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4646:15:17"},"nodeType":"YulFunctionCall","src":"4646:22:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4634:6:17"},"nodeType":"YulFunctionCall","src":"4634:35:17"},"nodeType":"YulExpressionStatement","src":"4634:35:17"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4612:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4619:3:17","type":""}],"src":"4563:112:17"},{"body":{"nodeType":"YulBlock","src":"4775:120:17","statements":[{"nodeType":"YulAssignment","src":"4785:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4808:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:17"},"nodeType":"YulFunctionCall","src":"4793:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4861:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4885:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:17"},"nodeType":"YulFunctionCall","src":"4870:17:17"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4821:39:17"},"nodeType":"YulFunctionCall","src":"4821:67:17"},"nodeType":"YulExpressionStatement","src":"4821:67:17"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4747:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4759:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4770:4:17","type":""}],"src":"4681:214:17"},{"body":{"nodeType":"YulBlock","src":"4967:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"5013:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5015:77:17"},"nodeType":"YulFunctionCall","src":"5015:79:17"},"nodeType":"YulExpressionStatement","src":"5015:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4988:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4997:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4984:3:17"},"nodeType":"YulFunctionCall","src":"4984:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5009:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4980:3:17"},"nodeType":"YulFunctionCall","src":"4980:32:17"},"nodeType":"YulIf","src":"4977:119:17"},{"nodeType":"YulBlock","src":"5106:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5121:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5135:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5125:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5150:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5185:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5196:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5181:3:17"},"nodeType":"YulFunctionCall","src":"5181:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5205:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5160:20:17"},"nodeType":"YulFunctionCall","src":"5160:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5150:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4937:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4948:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4960:6:17","type":""}],"src":"4901:329:17"},{"body":{"nodeType":"YulBlock","src":"5319:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"5365:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5367:77:17"},"nodeType":"YulFunctionCall","src":"5367:79:17"},"nodeType":"YulExpressionStatement","src":"5367:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5340:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5349:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5336:3:17"},"nodeType":"YulFunctionCall","src":"5336:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5361:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5332:3:17"},"nodeType":"YulFunctionCall","src":"5332:32:17"},"nodeType":"YulIf","src":"5329:119:17"},{"nodeType":"YulBlock","src":"5458:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5473:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5487:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5477:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5502:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5537:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5548:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5533:3:17"},"nodeType":"YulFunctionCall","src":"5533:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5557:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5512:20:17"},"nodeType":"YulFunctionCall","src":"5512:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5502:6:17"}]}]},{"nodeType":"YulBlock","src":"5585:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5600:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5614:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5604:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5630:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5665:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5676:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5661:3:17"},"nodeType":"YulFunctionCall","src":"5661:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5685:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5640:20:17"},"nodeType":"YulFunctionCall","src":"5640:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5630:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5281:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5292:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5304:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5312:6:17","type":""}],"src":"5236:474:17"},{"body":{"nodeType":"YulBlock","src":"5744:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5761:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5764:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5754:6:17"},"nodeType":"YulFunctionCall","src":"5754:88:17"},"nodeType":"YulExpressionStatement","src":"5754:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5858:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"5861:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5851:6:17"},"nodeType":"YulFunctionCall","src":"5851:15:17"},"nodeType":"YulExpressionStatement","src":"5851:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"5882:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"5885:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"5875:6:17"},"nodeType":"YulFunctionCall","src":"5875:15:17"},"nodeType":"YulExpressionStatement","src":"5875:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"5716:180:17"},{"body":{"nodeType":"YulBlock","src":"5953:269:17","statements":[{"nodeType":"YulAssignment","src":"5963:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"5977:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"5983:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"5973:3:17"},"nodeType":"YulFunctionCall","src":"5973:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"5963:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"5994:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6024:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"6030:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6020:3:17"},"nodeType":"YulFunctionCall","src":"6020:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"5998:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6071:51:17","statements":[{"nodeType":"YulAssignment","src":"6085:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6099:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6107:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6095:3:17"},"nodeType":"YulFunctionCall","src":"6095:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6085:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6051:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6044:6:17"},"nodeType":"YulFunctionCall","src":"6044:26:17"},"nodeType":"YulIf","src":"6041:81:17"},{"body":{"nodeType":"YulBlock","src":"6174:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6188:16:17"},"nodeType":"YulFunctionCall","src":"6188:18:17"},"nodeType":"YulExpressionStatement","src":"6188:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6138:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6161:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6169:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6158:2:17"},"nodeType":"YulFunctionCall","src":"6158:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6135:2:17"},"nodeType":"YulFunctionCall","src":"6135:38:17"},"nodeType":"YulIf","src":"6132:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"5937:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"5946:6:17","type":""}],"src":"5902:320:17"},{"body":{"nodeType":"YulBlock","src":"6256:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6273:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6276:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6266:6:17"},"nodeType":"YulFunctionCall","src":"6266:88:17"},"nodeType":"YulExpressionStatement","src":"6266:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6370:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6373:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6363:6:17"},"nodeType":"YulFunctionCall","src":"6363:15:17"},"nodeType":"YulExpressionStatement","src":"6363:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6394:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6397:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6387:6:17"},"nodeType":"YulFunctionCall","src":"6387:15:17"},"nodeType":"YulExpressionStatement","src":"6387:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6228:180:17"},{"body":{"nodeType":"YulBlock","src":"6458:261:17","statements":[{"nodeType":"YulAssignment","src":"6468:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6491:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6473:17:17"},"nodeType":"YulFunctionCall","src":"6473:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6468:1:17"}]},{"nodeType":"YulAssignment","src":"6502:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6525:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6507:17:17"},"nodeType":"YulFunctionCall","src":"6507:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6502:1:17"}]},{"body":{"nodeType":"YulBlock","src":"6665:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"6667:16:17"},"nodeType":"YulFunctionCall","src":"6667:18:17"},"nodeType":"YulExpressionStatement","src":"6667:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6586:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6593:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"6661:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6589:3:17"},"nodeType":"YulFunctionCall","src":"6589:74:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6583:2:17"},"nodeType":"YulFunctionCall","src":"6583:81:17"},"nodeType":"YulIf","src":"6580:107:17"},{"nodeType":"YulAssignment","src":"6697:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6708:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"6711:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6704:3:17"},"nodeType":"YulFunctionCall","src":"6704:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"6697:3:17"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6445:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"6448:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6454:3:17","type":""}],"src":"6414:305:17"},{"body":{"nodeType":"YulBlock","src":"6831:118:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6853:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6861:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6849:3:17"},"nodeType":"YulFunctionCall","src":"6849:14:17"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"6865:34:17","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6842:6:17"},"nodeType":"YulFunctionCall","src":"6842:58:17"},"nodeType":"YulExpressionStatement","src":"6842:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"6921:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6929:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6917:3:17"},"nodeType":"YulFunctionCall","src":"6917:15:17"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"6934:7:17","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6910:6:17"},"nodeType":"YulFunctionCall","src":"6910:32:17"},"nodeType":"YulExpressionStatement","src":"6910:32:17"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"6823:6:17","type":""}],"src":"6725:224:17"},{"body":{"nodeType":"YulBlock","src":"7101:220:17","statements":[{"nodeType":"YulAssignment","src":"7111:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7177:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"7182:2:17","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7118:58:17"},"nodeType":"YulFunctionCall","src":"7118:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7111:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7283:3:17"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7194:88:17"},"nodeType":"YulFunctionCall","src":"7194:93:17"},"nodeType":"YulExpressionStatement","src":"7194:93:17"},{"nodeType":"YulAssignment","src":"7296:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7307:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"7312:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7303:3:17"},"nodeType":"YulFunctionCall","src":"7303:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7296:3:17"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7089:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7097:3:17","type":""}],"src":"6955:366:17"},{"body":{"nodeType":"YulBlock","src":"7498:248:17","statements":[{"nodeType":"YulAssignment","src":"7508:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7520:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7531:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7516:3:17"},"nodeType":"YulFunctionCall","src":"7516:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7508:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7555:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7566:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7551:3:17"},"nodeType":"YulFunctionCall","src":"7551:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7574:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7580:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7570:3:17"},"nodeType":"YulFunctionCall","src":"7570:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7544:6:17"},"nodeType":"YulFunctionCall","src":"7544:47:17"},"nodeType":"YulExpressionStatement","src":"7544:47:17"},{"nodeType":"YulAssignment","src":"7600:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7734:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7608:124:17"},"nodeType":"YulFunctionCall","src":"7608:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7600:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7478:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7493:4:17","type":""}],"src":"7327:419:17"},{"body":{"nodeType":"YulBlock","src":"7858:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7880:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7888:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7876:3:17"},"nodeType":"YulFunctionCall","src":"7876:14:17"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"7892:34:17","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7869:6:17"},"nodeType":"YulFunctionCall","src":"7869:58:17"},"nodeType":"YulExpressionStatement","src":"7869:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7948:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7956:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7944:3:17"},"nodeType":"YulFunctionCall","src":"7944:15:17"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"7961:6:17","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7937:6:17"},"nodeType":"YulFunctionCall","src":"7937:31:17"},"nodeType":"YulExpressionStatement","src":"7937:31:17"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7850:6:17","type":""}],"src":"7752:223:17"},{"body":{"nodeType":"YulBlock","src":"8127:220:17","statements":[{"nodeType":"YulAssignment","src":"8137:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8203:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8208:2:17","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8144:58:17"},"nodeType":"YulFunctionCall","src":"8144:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8137:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8309:3:17"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"8220:88:17"},"nodeType":"YulFunctionCall","src":"8220:93:17"},"nodeType":"YulExpressionStatement","src":"8220:93:17"},{"nodeType":"YulAssignment","src":"8322:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8333:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8338:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8329:3:17"},"nodeType":"YulFunctionCall","src":"8329:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8322:3:17"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8115:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8123:3:17","type":""}],"src":"7981:366:17"},{"body":{"nodeType":"YulBlock","src":"8524:248:17","statements":[{"nodeType":"YulAssignment","src":"8534:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8546:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8557:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8542:3:17"},"nodeType":"YulFunctionCall","src":"8542:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8534:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8581:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8592:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8577:3:17"},"nodeType":"YulFunctionCall","src":"8577:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8600:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8606:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8596:3:17"},"nodeType":"YulFunctionCall","src":"8596:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8570:6:17"},"nodeType":"YulFunctionCall","src":"8570:47:17"},"nodeType":"YulExpressionStatement","src":"8570:47:17"},{"nodeType":"YulAssignment","src":"8626:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8760:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8634:124:17"},"nodeType":"YulFunctionCall","src":"8634:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8626:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8504:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8519:4:17","type":""}],"src":"8353:419:17"},{"body":{"nodeType":"YulBlock","src":"8884:115:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8906:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8914:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8902:3:17"},"nodeType":"YulFunctionCall","src":"8902:14:17"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"8918:34:17","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8895:6:17"},"nodeType":"YulFunctionCall","src":"8895:58:17"},"nodeType":"YulExpressionStatement","src":"8895:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8974:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8982:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8970:3:17"},"nodeType":"YulFunctionCall","src":"8970:15:17"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"8987:4:17","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8963:6:17"},"nodeType":"YulFunctionCall","src":"8963:29:17"},"nodeType":"YulExpressionStatement","src":"8963:29:17"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8876:6:17","type":""}],"src":"8778:221:17"},{"body":{"nodeType":"YulBlock","src":"9151:220:17","statements":[{"nodeType":"YulAssignment","src":"9161:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9227:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9232:2:17","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9168:58:17"},"nodeType":"YulFunctionCall","src":"9168:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9161:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9333:3:17"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"9244:88:17"},"nodeType":"YulFunctionCall","src":"9244:93:17"},"nodeType":"YulExpressionStatement","src":"9244:93:17"},{"nodeType":"YulAssignment","src":"9346:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9357:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9362:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9353:3:17"},"nodeType":"YulFunctionCall","src":"9353:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9346:3:17"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9139:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9147:3:17","type":""}],"src":"9005:366:17"},{"body":{"nodeType":"YulBlock","src":"9548:248:17","statements":[{"nodeType":"YulAssignment","src":"9558:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9570:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9581:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9566:3:17"},"nodeType":"YulFunctionCall","src":"9566:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9558:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9605:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9616:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9601:3:17"},"nodeType":"YulFunctionCall","src":"9601:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9624:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9630:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9620:3:17"},"nodeType":"YulFunctionCall","src":"9620:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9594:6:17"},"nodeType":"YulFunctionCall","src":"9594:47:17"},"nodeType":"YulExpressionStatement","src":"9594:47:17"},{"nodeType":"YulAssignment","src":"9650:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9784:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9658:124:17"},"nodeType":"YulFunctionCall","src":"9658:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9650:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9528:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9543:4:17","type":""}],"src":"9377:419:17"},{"body":{"nodeType":"YulBlock","src":"9908:73:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9930:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9938:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9926:3:17"},"nodeType":"YulFunctionCall","src":"9926:14:17"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"9942:31:17","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9919:6:17"},"nodeType":"YulFunctionCall","src":"9919:55:17"},"nodeType":"YulExpressionStatement","src":"9919:55:17"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9900:6:17","type":""}],"src":"9802:179:17"},{"body":{"nodeType":"YulBlock","src":"10133:220:17","statements":[{"nodeType":"YulAssignment","src":"10143:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10209:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10214:2:17","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10150:58:17"},"nodeType":"YulFunctionCall","src":"10150:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10143:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10315:3:17"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"10226:88:17"},"nodeType":"YulFunctionCall","src":"10226:93:17"},"nodeType":"YulExpressionStatement","src":"10226:93:17"},{"nodeType":"YulAssignment","src":"10328:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10339:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10344:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10335:3:17"},"nodeType":"YulFunctionCall","src":"10335:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10328:3:17"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10121:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10129:3:17","type":""}],"src":"9987:366:17"},{"body":{"nodeType":"YulBlock","src":"10530:248:17","statements":[{"nodeType":"YulAssignment","src":"10540:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10552:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10563:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10548:3:17"},"nodeType":"YulFunctionCall","src":"10548:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10540:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10587:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10598:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10583:3:17"},"nodeType":"YulFunctionCall","src":"10583:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10606:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"10612:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10602:3:17"},"nodeType":"YulFunctionCall","src":"10602:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10576:6:17"},"nodeType":"YulFunctionCall","src":"10576:47:17"},"nodeType":"YulExpressionStatement","src":"10576:47:17"},{"nodeType":"YulAssignment","src":"10632:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10766:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10640:124:17"},"nodeType":"YulFunctionCall","src":"10640:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10632:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10510:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10525:4:17","type":""}],"src":"10359:419:17"},{"body":{"nodeType":"YulBlock","src":"10890:118:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10912:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10920:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10908:3:17"},"nodeType":"YulFunctionCall","src":"10908:14:17"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"10924:34:17","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10901:6:17"},"nodeType":"YulFunctionCall","src":"10901:58:17"},"nodeType":"YulExpressionStatement","src":"10901:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10980:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10988:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10976:3:17"},"nodeType":"YulFunctionCall","src":"10976:15:17"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"10993:7:17","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10969:6:17"},"nodeType":"YulFunctionCall","src":"10969:32:17"},"nodeType":"YulExpressionStatement","src":"10969:32:17"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10882:6:17","type":""}],"src":"10784:224:17"},{"body":{"nodeType":"YulBlock","src":"11160:220:17","statements":[{"nodeType":"YulAssignment","src":"11170:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11236:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11241:2:17","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11177:58:17"},"nodeType":"YulFunctionCall","src":"11177:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11170:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11342:3:17"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"11253:88:17"},"nodeType":"YulFunctionCall","src":"11253:93:17"},"nodeType":"YulExpressionStatement","src":"11253:93:17"},{"nodeType":"YulAssignment","src":"11355:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11366:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11371:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11362:3:17"},"nodeType":"YulFunctionCall","src":"11362:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11355:3:17"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11148:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11156:3:17","type":""}],"src":"11014:366:17"},{"body":{"nodeType":"YulBlock","src":"11557:248:17","statements":[{"nodeType":"YulAssignment","src":"11567:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11579:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11590:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11575:3:17"},"nodeType":"YulFunctionCall","src":"11575:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11567:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11614:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11625:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11610:3:17"},"nodeType":"YulFunctionCall","src":"11610:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11633:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11639:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11629:3:17"},"nodeType":"YulFunctionCall","src":"11629:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11603:6:17"},"nodeType":"YulFunctionCall","src":"11603:47:17"},"nodeType":"YulExpressionStatement","src":"11603:47:17"},{"nodeType":"YulAssignment","src":"11659:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11793:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11667:124:17"},"nodeType":"YulFunctionCall","src":"11667:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11659:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11537:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11552:4:17","type":""}],"src":"11386:419:17"},{"body":{"nodeType":"YulBlock","src":"11917:116:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11939:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11947:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11935:3:17"},"nodeType":"YulFunctionCall","src":"11935:14:17"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"11951:34:17","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11928:6:17"},"nodeType":"YulFunctionCall","src":"11928:58:17"},"nodeType":"YulExpressionStatement","src":"11928:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12007:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12015:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12003:3:17"},"nodeType":"YulFunctionCall","src":"12003:15:17"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"12020:5:17","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11996:6:17"},"nodeType":"YulFunctionCall","src":"11996:30:17"},"nodeType":"YulExpressionStatement","src":"11996:30:17"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11909:6:17","type":""}],"src":"11811:222:17"},{"body":{"nodeType":"YulBlock","src":"12185:220:17","statements":[{"nodeType":"YulAssignment","src":"12195:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12261:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12266:2:17","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12202:58:17"},"nodeType":"YulFunctionCall","src":"12202:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12195:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12367:3:17"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"12278:88:17"},"nodeType":"YulFunctionCall","src":"12278:93:17"},"nodeType":"YulExpressionStatement","src":"12278:93:17"},{"nodeType":"YulAssignment","src":"12380:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12391:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12396:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12387:3:17"},"nodeType":"YulFunctionCall","src":"12387:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12380:3:17"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12173:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12181:3:17","type":""}],"src":"12039:366:17"},{"body":{"nodeType":"YulBlock","src":"12582:248:17","statements":[{"nodeType":"YulAssignment","src":"12592:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12604:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12615:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12600:3:17"},"nodeType":"YulFunctionCall","src":"12600:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12592:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12639:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12650:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12635:3:17"},"nodeType":"YulFunctionCall","src":"12635:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12658:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"12664:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12654:3:17"},"nodeType":"YulFunctionCall","src":"12654:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12628:6:17"},"nodeType":"YulFunctionCall","src":"12628:47:17"},"nodeType":"YulExpressionStatement","src":"12628:47:17"},{"nodeType":"YulAssignment","src":"12684:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12818:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12692:124:17"},"nodeType":"YulFunctionCall","src":"12692:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12684:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12562:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12577:4:17","type":""}],"src":"12411:419:17"},{"body":{"nodeType":"YulBlock","src":"12942:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12964:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12972:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12960:3:17"},"nodeType":"YulFunctionCall","src":"12960:14:17"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"12976:34:17","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12953:6:17"},"nodeType":"YulFunctionCall","src":"12953:58:17"},"nodeType":"YulExpressionStatement","src":"12953:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13032:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13040:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13028:3:17"},"nodeType":"YulFunctionCall","src":"13028:15:17"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"13045:8:17","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13021:6:17"},"nodeType":"YulFunctionCall","src":"13021:33:17"},"nodeType":"YulExpressionStatement","src":"13021:33:17"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12934:6:17","type":""}],"src":"12836:225:17"},{"body":{"nodeType":"YulBlock","src":"13213:220:17","statements":[{"nodeType":"YulAssignment","src":"13223:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13289:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13294:2:17","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13230:58:17"},"nodeType":"YulFunctionCall","src":"13230:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13223:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13395:3:17"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"13306:88:17"},"nodeType":"YulFunctionCall","src":"13306:93:17"},"nodeType":"YulExpressionStatement","src":"13306:93:17"},{"nodeType":"YulAssignment","src":"13408:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13419:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13424:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13415:3:17"},"nodeType":"YulFunctionCall","src":"13415:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13408:3:17"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13201:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13209:3:17","type":""}],"src":"13067:366:17"},{"body":{"nodeType":"YulBlock","src":"13610:248:17","statements":[{"nodeType":"YulAssignment","src":"13620:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13632:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13643:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13628:3:17"},"nodeType":"YulFunctionCall","src":"13628:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13620:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13667:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13678:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13663:3:17"},"nodeType":"YulFunctionCall","src":"13663:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13686:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"13692:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13682:3:17"},"nodeType":"YulFunctionCall","src":"13682:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13656:6:17"},"nodeType":"YulFunctionCall","src":"13656:47:17"},"nodeType":"YulExpressionStatement","src":"13656:47:17"},{"nodeType":"YulAssignment","src":"13712:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13846:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13720:124:17"},"nodeType":"YulFunctionCall","src":"13720:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13712:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13590:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13605:4:17","type":""}],"src":"13439:419:17"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461016857806370a082311461019857806395d89b41146101c8578063a457c2d7146101e6578063a9059cbb14610216578063dd62ed3e14610246576100a9565b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100fc57806323b872dd1461011a578063313ce5671461014a575b600080fd5b6100b6610276565b6040516100c39190610b19565b60405180910390f35b6100e660048036038101906100e19190610bd4565b610308565b6040516100f39190610c2f565b60405180910390f35b61010461032b565b6040516101119190610c59565b60405180910390f35b610134600480360381019061012f9190610c74565b610335565b6040516101419190610c2f565b60405180910390f35b610152610364565b60405161015f9190610ce3565b60405180910390f35b610182600480360381019061017d9190610bd4565b61036d565b60405161018f9190610c2f565b60405180910390f35b6101b260048036038101906101ad9190610cfe565b6103a4565b6040516101bf9190610c59565b60405180910390f35b6101d06103ec565b6040516101dd9190610b19565b60405180910390f35b61020060048036038101906101fb9190610bd4565b61047e565b60405161020d9190610c2f565b60405180910390f35b610230600480360381019061022b9190610bd4565b6104f5565b60405161023d9190610c2f565b60405180910390f35b610260600480360381019061025b9190610d2b565b610518565b60405161026d9190610c59565b60405180910390f35b60606003805461028590610d9a565b80601f01602080910402602001604051908101604052809291908181526020018280546102b190610d9a565b80156102fe5780601f106102d3576101008083540402835291602001916102fe565b820191906000526020600020905b8154815290600101906020018083116102e157829003601f168201915b5050505050905090565b60008061031361059f565b90506103208185856105a7565b600191505092915050565b6000600254905090565b60008061034061059f565b905061034d858285610772565b6103588585856107fe565b60019150509392505050565b60006012905090565b60008061037861059f565b905061039981858561038a8589610518565b6103949190610dfb565b6105a7565b600191505092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6060600480546103fb90610d9a565b80601f016020809104026020016040519081016040528092919081815260200182805461042790610d9a565b80156104745780601f1061044957610100808354040283529160200191610474565b820191906000526020600020905b81548152906001019060200180831161045757829003601f168201915b5050505050905090565b60008061048961059f565b905060006104978286610518565b9050838110156104dc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104d390610ec3565b60405180910390fd5b6104e982868684036105a7565b60019250505092915050565b60008061050061059f565b905061050d8185856107fe565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610617576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161060e90610f55565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610687576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161067e90610fe7565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516107659190610c59565b60405180910390a3505050565b600061077e8484610518565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146107f857818110156107ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107e190611053565b60405180910390fd5b6107f784848484036105a7565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16141561086e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610865906110e5565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614156108de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108d590611177565b60405180910390fd5b6108e9838383610a76565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508181101561096f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161096690611209565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610a5d9190610c59565b60405180910390a3610a70848484610a7b565b50505050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610aba578082015181840152602081019050610a9f565b83811115610ac9576000848401525b50505050565b6000601f19601f8301169050919050565b6000610aeb82610a80565b610af58185610a8b565b9350610b05818560208601610a9c565b610b0e81610acf565b840191505092915050565b60006020820190508181036000830152610b338184610ae0565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b6b82610b40565b9050919050565b610b7b81610b60565b8114610b8657600080fd5b50565b600081359050610b9881610b72565b92915050565b6000819050919050565b610bb181610b9e565b8114610bbc57600080fd5b50565b600081359050610bce81610ba8565b92915050565b60008060408385031215610beb57610bea610b3b565b5b6000610bf985828601610b89565b9250506020610c0a85828601610bbf565b9150509250929050565b60008115159050919050565b610c2981610c14565b82525050565b6000602082019050610c446000830184610c20565b92915050565b610c5381610b9e565b82525050565b6000602082019050610c6e6000830184610c4a565b92915050565b600080600060608486031215610c8d57610c8c610b3b565b5b6000610c9b86828701610b89565b9350506020610cac86828701610b89565b9250506040610cbd86828701610bbf565b9150509250925092565b600060ff82169050919050565b610cdd81610cc7565b82525050565b6000602082019050610cf86000830184610cd4565b92915050565b600060208284031215610d1457610d13610b3b565b5b6000610d2284828501610b89565b91505092915050565b60008060408385031215610d4257610d41610b3b565b5b6000610d5085828601610b89565b9250506020610d6185828601610b89565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680610db257607f821691505b60208210811415610dc657610dc5610d6b565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610e0682610b9e565b9150610e1183610b9e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610e4657610e45610dcc565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b6000610ead602583610a8b565b9150610eb882610e51565b604082019050919050565b60006020820190508181036000830152610edc81610ea0565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000610f3f602483610a8b565b9150610f4a82610ee3565b604082019050919050565b60006020820190508181036000830152610f6e81610f32565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b6000610fd1602283610a8b565b9150610fdc82610f75565b604082019050919050565b6000602082019050818103600083015261100081610fc4565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b600061103d601d83610a8b565b915061104882611007565b602082019050919050565b6000602082019050818103600083015261106c81611030565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006110cf602583610a8b565b91506110da82611073565b604082019050919050565b600060208201905081810360008301526110fe816110c2565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611161602383610a8b565b915061116c82611105565b604082019050919050565b6000602082019050818103600083015261119081611154565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006111f3602683610a8b565b91506111fe82611197565b604082019050919050565b60006020820190508181036000830152611222816111e6565b905091905056fea2646970667358221220b9b7d234f7ab4359952e2b9496d689a1d788ce8358d4d0d4ece25a09087f3d7464736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x168 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x198 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x216 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x246 JUMPI PUSH2 0xA9 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xFC JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x11A JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x14A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x276 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE6 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE1 SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF3 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x104 PUSH2 0x32B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x111 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x134 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12F SWAP2 SWAP1 PUSH2 0xC74 JUMP JUMPDEST PUSH2 0x335 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x141 SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x152 PUSH2 0x364 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15F SWAP2 SWAP1 PUSH2 0xCE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x182 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17D SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x36D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18F SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1B2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AD SWAP2 SWAP1 PUSH2 0xCFE JUMP JUMPDEST PUSH2 0x3A4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1BF SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1D0 PUSH2 0x3EC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DD SWAP2 SWAP1 PUSH2 0xB19 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x200 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1FB SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x47E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x20D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x230 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x22B SWAP2 SWAP1 PUSH2 0xBD4 JUMP JUMPDEST PUSH2 0x4F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x23D SWAP2 SWAP1 PUSH2 0xC2F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25B SWAP2 SWAP1 PUSH2 0xD2B JUMP JUMPDEST PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x285 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x2B1 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2FE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2D3 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2FE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2E1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x313 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x320 DUP2 DUP6 DUP6 PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x340 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x34D DUP6 DUP3 DUP6 PUSH2 0x772 JUMP JUMPDEST PUSH2 0x358 DUP6 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x378 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x399 DUP2 DUP6 DUP6 PUSH2 0x38A DUP6 DUP10 PUSH2 0x518 JUMP JUMPDEST PUSH2 0x394 SWAP2 SWAP1 PUSH2 0xDFB JUMP JUMPDEST PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x3FB SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x427 SWAP1 PUSH2 0xD9A JUMP JUMPDEST DUP1 ISZERO PUSH2 0x474 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x449 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x474 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x457 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x489 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x497 DUP3 DUP7 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x4DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4D3 SWAP1 PUSH2 0xEC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x4E9 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x500 PUSH2 0x59F JUMP JUMPDEST SWAP1 POP PUSH2 0x50D DUP2 DUP6 DUP6 PUSH2 0x7FE JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x617 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60E SWAP1 PUSH2 0xF55 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x687 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x67E SWAP1 PUSH2 0xFE7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x765 SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x77E DUP5 DUP5 PUSH2 0x518 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x7F8 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x7EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7E1 SWAP1 PUSH2 0x1053 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7F7 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x5A7 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x86E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x865 SWAP1 PUSH2 0x10E5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x8DE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8D5 SWAP1 PUSH2 0x1177 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x8E9 DUP4 DUP4 DUP4 PUSH2 0xA76 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x96F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x966 SWAP1 PUSH2 0x1209 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xA5D SWAP2 SWAP1 PUSH2 0xC59 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xA70 DUP5 DUP5 DUP5 PUSH2 0xA7B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xABA JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xA9F JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xAC9 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xAEB DUP3 PUSH2 0xA80 JUMP JUMPDEST PUSH2 0xAF5 DUP2 DUP6 PUSH2 0xA8B JUMP JUMPDEST SWAP4 POP PUSH2 0xB05 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xA9C JUMP JUMPDEST PUSH2 0xB0E DUP2 PUSH2 0xACF JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xB33 DUP2 DUP5 PUSH2 0xAE0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xB6B DUP3 PUSH2 0xB40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xB7B DUP2 PUSH2 0xB60 JUMP JUMPDEST DUP2 EQ PUSH2 0xB86 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xB98 DUP2 PUSH2 0xB72 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xBB1 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP2 EQ PUSH2 0xBBC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xBCE DUP2 PUSH2 0xBA8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBEB JUMPI PUSH2 0xBEA PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xBF9 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xC0A DUP6 DUP3 DUP7 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xC29 DUP2 PUSH2 0xC14 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC44 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC20 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xC53 DUP2 PUSH2 0xB9E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xC6E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xC4A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xC8D JUMPI PUSH2 0xC8C PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xC9B DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xCAC DUP7 DUP3 DUP8 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xCBD DUP7 DUP3 DUP8 ADD PUSH2 0xBBF JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCDD DUP2 PUSH2 0xCC7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xCF8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xCD4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD14 JUMPI PUSH2 0xD13 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD22 DUP5 DUP3 DUP6 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD42 JUMPI PUSH2 0xD41 PUSH2 0xB3B JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD50 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xD61 DUP6 DUP3 DUP7 ADD PUSH2 0xB89 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0xDB2 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xDC6 JUMPI PUSH2 0xDC5 PUSH2 0xD6B JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE06 DUP3 PUSH2 0xB9E JUMP JUMPDEST SWAP2 POP PUSH2 0xE11 DUP4 PUSH2 0xB9E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xE46 JUMPI PUSH2 0xE45 PUSH2 0xDCC JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xEAD PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xEB8 DUP3 PUSH2 0xE51 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEDC DUP2 PUSH2 0xEA0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF3F PUSH1 0x24 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xF4A DUP3 PUSH2 0xEE3 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF6E DUP2 PUSH2 0xF32 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFD1 PUSH1 0x22 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0xFDC DUP3 PUSH2 0xF75 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1000 DUP2 PUSH2 0xFC4 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103D PUSH1 0x1D DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x1048 DUP3 PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x106C DUP2 PUSH2 0x1030 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10CF PUSH1 0x25 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x10DA DUP3 PUSH2 0x1073 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x10FE DUP2 PUSH2 0x10C2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1161 PUSH1 0x23 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x116C DUP3 PUSH2 0x1105 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1190 DUP2 PUSH2 0x1154 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x11F3 PUSH1 0x26 DUP4 PUSH2 0xA8B JUMP JUMPDEST SWAP2 POP PUSH2 0x11FE DUP3 PUSH2 0x1197 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1222 DUP2 PUSH2 0x11E6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB9 0xB7 0xD2 CALLVALUE 0xF7 0xAB NUMBER MSIZE SWAP6 0x2E 0x2B SWAP5 SWAP7 0xD6 DUP10 LOG1 0xD7 DUP9 0xCE DUP4 PC 0xD4 0xD0 0xD4 0xEC 0xE2 GAS MULMOD ADDMOD PUSH32 0x3D7464736F6C6343000809003300000000000000000000000000000000000000 ","sourceMap":"1401:11610:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3406:125;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2154:98;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;3406:125::-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;2365:102::-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;10504:370:3:-;10652:1;10635:19;;:5;:19;;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;12180:121::-;;;;:::o;12889:120::-;;;;:::o;7:99:17:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:474::-;5304:6;5312;5361:2;5349:9;5340:7;5336:23;5332:32;5329:119;;;5367:79;;:::i;:::-;5329:119;5487:1;5512:53;5557:7;5548:6;5537:9;5533:22;5512:53;:::i;:::-;5502:63;;5458:117;5614:2;5640:53;5685:7;5676:6;5665:9;5661:22;5640:53;:::i;:::-;5630:63;;5585:118;5236:474;;;;;:::o;5716:180::-;5764:77;5761:1;5754:88;5861:4;5858:1;5851:15;5885:4;5882:1;5875:15;5902:320;5946:6;5983:1;5977:4;5973:12;5963:22;;6030:1;6024:4;6020:12;6051:18;6041:81;;6107:4;6099:6;6095:17;6085:27;;6041:81;6169:2;6161:6;6158:14;6138:18;6135:38;6132:84;;;6188:18;;:::i;:::-;6132:84;5953:269;5902:320;;;:::o;6228:180::-;6276:77;6273:1;6266:88;6373:4;6370:1;6363:15;6397:4;6394:1;6387:15;6414:305;6454:3;6473:20;6491:1;6473:20;:::i;:::-;6468:25;;6507:20;6525:1;6507:20;:::i;:::-;6502:25;;6661:1;6593:66;6589:74;6586:1;6583:81;6580:107;;;6667:18;;:::i;:::-;6580:107;6711:1;6708;6704:9;6697:16;;6414:305;;;;:::o;6725:224::-;6865:34;6861:1;6853:6;6849:14;6842:58;6934:7;6929:2;6921:6;6917:15;6910:32;6725:224;:::o;6955:366::-;7097:3;7118:67;7182:2;7177:3;7118:67;:::i;:::-;7111:74;;7194:93;7283:3;7194:93;:::i;:::-;7312:2;7307:3;7303:12;7296:19;;6955:366;;;:::o;7327:419::-;7493:4;7531:2;7520:9;7516:18;7508:26;;7580:9;7574:4;7570:20;7566:1;7555:9;7551:17;7544:47;7608:131;7734:4;7608:131;:::i;:::-;7600:139;;7327:419;;;:::o;7752:223::-;7892:34;7888:1;7880:6;7876:14;7869:58;7961:6;7956:2;7948:6;7944:15;7937:31;7752:223;:::o;7981:366::-;8123:3;8144:67;8208:2;8203:3;8144:67;:::i;:::-;8137:74;;8220:93;8309:3;8220:93;:::i;:::-;8338:2;8333:3;8329:12;8322:19;;7981:366;;;:::o;8353:419::-;8519:4;8557:2;8546:9;8542:18;8534:26;;8606:9;8600:4;8596:20;8592:1;8581:9;8577:17;8570:47;8634:131;8760:4;8634:131;:::i;:::-;8626:139;;8353:419;;;:::o;8778:221::-;8918:34;8914:1;8906:6;8902:14;8895:58;8987:4;8982:2;8974:6;8970:15;8963:29;8778:221;:::o;9005:366::-;9147:3;9168:67;9232:2;9227:3;9168:67;:::i;:::-;9161:74;;9244:93;9333:3;9244:93;:::i;:::-;9362:2;9357:3;9353:12;9346:19;;9005:366;;;:::o;9377:419::-;9543:4;9581:2;9570:9;9566:18;9558:26;;9630:9;9624:4;9620:20;9616:1;9605:9;9601:17;9594:47;9658:131;9784:4;9658:131;:::i;:::-;9650:139;;9377:419;;;:::o;9802:179::-;9942:31;9938:1;9930:6;9926:14;9919:55;9802:179;:::o;9987:366::-;10129:3;10150:67;10214:2;10209:3;10150:67;:::i;:::-;10143:74;;10226:93;10315:3;10226:93;:::i;:::-;10344:2;10339:3;10335:12;10328:19;;9987:366;;;:::o;10359:419::-;10525:4;10563:2;10552:9;10548:18;10540:26;;10612:9;10606:4;10602:20;10598:1;10587:9;10583:17;10576:47;10640:131;10766:4;10640:131;:::i;:::-;10632:139;;10359:419;;;:::o;10784:224::-;10924:34;10920:1;10912:6;10908:14;10901:58;10993:7;10988:2;10980:6;10976:15;10969:32;10784:224;:::o;11014:366::-;11156:3;11177:67;11241:2;11236:3;11177:67;:::i;:::-;11170:74;;11253:93;11342:3;11253:93;:::i;:::-;11371:2;11366:3;11362:12;11355:19;;11014:366;;;:::o;11386:419::-;11552:4;11590:2;11579:9;11575:18;11567:26;;11639:9;11633:4;11629:20;11625:1;11614:9;11610:17;11603:47;11667:131;11793:4;11667:131;:::i;:::-;11659:139;;11386:419;;;:::o;11811:222::-;11951:34;11947:1;11939:6;11935:14;11928:58;12020:5;12015:2;12007:6;12003:15;11996:30;11811:222;:::o;12039:366::-;12181:3;12202:67;12266:2;12261:3;12202:67;:::i;:::-;12195:74;;12278:93;12367:3;12278:93;:::i;:::-;12396:2;12391:3;12387:12;12380:19;;12039:366;;;:::o;12411:419::-;12577:4;12615:2;12604:9;12600:18;12592:26;;12664:9;12658:4;12654:20;12650:1;12639:9;12635:17;12628:47;12692:131;12818:4;12692:131;:::i;:::-;12684:139;;12411:419;;;:::o;12836:225::-;12976:34;12972:1;12964:6;12960:14;12953:58;13045:8;13040:2;13032:6;13028:15;13021:33;12836:225;:::o;13067:366::-;13209:3;13230:67;13294:2;13289:3;13230:67;:::i;:::-;13223:74;;13306:93;13395:3;13306:93;:::i;:::-;13424:2;13419:3;13415:12;13408:19;;13067:366;;;:::o;13439:419::-;13605:4;13643:2;13632:9;13628:18;13620:26;;13692:9;13686:4;13682:20;13678:1;13667:9;13663:17;13656:47;13720:131;13846:4;13720:131;:::i;:::-;13712:139;;13439:419;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/IERC20.sol":{"IERC20":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}"}},"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"IERC20Metadata":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","name()":"06fdde03","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Strings.sol":{"Strings":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201afbc5b38bfb129f18c184525d965a8dab7a58ed0005ea6b41a960eafc78cbc864736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xFB 0xC5 0xB3 DUP12 0xFB SLT SWAP16 XOR 0xC1 DUP5 MSTORE 0x5D SWAP7 GAS DUP14 0xAB PUSH27 0x58ED0005EA6B41A960EAFC78CBC864736F6C634300080900330000 ","sourceMap":"188:2065:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201afbc5b38bfb129f18c184525d965a8dab7a58ed0005ea6b41a960eafc78cbc864736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 BYTE 0xFB 0xC5 0xB3 DUP12 0xFB SLT SWAP16 XOR 0xC1 DUP5 MSTORE 0x5D SWAP7 GAS DUP14 0xAB PUSH27 0x58ED0005EA6B41A960EAFC78CBC864736F6C634300080900330000 ","sourceMap":"188:2065:7:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"String operations.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Strings.sol\":\"Strings\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/ERC165.sol":{"ERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ``` Alternatively, {ERC165Storage} provides an easier to use but more expensive implementation.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":\"ERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/introspection/IERC165.sol":{"IERC165":{"abi":[{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"supportsInterface(bytes4)":"01ffc9a7"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/Math.sol":{"Math":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c79a003a8186f14f4131b5cd92ba33af17ae859389ff59d5077d8043ae6fe2264736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH26 0xA003A8186F14F4131B5CD92BA33AF17AE859389FF59D5077D804 GASPRICE 0xE6 INVALID 0x22 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"202:12302:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212204c79a003a8186f14f4131b5cd92ba33af17ae859389ff59d5077d8043ae6fe2264736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4C PUSH26 0xA003A8186F14F4131B5CD92BA33AF17AE859389FF59D5077D804 GASPRICE 0xE6 INVALID 0x22 PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"202:12302:10:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/structs/EnumerableSet.sol":{"EnumerableSet":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201f9d1f9e1315238390fa018cf81ac2fa17618f3858295c487c907b01d30c4df364736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F SWAP14 0x1F SWAP15 SGT ISZERO 0x23 DUP4 SWAP1 STATICCALL ADD DUP13 0xF8 BYTE 0xC2 STATICCALL OR PUSH2 0x8F38 PC 0x29 0x5C BASEFEE PUSH29 0x907B01D30C4DF364736F6C634300080900330000000000000000000000 ","sourceMap":"1321:11630:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212201f9d1f9e1315238390fa018cf81ac2fa17618f3858295c487c907b01d30c4df364736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x1F SWAP14 0x1F SWAP15 SGT ISZERO 0x23 DUP4 SWAP1 STATICCALL ADD DUP13 0xF8 BYTE 0xC2 STATICCALL OR PUSH2 0x8F38 PC 0x29 0x5C BASEFEE PUSH29 0x907B01D30C4DF364736F6C634300080900330000000000000000000000 ","sourceMap":"1321:11630:11:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for managing https://en.wikipedia.org/wiki/Set_(abstract_data_type)[sets] of primitive types. Sets have the following properties: - Elements are added, removed, and checked for existence in constant time (O(1)). - Elements are enumerated in O(n). No guarantees are made on the ordering. ``` contract Example {     // Add the library methods     using EnumerableSet for EnumerableSet.AddressSet;     // Declare a set state variable     EnumerableSet.AddressSet private mySet; } ``` As of v3.3.0, sets of type `bytes32` (`Bytes32Set`), `address` (`AddressSet`) and `uint256` (`UintSet`) are supported. [WARNING] ==== Trying to delete such a structure from storage will likely result in data corruption, rendering the structure unusable. See https://github.com/ethereum/solidity/pull/11843[ethereum/solidity#11843] for more info. In order to clean an EnumerableSet, you can either remove all elements one by one or create a fresh instance using an array of EnumerableSet. ====\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":\"EnumerableSet\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]}},\"version\":1}"}},"contracts/ERC20.sol":{"tradeToken":{"abi":[{"inputs":[],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"owner","type":"address"},{"indexed":true,"internalType":"address","name":"spender","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Approval","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"from","type":"address"},{"indexed":true,"internalType":"address","name":"to","type":"address"},{"indexed":false,"internalType":"uint256","name":"value","type":"uint256"}],"name":"Transfer","type":"event"},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"subtractedValue","type":"uint256"}],"name":"decreaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"addedValue","type":"uint256"}],"name":"increaseAllowance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"mint","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"name","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2918":{"entryPoint":null,"id":2918,"parameterSlots":0,"returnSlots":0},"@_412":{"entryPoint":null,"id":412,"parameterSlots":0,"returnSlots":0},"@_546":{"entryPoint":null,"id":546,"parameterSlots":2,"returnSlots":0},"@_msgSender_1203":{"entryPoint":216,"id":1203,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_500":{"entryPoint":224,"id":500,"parameterSlots":1,"returnSlots":0},"extract_byte_array_length":{"entryPoint":645,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x22":{"entryPoint":598,"id":null,"parameterSlots":0,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:516:17","statements":[{"body":{"nodeType":"YulBlock","src":"35:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"52:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"55:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"45:6:17"},"nodeType":"YulFunctionCall","src":"45:88:17"},"nodeType":"YulExpressionStatement","src":"45:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"149:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"152:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"142:6:17"},"nodeType":"YulFunctionCall","src":"142:15:17"},"nodeType":"YulExpressionStatement","src":"142:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"173:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"176:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"166:6:17"},"nodeType":"YulFunctionCall","src":"166:15:17"},"nodeType":"YulExpressionStatement","src":"166:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"7:180:17"},{"body":{"nodeType":"YulBlock","src":"244:269:17","statements":[{"nodeType":"YulAssignment","src":"254:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"268:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"274:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"264:3:17"},"nodeType":"YulFunctionCall","src":"264:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"254:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"285:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"315:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"321:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"311:3:17"},"nodeType":"YulFunctionCall","src":"311:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"289:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"362:51:17","statements":[{"nodeType":"YulAssignment","src":"376:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"390:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"398:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"386:3:17"},"nodeType":"YulFunctionCall","src":"386:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"376:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"342:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"335:6:17"},"nodeType":"YulFunctionCall","src":"335:26:17"},"nodeType":"YulIf","src":"332:81:17"},{"body":{"nodeType":"YulBlock","src":"465:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"479:16:17"},"nodeType":"YulFunctionCall","src":"479:18:17"},"nodeType":"YulExpressionStatement","src":"479:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"429:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"452:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"460:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"449:2:17"},"nodeType":"YulFunctionCall","src":"449:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"426:2:17"},"nodeType":"YulFunctionCall","src":"426:38:17"},"nodeType":"YulIf","src":"423:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"228:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"237:6:17","type":""}],"src":"193:320:17"}]},"contents":"{\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b506040518060400160405280600b81526020017f545241444520544f4b454e0000000000000000000000000000000000000000008152506040518060400160405280600381526020017f5452440000000000000000000000000000000000000000000000000000000000815250816003908051906020019062000096929190620001a6565b508060049080519060200190620000af929190620001a6565b505050620000d2620000c6620000d860201b60201c565b620000e060201b60201c565b620002bb565b600033905090565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b828054620001b49062000285565b90600052602060002090601f016020900481019282620001d8576000855562000224565b82601f10620001f357805160ff191683800117855562000224565b8280016001018555821562000224579182015b828111156200022357825182559160200191906001019062000206565b5b50905062000233919062000237565b5090565b5b808211156200025257600081600090555060010162000238565b5090565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200029e57607f821691505b60208210811415620002b557620002b462000256565b5b50919050565b61180a80620002cb6000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610276578063a9059cbb146102a6578063dd62ed3e146102d6578063f2fde38b14610306576100f5565b806370a0823114610200578063715018a6146102305780638da5cb5b1461023a57806395d89b4114610258576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806340c10f19146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610322565b60405161010f9190610f30565b60405180910390f35b610132600480360381019061012d9190610feb565b6103b4565b60405161013f9190611046565b60405180910390f35b6101506103d7565b60405161015d9190611070565b60405180910390f35b610180600480360381019061017b919061108b565b6103e1565b60405161018d9190611046565b60405180910390f35b61019e610410565b6040516101ab91906110fa565b60405180910390f35b6101ce60048036038101906101c99190610feb565b610419565b6040516101db9190611046565b60405180910390f35b6101fe60048036038101906101f99190610feb565b610450565b005b61021a60048036038101906102159190611115565b61045e565b6040516102279190611070565b60405180910390f35b6102386104a6565b005b6102426104ba565b60405161024f9190611151565b60405180910390f35b6102606104e4565b60405161026d9190610f30565b60405180910390f35b610290600480360381019061028b9190610feb565b610576565b60405161029d9190611046565b60405180910390f35b6102c060048036038101906102bb9190610feb565b6105ed565b6040516102cd9190611046565b60405180910390f35b6102f060048036038101906102eb919061116c565b610610565b6040516102fd9190611070565b60405180910390f35b610320600480360381019061031b9190611115565b610697565b005b606060038054610331906111db565b80601f016020809104026020016040519081016040528092919081815260200182805461035d906111db565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000806103bf61071b565b90506103cc818585610723565b600191505092915050565b6000600254905090565b6000806103ec61071b565b90506103f98582856108ee565b61040485858561097a565b60019150509392505050565b60006012905090565b60008061042461071b565b90506104458185856104368589610610565b610440919061123c565b610723565b600191505092915050565b61045a8282610bf2565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104ae610d49565b6104b86000610dc7565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104f3906111db565b80601f016020809104026020016040519081016040528092919081815260200182805461051f906111db565b801561056c5780601f106105415761010080835404028352916020019161056c565b820191906000526020600020905b81548152906001019060200180831161054f57829003601f168201915b5050505050905090565b60008061058161071b565b9050600061058f8286610610565b9050838110156105d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cb90611304565b60405180910390fd5b6105e18286868403610723565b60019250505092915050565b6000806105f861071b565b905061060581858561097a565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61069f610d49565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561070f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070690611396565b60405180910390fd5b61071881610dc7565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610793576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078a90611428565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610803576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fa906114ba565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108e19190611070565b60405180910390a3505050565b60006108fa8484610610565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109745781811015610966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095d90611526565b60405180910390fd5b6109738484848403610723565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e1906115b8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a519061164a565b60405180910390fd5b610a65838383610e8d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae2906116dc565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bd99190611070565b60405180910390a3610bec848484610e92565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5990611748565b60405180910390fd5b610c6e60008383610e8d565b8060026000828254610c80919061123c565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d319190611070565b60405180910390a3610d4560008383610e92565b5050565b610d5161071b565b73ffffffffffffffffffffffffffffffffffffffff16610d6f6104ba565b73ffffffffffffffffffffffffffffffffffffffff1614610dc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbc906117b4565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ed1578082015181840152602081019050610eb6565b83811115610ee0576000848401525b50505050565b6000601f19601f8301169050919050565b6000610f0282610e97565b610f0c8185610ea2565b9350610f1c818560208601610eb3565b610f2581610ee6565b840191505092915050565b60006020820190508181036000830152610f4a8184610ef7565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f8282610f57565b9050919050565b610f9281610f77565b8114610f9d57600080fd5b50565b600081359050610faf81610f89565b92915050565b6000819050919050565b610fc881610fb5565b8114610fd357600080fd5b50565b600081359050610fe581610fbf565b92915050565b6000806040838503121561100257611001610f52565b5b600061101085828601610fa0565b925050602061102185828601610fd6565b9150509250929050565b60008115159050919050565b6110408161102b565b82525050565b600060208201905061105b6000830184611037565b92915050565b61106a81610fb5565b82525050565b60006020820190506110856000830184611061565b92915050565b6000806000606084860312156110a4576110a3610f52565b5b60006110b286828701610fa0565b93505060206110c386828701610fa0565b92505060406110d486828701610fd6565b9150509250925092565b600060ff82169050919050565b6110f4816110de565b82525050565b600060208201905061110f60008301846110eb565b92915050565b60006020828403121561112b5761112a610f52565b5b600061113984828501610fa0565b91505092915050565b61114b81610f77565b82525050565b60006020820190506111666000830184611142565b92915050565b6000806040838503121561118357611182610f52565b5b600061119185828601610fa0565b92505060206111a285828601610fa0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111f357607f821691505b60208210811415611207576112066111ac565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061124782610fb5565b915061125283610fb5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112875761128661120d565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112ee602583610ea2565b91506112f982611292565b604082019050919050565b6000602082019050818103600083015261131d816112e1565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611380602683610ea2565b915061138b82611324565b604082019050919050565b600060208201905081810360008301526113af81611373565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611412602483610ea2565b915061141d826113b6565b604082019050919050565b6000602082019050818103600083015261144181611405565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006114a4602283610ea2565b91506114af82611448565b604082019050919050565b600060208201905081810360008301526114d381611497565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611510601d83610ea2565b915061151b826114da565b602082019050919050565b6000602082019050818103600083015261153f81611503565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006115a2602583610ea2565b91506115ad82611546565b604082019050919050565b600060208201905081810360008301526115d181611595565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611634602383610ea2565b915061163f826115d8565b604082019050919050565b6000602082019050818103600083015261166381611627565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116c6602683610ea2565b91506116d18261166a565b604082019050919050565b600060208201905081810360008301526116f5816116b9565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611732601f83610ea2565b915061173d826116fc565b602082019050919050565b6000602082019050818103600083015261176181611725565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061179e602083610ea2565b91506117a982611768565b602082019050919050565b600060208201905081810360008301526117cd81611791565b905091905056fea264697066735822122077891ed0c1f8a0fc06938bb065e23a578364716ef657b7f5da301f24e647d11864736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x545241444520544F4B454E000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5452440000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x96 SWAP3 SWAP2 SWAP1 PUSH3 0x1A6 JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0xAF SWAP3 SWAP2 SWAP1 PUSH3 0x1A6 JUMP JUMPDEST POP POP POP PUSH3 0xD2 PUSH3 0xC6 PUSH3 0xD8 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xE0 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x2BB JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x1B4 SWAP1 PUSH3 0x285 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x1D8 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x224 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x1F3 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x224 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x224 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x223 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x206 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x233 SWAP2 SWAP1 PUSH3 0x237 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x252 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x238 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x29E JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2B5 JUMPI PUSH3 0x2B4 PUSH3 0x256 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x180A DUP1 PUSH3 0x2CB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x306 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x258 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E4 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x4A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x242 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x697 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x331 SWAP1 PUSH2 0x11DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35D SWAP1 PUSH2 0x11DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x37F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3BF PUSH2 0x71B JUMP JUMPDEST SWAP1 POP PUSH2 0x3CC DUP2 DUP6 DUP6 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3EC PUSH2 0x71B JUMP JUMPDEST SWAP1 POP PUSH2 0x3F9 DUP6 DUP3 DUP6 PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x404 DUP6 DUP6 DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x424 PUSH2 0x71B JUMP JUMPDEST SWAP1 POP PUSH2 0x445 DUP2 DUP6 DUP6 PUSH2 0x436 DUP6 DUP10 PUSH2 0x610 JUMP JUMPDEST PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x123C JUMP JUMPDEST PUSH2 0x723 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x45A DUP3 DUP3 PUSH2 0xBF2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AE PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x4B8 PUSH1 0x0 PUSH2 0xDC7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4F3 SWAP1 PUSH2 0x11DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x51F SWAP1 PUSH2 0x11DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x56C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x541 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x54F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x581 PUSH2 0x71B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x58F DUP3 DUP7 PUSH2 0x610 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E1 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x723 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5F8 PUSH2 0x71B JUMP JUMPDEST SWAP1 POP PUSH2 0x605 DUP2 DUP6 DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x69F PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x706 SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x718 DUP2 PUSH2 0xDC7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78A SWAP1 PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FA SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FA DUP5 DUP5 PUSH2 0x610 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x974 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95D SWAP1 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x973 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x723 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E1 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA51 SWAP1 PUSH2 0x164A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA65 DUP4 DUP4 DUP4 PUSH2 0xE8D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xBD9 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xBEC DUP5 DUP5 DUP5 PUSH2 0xE92 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6E PUSH1 0x0 DUP4 DUP4 PUSH2 0xE8D JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC80 SWAP2 SWAP1 PUSH2 0x123C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD31 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD45 PUSH1 0x0 DUP4 DUP4 PUSH2 0xE92 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD51 PUSH2 0x71B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD6F PUSH2 0x4BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBC SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xEE0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF02 DUP3 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0xF0C DUP2 DUP6 PUSH2 0xEA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xF1C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEB3 JUMP JUMPDEST PUSH2 0xF25 DUP2 PUSH2 0xEE6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF4A DUP2 DUP5 PUSH2 0xEF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF82 DUP3 PUSH2 0xF57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF92 DUP2 PUSH2 0xF77 JUMP JUMPDEST DUP2 EQ PUSH2 0xF9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFAF DUP2 PUSH2 0xF89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC8 DUP2 PUSH2 0xFB5 JUMP JUMPDEST DUP2 EQ PUSH2 0xFD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFE5 DUP2 PUSH2 0xFBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1002 JUMPI PUSH2 0x1001 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1010 DUP6 DUP3 DUP7 ADD PUSH2 0xFA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1021 DUP6 DUP3 DUP7 ADD PUSH2 0xFD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1040 DUP2 PUSH2 0x102B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x105B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1037 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x106A DUP2 PUSH2 0xFB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1085 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1061 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10A4 JUMPI PUSH2 0x10A3 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10B2 DUP7 DUP3 DUP8 ADD PUSH2 0xFA0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10C3 DUP7 DUP3 DUP8 ADD PUSH2 0xFA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10D4 DUP7 DUP3 DUP8 ADD PUSH2 0xFD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F4 DUP2 PUSH2 0x10DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x110F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x112B JUMPI PUSH2 0x112A PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1139 DUP5 DUP3 DUP6 ADD PUSH2 0xFA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x114B DUP2 PUSH2 0xF77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1166 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1183 JUMPI PUSH2 0x1182 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1191 DUP6 DUP3 DUP7 ADD PUSH2 0xFA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11A2 DUP6 DUP3 DUP7 ADD PUSH2 0xFA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11F3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1207 JUMPI PUSH2 0x1206 PUSH2 0x11AC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1247 DUP3 PUSH2 0xFB5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1252 DUP4 PUSH2 0xFB5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0x120D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EE PUSH1 0x25 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F9 DUP3 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x131D DUP2 PUSH2 0x12E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1380 PUSH1 0x26 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x138B DUP3 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13AF DUP2 PUSH2 0x1373 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1412 PUSH1 0x24 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x141D DUP3 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1441 DUP2 PUSH2 0x1405 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A4 PUSH1 0x22 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x14AF DUP3 PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14D3 DUP2 PUSH2 0x1497 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1510 PUSH1 0x1D DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x151B DUP3 PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x153F DUP2 PUSH2 0x1503 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A2 PUSH1 0x25 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x15AD DUP3 PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15D1 DUP2 PUSH2 0x1595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1634 PUSH1 0x23 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x163F DUP3 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1663 DUP2 PUSH2 0x1627 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C6 PUSH1 0x26 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x16D1 DUP3 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16F5 DUP2 PUSH2 0x16B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1732 PUSH1 0x1F DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x173D DUP3 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1761 DUP2 PUSH2 0x1725 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179E PUSH1 0x20 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A9 DUP3 PUSH2 0x1768 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17CD DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x891ED0C1F8A0FC06938BB065E23A578364716EF657B7F5DA ADDRESS 0x1F 0x24 0xE6 SELFBALANCE 0xD1 XOR PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"169:185:12:-:0;;;214:44;;;;;;;;;;1976:113:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2050:5;2042;:13;;;;;;;;;;;;:::i;:::-;;2075:7;2065;:17;;;;;;;;;;;;:::i;:::-;;1976:113;;936:32:2;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;169:185:12;;640:96:6;693:7;719:10;712:17;;640:96;:::o;2433:187:2:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;169:185:12:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:180:17:-;55:77;52:1;45:88;152:4;149:1;142:15;176:4;173:1;166:15;193:320;237:6;274:1;268:4;264:12;254:22;;321:1;315:4;311:12;342:18;332:81;;398:4;390:6;386:17;376:27;;332:81;460:2;452:6;449:14;429:18;426:38;423:84;;;479:18;;:::i;:::-;423:84;244:269;193:320;;;:::o;169:185:12:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_afterTokenTransfer_1087":{"entryPoint":3730,"id":1087,"parameterSlots":3,"returnSlots":0},"@_approve_1022":{"entryPoint":1827,"id":1022,"parameterSlots":3,"returnSlots":0},"@_beforeTokenTransfer_1076":{"entryPoint":3725,"id":1076,"parameterSlots":3,"returnSlots":0},"@_checkOwner_443":{"entryPoint":3401,"id":443,"parameterSlots":0,"returnSlots":0},"@_mint_905":{"entryPoint":3058,"id":905,"parameterSlots":2,"returnSlots":0},"@_msgSender_1203":{"entryPoint":1819,"id":1203,"parameterSlots":0,"returnSlots":1},"@_spendAllowance_1065":{"entryPoint":2286,"id":1065,"parameterSlots":3,"returnSlots":0},"@_transferOwnership_500":{"entryPoint":3527,"id":500,"parameterSlots":1,"returnSlots":0},"@_transfer_848":{"entryPoint":2426,"id":848,"parameterSlots":3,"returnSlots":0},"@allowance_643":{"entryPoint":1552,"id":643,"parameterSlots":2,"returnSlots":1},"@approve_668":{"entryPoint":948,"id":668,"parameterSlots":2,"returnSlots":1},"@balanceOf_600":{"entryPoint":1118,"id":600,"parameterSlots":1,"returnSlots":1},"@decimals_576":{"entryPoint":1040,"id":576,"parameterSlots":0,"returnSlots":1},"@decreaseAllowance_771":{"entryPoint":1398,"id":771,"parameterSlots":2,"returnSlots":1},"@increaseAllowance_730":{"entryPoint":1049,"id":730,"parameterSlots":2,"returnSlots":1},"@mint_2931":{"entryPoint":1104,"id":2931,"parameterSlots":2,"returnSlots":0},"@name_556":{"entryPoint":802,"id":556,"parameterSlots":0,"returnSlots":1},"@owner_429":{"entryPoint":1210,"id":429,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_457":{"entryPoint":1190,"id":457,"parameterSlots":0,"returnSlots":0},"@symbol_566":{"entryPoint":1252,"id":566,"parameterSlots":0,"returnSlots":1},"@totalSupply_586":{"entryPoint":983,"id":586,"parameterSlots":0,"returnSlots":1},"@transferFrom_701":{"entryPoint":993,"id":701,"parameterSlots":3,"returnSlots":1},"@transferOwnership_480":{"entryPoint":1687,"id":480,"parameterSlots":1,"returnSlots":0},"@transfer_625":{"entryPoint":1517,"id":625,"parameterSlots":2,"returnSlots":1},"abi_decode_t_address":{"entryPoint":4000,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":4054,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":4373,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":4460,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_uint256":{"entryPoint":4235,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":4075,"id":null,"parameterSlots":2,"returnSlots":2},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":4418,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":4151,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":3831,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack":{"entryPoint":5671,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":4979,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack":{"entryPoint":5271,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack":{"entryPoint":5379,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack":{"entryPoint":5817,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":6033,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack":{"entryPoint":5525,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack":{"entryPoint":5125,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack":{"entryPoint":4833,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack":{"entryPoint":5925,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":4193,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint8_to_t_uint8_fromStack":{"entryPoint":4331,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":4433,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":4166,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":3888,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5706,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5014,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5306,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5414,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5852,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":6068,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5560,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5160,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":4868,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":5960,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":4208,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed":{"entryPoint":4346,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":3735,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":3746,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":4668,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":3959,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":4139,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":3927,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":4021,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint8":{"entryPoint":4318,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":3763,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":4571,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":4621,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":4524,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":3922,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":3814,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f":{"entryPoint":5592,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":4900,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029":{"entryPoint":5192,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe":{"entryPoint":5338,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6":{"entryPoint":5738,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":5992,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea":{"entryPoint":5446,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208":{"entryPoint":5046,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8":{"entryPoint":4754,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e":{"entryPoint":5884,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":3977,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":4031,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:17210:17","statements":[{"body":{"nodeType":"YulBlock","src":"66:40:17","statements":[{"nodeType":"YulAssignment","src":"77:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"93:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"87:5:17"},"nodeType":"YulFunctionCall","src":"87:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"77:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"49:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"59:6:17","type":""}],"src":"7:99:17"},{"body":{"nodeType":"YulBlock","src":"208:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"225:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"230:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"218:6:17"},"nodeType":"YulFunctionCall","src":"218:19:17"},"nodeType":"YulExpressionStatement","src":"218:19:17"},{"nodeType":"YulAssignment","src":"246:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"265:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"270:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"261:3:17"},"nodeType":"YulFunctionCall","src":"261:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"246:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"180:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"185:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"196:11:17","type":""}],"src":"112:169:17"},{"body":{"nodeType":"YulBlock","src":"336:258:17","statements":[{"nodeType":"YulVariableDeclaration","src":"346:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"355:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"350:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"415:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"440:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"445:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"436:3:17"},"nodeType":"YulFunctionCall","src":"436:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"459:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"464:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"455:3:17"},"nodeType":"YulFunctionCall","src":"455:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"449:5:17"},"nodeType":"YulFunctionCall","src":"449:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"429:6:17"},"nodeType":"YulFunctionCall","src":"429:39:17"},"nodeType":"YulExpressionStatement","src":"429:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"376:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"379:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"373:2:17"},"nodeType":"YulFunctionCall","src":"373:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"387:19:17","statements":[{"nodeType":"YulAssignment","src":"389:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"398:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"401:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"394:3:17"},"nodeType":"YulFunctionCall","src":"394:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"389:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"369:3:17","statements":[]},"src":"365:113:17"},{"body":{"nodeType":"YulBlock","src":"512:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"562:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"567:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"558:3:17"},"nodeType":"YulFunctionCall","src":"558:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"576:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"551:6:17"},"nodeType":"YulFunctionCall","src":"551:27:17"},"nodeType":"YulExpressionStatement","src":"551:27:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"493:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"496:6:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"490:2:17"},"nodeType":"YulFunctionCall","src":"490:13:17"},"nodeType":"YulIf","src":"487:101:17"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"318:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"323:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"328:6:17","type":""}],"src":"287:307:17"},{"body":{"nodeType":"YulBlock","src":"648:54:17","statements":[{"nodeType":"YulAssignment","src":"658:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"683:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"672:3:17"},"nodeType":"YulFunctionCall","src":"672:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"692:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"688:3:17"},"nodeType":"YulFunctionCall","src":"688:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"668:3:17"},"nodeType":"YulFunctionCall","src":"668:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"658:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"631:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"641:6:17","type":""}],"src":"600:102:17"},{"body":{"nodeType":"YulBlock","src":"800:272:17","statements":[{"nodeType":"YulVariableDeclaration","src":"810:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"857:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"824:32:17"},"nodeType":"YulFunctionCall","src":"824:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"814:6:17","type":""}]},{"nodeType":"YulAssignment","src":"872:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"938:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"943:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"879:58:17"},"nodeType":"YulFunctionCall","src":"879:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"872:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"985:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"992:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"981:3:17"},"nodeType":"YulFunctionCall","src":"981:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"999:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1004:6:17"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"959:21:17"},"nodeType":"YulFunctionCall","src":"959:52:17"},"nodeType":"YulExpressionStatement","src":"959:52:17"},{"nodeType":"YulAssignment","src":"1020:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1031:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1058:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1036:21:17"},"nodeType":"YulFunctionCall","src":"1036:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1027:3:17"},"nodeType":"YulFunctionCall","src":"1027:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1020:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"781:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"788:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"796:3:17","type":""}],"src":"708:364:17"},{"body":{"nodeType":"YulBlock","src":"1196:195:17","statements":[{"nodeType":"YulAssignment","src":"1206:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1218:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1229:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1214:3:17"},"nodeType":"YulFunctionCall","src":"1214:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1206:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1253:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1264:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1249:3:17"},"nodeType":"YulFunctionCall","src":"1249:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"1272:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1278:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1268:3:17"},"nodeType":"YulFunctionCall","src":"1268:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1242:6:17"},"nodeType":"YulFunctionCall","src":"1242:47:17"},"nodeType":"YulExpressionStatement","src":"1242:47:17"},{"nodeType":"YulAssignment","src":"1298:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1370:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"1379:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1306:63:17"},"nodeType":"YulFunctionCall","src":"1306:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1298:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1168:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1180:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1191:4:17","type":""}],"src":"1078:313:17"},{"body":{"nodeType":"YulBlock","src":"1437:35:17","statements":[{"nodeType":"YulAssignment","src":"1447:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1463:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1457:5:17"},"nodeType":"YulFunctionCall","src":"1457:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1447:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1430:6:17","type":""}],"src":"1397:75:17"},{"body":{"nodeType":"YulBlock","src":"1567:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1584:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1587:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1577:6:17"},"nodeType":"YulFunctionCall","src":"1577:12:17"},"nodeType":"YulExpressionStatement","src":"1577:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"1478:117:17"},{"body":{"nodeType":"YulBlock","src":"1690:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1707:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1710:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1700:6:17"},"nodeType":"YulFunctionCall","src":"1700:12:17"},"nodeType":"YulExpressionStatement","src":"1700:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"1601:117:17"},{"body":{"nodeType":"YulBlock","src":"1769:81:17","statements":[{"nodeType":"YulAssignment","src":"1779:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1794:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1801:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1790:3:17"},"nodeType":"YulFunctionCall","src":"1790:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1779:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1751:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1761:7:17","type":""}],"src":"1724:126:17"},{"body":{"nodeType":"YulBlock","src":"1901:51:17","statements":[{"nodeType":"YulAssignment","src":"1911:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1940:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1922:17:17"},"nodeType":"YulFunctionCall","src":"1922:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1911:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1883:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1893:7:17","type":""}],"src":"1856:96:17"},{"body":{"nodeType":"YulBlock","src":"2001:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2058:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2067:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2070:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2060:6:17"},"nodeType":"YulFunctionCall","src":"2060:12:17"},"nodeType":"YulExpressionStatement","src":"2060:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2024:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2049:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"2031:17:17"},"nodeType":"YulFunctionCall","src":"2031:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2021:2:17"},"nodeType":"YulFunctionCall","src":"2021:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2014:6:17"},"nodeType":"YulFunctionCall","src":"2014:43:17"},"nodeType":"YulIf","src":"2011:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1994:5:17","type":""}],"src":"1958:122:17"},{"body":{"nodeType":"YulBlock","src":"2138:87:17","statements":[{"nodeType":"YulAssignment","src":"2148:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2170:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2157:12:17"},"nodeType":"YulFunctionCall","src":"2157:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2148:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2213:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"2186:26:17"},"nodeType":"YulFunctionCall","src":"2186:33:17"},"nodeType":"YulExpressionStatement","src":"2186:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2116:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2124:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2132:5:17","type":""}],"src":"2086:139:17"},{"body":{"nodeType":"YulBlock","src":"2276:32:17","statements":[{"nodeType":"YulAssignment","src":"2286:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2297:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2286:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2258:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2268:7:17","type":""}],"src":"2231:77:17"},{"body":{"nodeType":"YulBlock","src":"2357:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2414:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2423:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2426:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2416:6:17"},"nodeType":"YulFunctionCall","src":"2416:12:17"},"nodeType":"YulExpressionStatement","src":"2416:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2380:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2405:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2387:17:17"},"nodeType":"YulFunctionCall","src":"2387:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2377:2:17"},"nodeType":"YulFunctionCall","src":"2377:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2370:6:17"},"nodeType":"YulFunctionCall","src":"2370:43:17"},"nodeType":"YulIf","src":"2367:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2350:5:17","type":""}],"src":"2314:122:17"},{"body":{"nodeType":"YulBlock","src":"2494:87:17","statements":[{"nodeType":"YulAssignment","src":"2504:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2526:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2513:12:17"},"nodeType":"YulFunctionCall","src":"2513:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2504:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2569:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2542:26:17"},"nodeType":"YulFunctionCall","src":"2542:33:17"},"nodeType":"YulExpressionStatement","src":"2542:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2472:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2480:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2488:5:17","type":""}],"src":"2442:139:17"},{"body":{"nodeType":"YulBlock","src":"2670:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"2716:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2718:77:17"},"nodeType":"YulFunctionCall","src":"2718:79:17"},"nodeType":"YulExpressionStatement","src":"2718:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2691:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2700:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2687:3:17"},"nodeType":"YulFunctionCall","src":"2687:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2712:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2683:3:17"},"nodeType":"YulFunctionCall","src":"2683:32:17"},"nodeType":"YulIf","src":"2680:119:17"},{"nodeType":"YulBlock","src":"2809:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2824:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2838:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2828:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2853:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2888:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2899:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2884:3:17"},"nodeType":"YulFunctionCall","src":"2884:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2908:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"2863:20:17"},"nodeType":"YulFunctionCall","src":"2863:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2853:6:17"}]}]},{"nodeType":"YulBlock","src":"2936:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2951:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2965:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2955:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2981:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3016:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3027:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3012:3:17"},"nodeType":"YulFunctionCall","src":"3012:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3036:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"2991:20:17"},"nodeType":"YulFunctionCall","src":"2991:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"2981:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2632:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2643:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2655:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"2663:6:17","type":""}],"src":"2587:474:17"},{"body":{"nodeType":"YulBlock","src":"3109:48:17","statements":[{"nodeType":"YulAssignment","src":"3119:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3144:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3137:6:17"},"nodeType":"YulFunctionCall","src":"3137:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3130:6:17"},"nodeType":"YulFunctionCall","src":"3130:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"3119:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3091:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"3101:7:17","type":""}],"src":"3067:90:17"},{"body":{"nodeType":"YulBlock","src":"3222:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3239:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3259:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3244:14:17"},"nodeType":"YulFunctionCall","src":"3244:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3232:6:17"},"nodeType":"YulFunctionCall","src":"3232:34:17"},"nodeType":"YulExpressionStatement","src":"3232:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3210:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3217:3:17","type":""}],"src":"3163:109:17"},{"body":{"nodeType":"YulBlock","src":"3370:118:17","statements":[{"nodeType":"YulAssignment","src":"3380:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3392:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3403:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3388:3:17"},"nodeType":"YulFunctionCall","src":"3388:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3380:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3454:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3467:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3478:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3463:3:17"},"nodeType":"YulFunctionCall","src":"3463:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"3416:37:17"},"nodeType":"YulFunctionCall","src":"3416:65:17"},"nodeType":"YulExpressionStatement","src":"3416:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3342:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3354:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3365:4:17","type":""}],"src":"3278:210:17"},{"body":{"nodeType":"YulBlock","src":"3559:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3576:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3599:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"3581:17:17"},"nodeType":"YulFunctionCall","src":"3581:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3569:6:17"},"nodeType":"YulFunctionCall","src":"3569:37:17"},"nodeType":"YulExpressionStatement","src":"3569:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3547:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3554:3:17","type":""}],"src":"3494:118:17"},{"body":{"nodeType":"YulBlock","src":"3716:124:17","statements":[{"nodeType":"YulAssignment","src":"3726:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3738:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3749:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3734:3:17"},"nodeType":"YulFunctionCall","src":"3734:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3726:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3806:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3819:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3830:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:17"},"nodeType":"YulFunctionCall","src":"3815:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3762:43:17"},"nodeType":"YulFunctionCall","src":"3762:71:17"},"nodeType":"YulExpressionStatement","src":"3762:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3688:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3700:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3711:4:17","type":""}],"src":"3618:222:17"},{"body":{"nodeType":"YulBlock","src":"3946:519:17","statements":[{"body":{"nodeType":"YulBlock","src":"3992:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"3994:77:17"},"nodeType":"YulFunctionCall","src":"3994:79:17"},"nodeType":"YulExpressionStatement","src":"3994:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"3967:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3976:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3963:3:17"},"nodeType":"YulFunctionCall","src":"3963:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"3988:2:17","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"3959:3:17"},"nodeType":"YulFunctionCall","src":"3959:32:17"},"nodeType":"YulIf","src":"3956:119:17"},{"nodeType":"YulBlock","src":"4085:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4100:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4114:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4104:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4129:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4164:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4175:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4160:3:17"},"nodeType":"YulFunctionCall","src":"4160:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4184:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4139:20:17"},"nodeType":"YulFunctionCall","src":"4139:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"4129:6:17"}]}]},{"nodeType":"YulBlock","src":"4212:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4227:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4241:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4231:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4257:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4292:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4303:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4288:3:17"},"nodeType":"YulFunctionCall","src":"4288:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4312:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"4267:20:17"},"nodeType":"YulFunctionCall","src":"4267:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"4257:6:17"}]}]},{"nodeType":"YulBlock","src":"4340:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"4355:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"4369:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"4359:6:17","type":""}]},{"nodeType":"YulAssignment","src":"4385:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4420:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"4431:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4416:3:17"},"nodeType":"YulFunctionCall","src":"4416:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"4440:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"4395:20:17"},"nodeType":"YulFunctionCall","src":"4395:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"4385:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3900:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"3911:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"3923:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3931:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"3939:6:17","type":""}],"src":"3846:619:17"},{"body":{"nodeType":"YulBlock","src":"4514:43:17","statements":[{"nodeType":"YulAssignment","src":"4524:27:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4539:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4546:4:17","type":"","value":"0xff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"4535:3:17"},"nodeType":"YulFunctionCall","src":"4535:16:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4524:7:17"}]}]},"name":"cleanup_t_uint8","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4496:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4506:7:17","type":""}],"src":"4471:86:17"},{"body":{"nodeType":"YulBlock","src":"4624:51:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4641:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4662:5:17"}],"functionName":{"name":"cleanup_t_uint8","nodeType":"YulIdentifier","src":"4646:15:17"},"nodeType":"YulFunctionCall","src":"4646:22:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4634:6:17"},"nodeType":"YulFunctionCall","src":"4634:35:17"},"nodeType":"YulExpressionStatement","src":"4634:35:17"}]},"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4612:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4619:3:17","type":""}],"src":"4563:112:17"},{"body":{"nodeType":"YulBlock","src":"4775:120:17","statements":[{"nodeType":"YulAssignment","src":"4785:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4797:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4808:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4793:3:17"},"nodeType":"YulFunctionCall","src":"4793:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"4785:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"4861:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"4874:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"4885:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4870:3:17"},"nodeType":"YulFunctionCall","src":"4870:17:17"}],"functionName":{"name":"abi_encode_t_uint8_to_t_uint8_fromStack","nodeType":"YulIdentifier","src":"4821:39:17"},"nodeType":"YulFunctionCall","src":"4821:67:17"},"nodeType":"YulExpressionStatement","src":"4821:67:17"}]},"name":"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4747:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"4759:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"4770:4:17","type":""}],"src":"4681:214:17"},{"body":{"nodeType":"YulBlock","src":"4967:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"5013:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5015:77:17"},"nodeType":"YulFunctionCall","src":"5015:79:17"},"nodeType":"YulExpressionStatement","src":"5015:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"4988:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"4997:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"4984:3:17"},"nodeType":"YulFunctionCall","src":"4984:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5009:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4980:3:17"},"nodeType":"YulFunctionCall","src":"4980:32:17"},"nodeType":"YulIf","src":"4977:119:17"},{"nodeType":"YulBlock","src":"5106:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5121:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5135:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5125:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5150:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5185:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5196:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5181:3:17"},"nodeType":"YulFunctionCall","src":"5181:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5205:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5160:20:17"},"nodeType":"YulFunctionCall","src":"5160:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5150:6:17"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"4937:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"4948:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"4960:6:17","type":""}],"src":"4901:329:17"},{"body":{"nodeType":"YulBlock","src":"5301:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5318:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5341:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"5323:17:17"},"nodeType":"YulFunctionCall","src":"5323:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5311:6:17"},"nodeType":"YulFunctionCall","src":"5311:37:17"},"nodeType":"YulExpressionStatement","src":"5311:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5289:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"5296:3:17","type":""}],"src":"5236:118:17"},{"body":{"nodeType":"YulBlock","src":"5458:124:17","statements":[{"nodeType":"YulAssignment","src":"5468:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5480:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5491:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5476:3:17"},"nodeType":"YulFunctionCall","src":"5476:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5468:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"5548:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5561:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5572:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5557:3:17"},"nodeType":"YulFunctionCall","src":"5557:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"5504:43:17"},"nodeType":"YulFunctionCall","src":"5504:71:17"},"nodeType":"YulExpressionStatement","src":"5504:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5430:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"5442:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"5453:4:17","type":""}],"src":"5360:222:17"},{"body":{"nodeType":"YulBlock","src":"5671:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"5717:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5719:77:17"},"nodeType":"YulFunctionCall","src":"5719:79:17"},"nodeType":"YulExpressionStatement","src":"5719:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5692:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5701:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5688:3:17"},"nodeType":"YulFunctionCall","src":"5688:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5713:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5684:3:17"},"nodeType":"YulFunctionCall","src":"5684:32:17"},"nodeType":"YulIf","src":"5681:119:17"},{"nodeType":"YulBlock","src":"5810:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5825:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5839:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5829:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5854:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5889:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5900:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5885:3:17"},"nodeType":"YulFunctionCall","src":"5885:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5909:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5864:20:17"},"nodeType":"YulFunctionCall","src":"5864:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5854:6:17"}]}]},{"nodeType":"YulBlock","src":"5937:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5952:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5966:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5956:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5982:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6017:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6028:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6013:3:17"},"nodeType":"YulFunctionCall","src":"6013:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6037:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"5992:20:17"},"nodeType":"YulFunctionCall","src":"5992:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5982:6:17"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5633:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5644:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5656:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5664:6:17","type":""}],"src":"5588:474:17"},{"body":{"nodeType":"YulBlock","src":"6096:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6113:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6116:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6106:6:17"},"nodeType":"YulFunctionCall","src":"6106:88:17"},"nodeType":"YulExpressionStatement","src":"6106:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6210:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6213:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6203:6:17"},"nodeType":"YulFunctionCall","src":"6203:15:17"},"nodeType":"YulExpressionStatement","src":"6203:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6234:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6237:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6227:6:17"},"nodeType":"YulFunctionCall","src":"6227:15:17"},"nodeType":"YulExpressionStatement","src":"6227:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"6068:180:17"},{"body":{"nodeType":"YulBlock","src":"6305:269:17","statements":[{"nodeType":"YulAssignment","src":"6315:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6329:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"6335:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"6325:3:17"},"nodeType":"YulFunctionCall","src":"6325:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6315:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"6346:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"6376:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"6382:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6372:3:17"},"nodeType":"YulFunctionCall","src":"6372:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"6350:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"6423:51:17","statements":[{"nodeType":"YulAssignment","src":"6437:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6451:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6459:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"6447:3:17"},"nodeType":"YulFunctionCall","src":"6447:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"6437:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6403:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6396:6:17"},"nodeType":"YulFunctionCall","src":"6396:26:17"},"nodeType":"YulIf","src":"6393:81:17"},{"body":{"nodeType":"YulBlock","src":"6526:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"6540:16:17"},"nodeType":"YulFunctionCall","src":"6540:18:17"},"nodeType":"YulExpressionStatement","src":"6540:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"6490:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"6513:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"6521:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"6510:2:17"},"nodeType":"YulFunctionCall","src":"6510:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6487:2:17"},"nodeType":"YulFunctionCall","src":"6487:38:17"},"nodeType":"YulIf","src":"6484:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"6289:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"6298:6:17","type":""}],"src":"6254:320:17"},{"body":{"nodeType":"YulBlock","src":"6608:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6625:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6628:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6618:6:17"},"nodeType":"YulFunctionCall","src":"6618:88:17"},"nodeType":"YulExpressionStatement","src":"6618:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6722:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"6725:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6715:6:17"},"nodeType":"YulFunctionCall","src":"6715:15:17"},"nodeType":"YulExpressionStatement","src":"6715:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6746:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6749:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6739:6:17"},"nodeType":"YulFunctionCall","src":"6739:15:17"},"nodeType":"YulExpressionStatement","src":"6739:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"6580:180:17"},{"body":{"nodeType":"YulBlock","src":"6810:261:17","statements":[{"nodeType":"YulAssignment","src":"6820:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6843:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6825:17:17"},"nodeType":"YulFunctionCall","src":"6825:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"6820:1:17"}]},{"nodeType":"YulAssignment","src":"6854:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"6877:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"6859:17:17"},"nodeType":"YulFunctionCall","src":"6859:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"6854:1:17"}]},{"body":{"nodeType":"YulBlock","src":"7017:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"7019:16:17"},"nodeType":"YulFunctionCall","src":"7019:18:17"},"nodeType":"YulExpressionStatement","src":"7019:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"6938:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6945:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"7013:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6941:3:17"},"nodeType":"YulFunctionCall","src":"6941:74:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"6935:2:17"},"nodeType":"YulFunctionCall","src":"6935:81:17"},"nodeType":"YulIf","src":"6932:107:17"},{"nodeType":"YulAssignment","src":"7049:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"7060:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"7063:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7056:3:17"},"nodeType":"YulFunctionCall","src":"7056:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"7049:3:17"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"6797:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"6800:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"6806:3:17","type":""}],"src":"6766:305:17"},{"body":{"nodeType":"YulBlock","src":"7183:118:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7205:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7213:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7201:3:17"},"nodeType":"YulFunctionCall","src":"7201:14:17"},{"hexValue":"45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77","kind":"string","nodeType":"YulLiteral","src":"7217:34:17","type":"","value":"ERC20: decreased allowance below"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7194:6:17"},"nodeType":"YulFunctionCall","src":"7194:58:17"},"nodeType":"YulExpressionStatement","src":"7194:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"7273:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7281:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7269:3:17"},"nodeType":"YulFunctionCall","src":"7269:15:17"},{"hexValue":"207a65726f","kind":"string","nodeType":"YulLiteral","src":"7286:7:17","type":"","value":" zero"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7262:6:17"},"nodeType":"YulFunctionCall","src":"7262:32:17"},"nodeType":"YulExpressionStatement","src":"7262:32:17"}]},"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"7175:6:17","type":""}],"src":"7077:224:17"},{"body":{"nodeType":"YulBlock","src":"7453:220:17","statements":[{"nodeType":"YulAssignment","src":"7463:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7529:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"7534:2:17","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7470:58:17"},"nodeType":"YulFunctionCall","src":"7470:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"7463:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7635:3:17"}],"functionName":{"name":"store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8","nodeType":"YulIdentifier","src":"7546:88:17"},"nodeType":"YulFunctionCall","src":"7546:93:17"},"nodeType":"YulExpressionStatement","src":"7546:93:17"},{"nodeType":"YulAssignment","src":"7648:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7659:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"7664:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7655:3:17"},"nodeType":"YulFunctionCall","src":"7655:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"7648:3:17"}]}]},"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"7441:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"7449:3:17","type":""}],"src":"7307:366:17"},{"body":{"nodeType":"YulBlock","src":"7850:248:17","statements":[{"nodeType":"YulAssignment","src":"7860:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7872:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7883:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7868:3:17"},"nodeType":"YulFunctionCall","src":"7868:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7860:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7907:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7918:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7903:3:17"},"nodeType":"YulFunctionCall","src":"7903:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"7926:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7932:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7922:3:17"},"nodeType":"YulFunctionCall","src":"7922:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7896:6:17"},"nodeType":"YulFunctionCall","src":"7896:47:17"},"nodeType":"YulExpressionStatement","src":"7896:47:17"},{"nodeType":"YulAssignment","src":"7952:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8086:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"7960:124:17"},"nodeType":"YulFunctionCall","src":"7960:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7952:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7830:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7845:4:17","type":""}],"src":"7679:419:17"},{"body":{"nodeType":"YulBlock","src":"8210:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8232:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8240:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8228:3:17"},"nodeType":"YulFunctionCall","src":"8228:14:17"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"8244:34:17","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8221:6:17"},"nodeType":"YulFunctionCall","src":"8221:58:17"},"nodeType":"YulExpressionStatement","src":"8221:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"8300:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8308:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8296:3:17"},"nodeType":"YulFunctionCall","src":"8296:15:17"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"8313:8:17","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8289:6:17"},"nodeType":"YulFunctionCall","src":"8289:33:17"},"nodeType":"YulExpressionStatement","src":"8289:33:17"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"8202:6:17","type":""}],"src":"8104:225:17"},{"body":{"nodeType":"YulBlock","src":"8481:220:17","statements":[{"nodeType":"YulAssignment","src":"8491:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8557:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8562:2:17","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8498:58:17"},"nodeType":"YulFunctionCall","src":"8498:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"8491:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8663:3:17"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"8574:88:17"},"nodeType":"YulFunctionCall","src":"8574:93:17"},"nodeType":"YulExpressionStatement","src":"8574:93:17"},{"nodeType":"YulAssignment","src":"8676:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8687:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8692:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8683:3:17"},"nodeType":"YulFunctionCall","src":"8683:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"8676:3:17"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8469:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8477:3:17","type":""}],"src":"8335:366:17"},{"body":{"nodeType":"YulBlock","src":"8878:248:17","statements":[{"nodeType":"YulAssignment","src":"8888:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8900:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8911:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8896:3:17"},"nodeType":"YulFunctionCall","src":"8896:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8888:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"8935:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"8946:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8931:3:17"},"nodeType":"YulFunctionCall","src":"8931:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"8954:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"8960:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"8950:3:17"},"nodeType":"YulFunctionCall","src":"8950:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8924:6:17"},"nodeType":"YulFunctionCall","src":"8924:47:17"},"nodeType":"YulExpressionStatement","src":"8924:47:17"},{"nodeType":"YulAssignment","src":"8980:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9114:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"8988:124:17"},"nodeType":"YulFunctionCall","src":"8988:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"8980:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"8858:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"8873:4:17","type":""}],"src":"8707:419:17"},{"body":{"nodeType":"YulBlock","src":"9238:117:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9260:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9268:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9256:3:17"},"nodeType":"YulFunctionCall","src":"9256:14:17"},{"hexValue":"45524332303a20617070726f76652066726f6d20746865207a65726f20616464","kind":"string","nodeType":"YulLiteral","src":"9272:34:17","type":"","value":"ERC20: approve from the zero add"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9249:6:17"},"nodeType":"YulFunctionCall","src":"9249:58:17"},"nodeType":"YulExpressionStatement","src":"9249:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"9328:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9336:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9324:3:17"},"nodeType":"YulFunctionCall","src":"9324:15:17"},{"hexValue":"72657373","kind":"string","nodeType":"YulLiteral","src":"9341:6:17","type":"","value":"ress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9317:6:17"},"nodeType":"YulFunctionCall","src":"9317:31:17"},"nodeType":"YulExpressionStatement","src":"9317:31:17"}]},"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"9230:6:17","type":""}],"src":"9132:223:17"},{"body":{"nodeType":"YulBlock","src":"9507:220:17","statements":[{"nodeType":"YulAssignment","src":"9517:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9583:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9588:2:17","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"9524:58:17"},"nodeType":"YulFunctionCall","src":"9524:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"9517:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9689:3:17"}],"functionName":{"name":"store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208","nodeType":"YulIdentifier","src":"9600:88:17"},"nodeType":"YulFunctionCall","src":"9600:93:17"},"nodeType":"YulExpressionStatement","src":"9600:93:17"},{"nodeType":"YulAssignment","src":"9702:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9713:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9718:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9709:3:17"},"nodeType":"YulFunctionCall","src":"9709:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"9702:3:17"}]}]},"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"9495:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"9503:3:17","type":""}],"src":"9361:366:17"},{"body":{"nodeType":"YulBlock","src":"9904:248:17","statements":[{"nodeType":"YulAssignment","src":"9914:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9926:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9937:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9922:3:17"},"nodeType":"YulFunctionCall","src":"9922:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9914:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9961:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9972:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9957:3:17"},"nodeType":"YulFunctionCall","src":"9957:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9980:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9986:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9976:3:17"},"nodeType":"YulFunctionCall","src":"9976:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9950:6:17"},"nodeType":"YulFunctionCall","src":"9950:47:17"},"nodeType":"YulExpressionStatement","src":"9950:47:17"},{"nodeType":"YulAssignment","src":"10006:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10140:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10014:124:17"},"nodeType":"YulFunctionCall","src":"10014:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10006:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9884:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"9899:4:17","type":""}],"src":"9733:419:17"},{"body":{"nodeType":"YulBlock","src":"10264:115:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10286:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10294:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10282:3:17"},"nodeType":"YulFunctionCall","src":"10282:14:17"},{"hexValue":"45524332303a20617070726f766520746f20746865207a65726f206164647265","kind":"string","nodeType":"YulLiteral","src":"10298:34:17","type":"","value":"ERC20: approve to the zero addre"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10275:6:17"},"nodeType":"YulFunctionCall","src":"10275:58:17"},"nodeType":"YulExpressionStatement","src":"10275:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"10354:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"10362:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10350:3:17"},"nodeType":"YulFunctionCall","src":"10350:15:17"},{"hexValue":"7373","kind":"string","nodeType":"YulLiteral","src":"10367:4:17","type":"","value":"ss"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10343:6:17"},"nodeType":"YulFunctionCall","src":"10343:29:17"},"nodeType":"YulExpressionStatement","src":"10343:29:17"}]},"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"10256:6:17","type":""}],"src":"10158:221:17"},{"body":{"nodeType":"YulBlock","src":"10531:220:17","statements":[{"nodeType":"YulAssignment","src":"10541:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10607:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10612:2:17","type":"","value":"34"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10548:58:17"},"nodeType":"YulFunctionCall","src":"10548:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10541:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10713:3:17"}],"functionName":{"name":"store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029","nodeType":"YulIdentifier","src":"10624:88:17"},"nodeType":"YulFunctionCall","src":"10624:93:17"},"nodeType":"YulExpressionStatement","src":"10624:93:17"},{"nodeType":"YulAssignment","src":"10726:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10737:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10742:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10733:3:17"},"nodeType":"YulFunctionCall","src":"10733:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10726:3:17"}]}]},"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10519:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10527:3:17","type":""}],"src":"10385:366:17"},{"body":{"nodeType":"YulBlock","src":"10928:248:17","statements":[{"nodeType":"YulAssignment","src":"10938:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10950:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10961:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10946:3:17"},"nodeType":"YulFunctionCall","src":"10946:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10938:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10985:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"10996:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10981:3:17"},"nodeType":"YulFunctionCall","src":"10981:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11004:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11010:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11000:3:17"},"nodeType":"YulFunctionCall","src":"11000:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10974:6:17"},"nodeType":"YulFunctionCall","src":"10974:47:17"},"nodeType":"YulExpressionStatement","src":"10974:47:17"},{"nodeType":"YulAssignment","src":"11030:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11164:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11038:124:17"},"nodeType":"YulFunctionCall","src":"11038:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11030:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"10908:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"10923:4:17","type":""}],"src":"10757:419:17"},{"body":{"nodeType":"YulBlock","src":"11288:73:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"11310:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"11318:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11306:3:17"},"nodeType":"YulFunctionCall","src":"11306:14:17"},{"hexValue":"45524332303a20696e73756666696369656e7420616c6c6f77616e6365","kind":"string","nodeType":"YulLiteral","src":"11322:31:17","type":"","value":"ERC20: insufficient allowance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11299:6:17"},"nodeType":"YulFunctionCall","src":"11299:55:17"},"nodeType":"YulExpressionStatement","src":"11299:55:17"}]},"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"11280:6:17","type":""}],"src":"11182:179:17"},{"body":{"nodeType":"YulBlock","src":"11513:220:17","statements":[{"nodeType":"YulAssignment","src":"11523:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11589:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11594:2:17","type":"","value":"29"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"11530:58:17"},"nodeType":"YulFunctionCall","src":"11530:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11523:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11695:3:17"}],"functionName":{"name":"store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe","nodeType":"YulIdentifier","src":"11606:88:17"},"nodeType":"YulFunctionCall","src":"11606:93:17"},"nodeType":"YulExpressionStatement","src":"11606:93:17"},{"nodeType":"YulAssignment","src":"11708:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11719:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"11724:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11715:3:17"},"nodeType":"YulFunctionCall","src":"11715:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11708:3:17"}]}]},"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"11501:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11509:3:17","type":""}],"src":"11367:366:17"},{"body":{"nodeType":"YulBlock","src":"11910:248:17","statements":[{"nodeType":"YulAssignment","src":"11920:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11932:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11943:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11928:3:17"},"nodeType":"YulFunctionCall","src":"11928:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11920:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"11967:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"11978:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11963:3:17"},"nodeType":"YulFunctionCall","src":"11963:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11986:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"11992:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11982:3:17"},"nodeType":"YulFunctionCall","src":"11982:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11956:6:17"},"nodeType":"YulFunctionCall","src":"11956:47:17"},"nodeType":"YulExpressionStatement","src":"11956:47:17"},{"nodeType":"YulAssignment","src":"12012:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12146:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12020:124:17"},"nodeType":"YulFunctionCall","src":"12020:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12012:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11890:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"11905:4:17","type":""}],"src":"11739:419:17"},{"body":{"nodeType":"YulBlock","src":"12270:118:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12292:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12300:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12288:3:17"},"nodeType":"YulFunctionCall","src":"12288:14:17"},{"hexValue":"45524332303a207472616e736665722066726f6d20746865207a65726f206164","kind":"string","nodeType":"YulLiteral","src":"12304:34:17","type":"","value":"ERC20: transfer from the zero ad"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12281:6:17"},"nodeType":"YulFunctionCall","src":"12281:58:17"},"nodeType":"YulExpressionStatement","src":"12281:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"12360:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"12368:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12356:3:17"},"nodeType":"YulFunctionCall","src":"12356:15:17"},{"hexValue":"6472657373","kind":"string","nodeType":"YulLiteral","src":"12373:7:17","type":"","value":"dress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12349:6:17"},"nodeType":"YulFunctionCall","src":"12349:32:17"},"nodeType":"YulExpressionStatement","src":"12349:32:17"}]},"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"12262:6:17","type":""}],"src":"12164:224:17"},{"body":{"nodeType":"YulBlock","src":"12540:220:17","statements":[{"nodeType":"YulAssignment","src":"12550:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12616:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12621:2:17","type":"","value":"37"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12557:58:17"},"nodeType":"YulFunctionCall","src":"12557:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"12550:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12722:3:17"}],"functionName":{"name":"store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea","nodeType":"YulIdentifier","src":"12633:88:17"},"nodeType":"YulFunctionCall","src":"12633:93:17"},"nodeType":"YulExpressionStatement","src":"12633:93:17"},{"nodeType":"YulAssignment","src":"12735:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12746:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12751:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12742:3:17"},"nodeType":"YulFunctionCall","src":"12742:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"12735:3:17"}]}]},"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"12528:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12536:3:17","type":""}],"src":"12394:366:17"},{"body":{"nodeType":"YulBlock","src":"12937:248:17","statements":[{"nodeType":"YulAssignment","src":"12947:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12959:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"12970:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12955:3:17"},"nodeType":"YulFunctionCall","src":"12955:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12947:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12994:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13005:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12990:3:17"},"nodeType":"YulFunctionCall","src":"12990:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13013:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"13019:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13009:3:17"},"nodeType":"YulFunctionCall","src":"13009:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12983:6:17"},"nodeType":"YulFunctionCall","src":"12983:47:17"},"nodeType":"YulExpressionStatement","src":"12983:47:17"},{"nodeType":"YulAssignment","src":"13039:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13173:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13047:124:17"},"nodeType":"YulFunctionCall","src":"13047:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13039:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12917:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12932:4:17","type":""}],"src":"12766:419:17"},{"body":{"nodeType":"YulBlock","src":"13297:116:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13319:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13327:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13315:3:17"},"nodeType":"YulFunctionCall","src":"13315:14:17"},{"hexValue":"45524332303a207472616e7366657220746f20746865207a65726f2061646472","kind":"string","nodeType":"YulLiteral","src":"13331:34:17","type":"","value":"ERC20: transfer to the zero addr"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13308:6:17"},"nodeType":"YulFunctionCall","src":"13308:58:17"},"nodeType":"YulExpressionStatement","src":"13308:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"13387:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"13395:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13383:3:17"},"nodeType":"YulFunctionCall","src":"13383:15:17"},{"hexValue":"657373","kind":"string","nodeType":"YulLiteral","src":"13400:5:17","type":"","value":"ess"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13376:6:17"},"nodeType":"YulFunctionCall","src":"13376:30:17"},"nodeType":"YulExpressionStatement","src":"13376:30:17"}]},"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"13289:6:17","type":""}],"src":"13191:222:17"},{"body":{"nodeType":"YulBlock","src":"13565:220:17","statements":[{"nodeType":"YulAssignment","src":"13575:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13641:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13646:2:17","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"13582:58:17"},"nodeType":"YulFunctionCall","src":"13582:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"13575:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13747:3:17"}],"functionName":{"name":"store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f","nodeType":"YulIdentifier","src":"13658:88:17"},"nodeType":"YulFunctionCall","src":"13658:93:17"},"nodeType":"YulExpressionStatement","src":"13658:93:17"},{"nodeType":"YulAssignment","src":"13760:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13771:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13776:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13767:3:17"},"nodeType":"YulFunctionCall","src":"13767:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"13760:3:17"}]}]},"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13553:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13561:3:17","type":""}],"src":"13419:366:17"},{"body":{"nodeType":"YulBlock","src":"13962:248:17","statements":[{"nodeType":"YulAssignment","src":"13972:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"13984:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"13995:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13980:3:17"},"nodeType":"YulFunctionCall","src":"13980:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13972:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"14019:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"14030:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14015:3:17"},"nodeType":"YulFunctionCall","src":"14015:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14038:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"14044:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14034:3:17"},"nodeType":"YulFunctionCall","src":"14034:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14008:6:17"},"nodeType":"YulFunctionCall","src":"14008:47:17"},"nodeType":"YulExpressionStatement","src":"14008:47:17"},{"nodeType":"YulAssignment","src":"14064:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14198:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14072:124:17"},"nodeType":"YulFunctionCall","src":"14072:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14064:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"13942:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"13957:4:17","type":""}],"src":"13791:419:17"},{"body":{"nodeType":"YulBlock","src":"14322:119:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14344:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14352:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14340:3:17"},"nodeType":"YulFunctionCall","src":"14340:14:17"},{"hexValue":"45524332303a207472616e7366657220616d6f756e7420657863656564732062","kind":"string","nodeType":"YulLiteral","src":"14356:34:17","type":"","value":"ERC20: transfer amount exceeds b"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14333:6:17"},"nodeType":"YulFunctionCall","src":"14333:58:17"},"nodeType":"YulExpressionStatement","src":"14333:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"14412:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"14420:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14408:3:17"},"nodeType":"YulFunctionCall","src":"14408:15:17"},{"hexValue":"616c616e6365","kind":"string","nodeType":"YulLiteral","src":"14425:8:17","type":"","value":"alance"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14401:6:17"},"nodeType":"YulFunctionCall","src":"14401:33:17"},"nodeType":"YulExpressionStatement","src":"14401:33:17"}]},"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"14314:6:17","type":""}],"src":"14216:225:17"},{"body":{"nodeType":"YulBlock","src":"14593:220:17","statements":[{"nodeType":"YulAssignment","src":"14603:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14669:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14674:2:17","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14610:58:17"},"nodeType":"YulFunctionCall","src":"14610:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14603:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14775:3:17"}],"functionName":{"name":"store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6","nodeType":"YulIdentifier","src":"14686:88:17"},"nodeType":"YulFunctionCall","src":"14686:93:17"},"nodeType":"YulExpressionStatement","src":"14686:93:17"},{"nodeType":"YulAssignment","src":"14788:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14799:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14804:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14795:3:17"},"nodeType":"YulFunctionCall","src":"14795:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14788:3:17"}]}]},"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"14581:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14589:3:17","type":""}],"src":"14447:366:17"},{"body":{"nodeType":"YulBlock","src":"14990:248:17","statements":[{"nodeType":"YulAssignment","src":"15000:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15012:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15023:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15008:3:17"},"nodeType":"YulFunctionCall","src":"15008:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15000:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15047:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"15058:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15043:3:17"},"nodeType":"YulFunctionCall","src":"15043:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15066:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"15072:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15062:3:17"},"nodeType":"YulFunctionCall","src":"15062:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15036:6:17"},"nodeType":"YulFunctionCall","src":"15036:47:17"},"nodeType":"YulExpressionStatement","src":"15036:47:17"},{"nodeType":"YulAssignment","src":"15092:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15226:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15100:124:17"},"nodeType":"YulFunctionCall","src":"15100:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15092:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"14970:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"14985:4:17","type":""}],"src":"14819:419:17"},{"body":{"nodeType":"YulBlock","src":"15350:75:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"15372:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15380:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15368:3:17"},"nodeType":"YulFunctionCall","src":"15368:14:17"},{"hexValue":"45524332303a206d696e7420746f20746865207a65726f2061646472657373","kind":"string","nodeType":"YulLiteral","src":"15384:33:17","type":"","value":"ERC20: mint to the zero address"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15361:6:17"},"nodeType":"YulFunctionCall","src":"15361:57:17"},"nodeType":"YulExpressionStatement","src":"15361:57:17"}]},"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"15342:6:17","type":""}],"src":"15244:181:17"},{"body":{"nodeType":"YulBlock","src":"15577:220:17","statements":[{"nodeType":"YulAssignment","src":"15587:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15653:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15658:2:17","type":"","value":"31"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15594:58:17"},"nodeType":"YulFunctionCall","src":"15594:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15587:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15759:3:17"}],"functionName":{"name":"store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e","nodeType":"YulIdentifier","src":"15670:88:17"},"nodeType":"YulFunctionCall","src":"15670:93:17"},"nodeType":"YulExpressionStatement","src":"15670:93:17"},{"nodeType":"YulAssignment","src":"15772:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15783:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15788:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15779:3:17"},"nodeType":"YulFunctionCall","src":"15779:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15772:3:17"}]}]},"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"15565:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15573:3:17","type":""}],"src":"15431:366:17"},{"body":{"nodeType":"YulBlock","src":"15974:248:17","statements":[{"nodeType":"YulAssignment","src":"15984:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"15996:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16007:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15992:3:17"},"nodeType":"YulFunctionCall","src":"15992:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15984:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16031:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16042:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16027:3:17"},"nodeType":"YulFunctionCall","src":"16027:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16050:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"16056:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16046:3:17"},"nodeType":"YulFunctionCall","src":"16046:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16020:6:17"},"nodeType":"YulFunctionCall","src":"16020:47:17"},"nodeType":"YulExpressionStatement","src":"16020:47:17"},{"nodeType":"YulAssignment","src":"16076:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16210:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16084:124:17"},"nodeType":"YulFunctionCall","src":"16084:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16076:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15954:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"15969:4:17","type":""}],"src":"15803:419:17"},{"body":{"nodeType":"YulBlock","src":"16334:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"16356:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"16364:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16352:3:17"},"nodeType":"YulFunctionCall","src":"16352:14:17"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"16368:34:17","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16345:6:17"},"nodeType":"YulFunctionCall","src":"16345:58:17"},"nodeType":"YulExpressionStatement","src":"16345:58:17"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"16326:6:17","type":""}],"src":"16228:182:17"},{"body":{"nodeType":"YulBlock","src":"16562:220:17","statements":[{"nodeType":"YulAssignment","src":"16572:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16638:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16643:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16579:58:17"},"nodeType":"YulFunctionCall","src":"16579:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16572:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16744:3:17"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"16655:88:17"},"nodeType":"YulFunctionCall","src":"16655:93:17"},"nodeType":"YulExpressionStatement","src":"16655:93:17"},{"nodeType":"YulAssignment","src":"16757:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16768:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16773:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16764:3:17"},"nodeType":"YulFunctionCall","src":"16764:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16757:3:17"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16550:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16558:3:17","type":""}],"src":"16416:366:17"},{"body":{"nodeType":"YulBlock","src":"16959:248:17","statements":[{"nodeType":"YulAssignment","src":"16969:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16981:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16992:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16977:3:17"},"nodeType":"YulFunctionCall","src":"16977:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16969:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17016:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17027:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17012:3:17"},"nodeType":"YulFunctionCall","src":"17012:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17035:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"17041:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17031:3:17"},"nodeType":"YulFunctionCall","src":"17031:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17005:6:17"},"nodeType":"YulFunctionCall","src":"17005:47:17"},"nodeType":"YulExpressionStatement","src":"17005:47:17"},{"nodeType":"YulAssignment","src":"17061:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17195:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17069:124:17"},"nodeType":"YulFunctionCall","src":"17069:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17061:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16939:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16954:4:17","type":""}],"src":"16788:419:17"}]},"contents":"{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: decreased allowance below\")\n\n        mstore(add(memPtr, 32), \" zero\")\n\n    }\n\n    function abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve from the zero add\")\n\n        mstore(add(memPtr, 32), \"ress\")\n\n    }\n\n    function abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: approve to the zero addre\")\n\n        mstore(add(memPtr, 32), \"ss\")\n\n    }\n\n    function abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 34)\n        store_literal_in_memory_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: insufficient allowance\")\n\n    }\n\n    function abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 29)\n        store_literal_in_memory_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer from the zero ad\")\n\n        mstore(add(memPtr, 32), \"dress\")\n\n    }\n\n    function abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 37)\n        store_literal_in_memory_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer to the zero addr\")\n\n        mstore(add(memPtr, 32), \"ess\")\n\n    }\n\n    function abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: transfer amount exceeds b\")\n\n        mstore(add(memPtr, 32), \"alance\")\n\n    }\n\n    function abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC20: mint to the zero address\")\n\n    }\n\n    function abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610276578063a9059cbb146102a6578063dd62ed3e146102d6578063f2fde38b14610306576100f5565b806370a0823114610200578063715018a6146102305780638da5cb5b1461023a57806395d89b4114610258576100f5565b806323b872dd116100d357806323b872dd14610166578063313ce5671461019657806339509351146101b457806340c10f19146101e4576100f5565b806306fdde03146100fa578063095ea7b31461011857806318160ddd14610148575b600080fd5b610102610322565b60405161010f9190610f30565b60405180910390f35b610132600480360381019061012d9190610feb565b6103b4565b60405161013f9190611046565b60405180910390f35b6101506103d7565b60405161015d9190611070565b60405180910390f35b610180600480360381019061017b919061108b565b6103e1565b60405161018d9190611046565b60405180910390f35b61019e610410565b6040516101ab91906110fa565b60405180910390f35b6101ce60048036038101906101c99190610feb565b610419565b6040516101db9190611046565b60405180910390f35b6101fe60048036038101906101f99190610feb565b610450565b005b61021a60048036038101906102159190611115565b61045e565b6040516102279190611070565b60405180910390f35b6102386104a6565b005b6102426104ba565b60405161024f9190611151565b60405180910390f35b6102606104e4565b60405161026d9190610f30565b60405180910390f35b610290600480360381019061028b9190610feb565b610576565b60405161029d9190611046565b60405180910390f35b6102c060048036038101906102bb9190610feb565b6105ed565b6040516102cd9190611046565b60405180910390f35b6102f060048036038101906102eb919061116c565b610610565b6040516102fd9190611070565b60405180910390f35b610320600480360381019061031b9190611115565b610697565b005b606060038054610331906111db565b80601f016020809104026020016040519081016040528092919081815260200182805461035d906111db565b80156103aa5780601f1061037f576101008083540402835291602001916103aa565b820191906000526020600020905b81548152906001019060200180831161038d57829003601f168201915b5050505050905090565b6000806103bf61071b565b90506103cc818585610723565b600191505092915050565b6000600254905090565b6000806103ec61071b565b90506103f98582856108ee565b61040485858561097a565b60019150509392505050565b60006012905090565b60008061042461071b565b90506104458185856104368589610610565b610440919061123c565b610723565b600191505092915050565b61045a8282610bf2565b5050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6104ae610d49565b6104b86000610dc7565b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060600480546104f3906111db565b80601f016020809104026020016040519081016040528092919081815260200182805461051f906111db565b801561056c5780601f106105415761010080835404028352916020019161056c565b820191906000526020600020905b81548152906001019060200180831161054f57829003601f168201915b5050505050905090565b60008061058161071b565b9050600061058f8286610610565b9050838110156105d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105cb90611304565b60405180910390fd5b6105e18286868403610723565b60019250505092915050565b6000806105f861071b565b905061060581858561097a565b600191505092915050565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b61069f610d49565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561070f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161070690611396565b60405180910390fd5b61071881610dc7565b50565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610793576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161078a90611428565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610803576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107fa906114ba565b60405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040516108e19190611070565b60405180910390a3505050565b60006108fa8484610610565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109745781811015610966576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095d90611526565b60405180910390fd5b6109738484848403610723565b5b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614156109ea576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e1906115b8565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610a5a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a519061164a565b60405180910390fd5b610a65838383610e8d565b60008060008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905081811015610aeb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ae2906116dc565b60405180910390fd5b8181036000808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610bd99190611070565b60405180910390a3610bec848484610e92565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610c62576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c5990611748565b60405180910390fd5b610c6e60008383610e8d565b8060026000828254610c80919061123c565b92505081905550806000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825401925050819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610d319190611070565b60405180910390a3610d4560008383610e92565b5050565b610d5161071b565b73ffffffffffffffffffffffffffffffffffffffff16610d6f6104ba565b73ffffffffffffffffffffffffffffffffffffffff1614610dc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dbc906117b4565b60405180910390fd5b565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905081600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b505050565b505050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610ed1578082015181840152602081019050610eb6565b83811115610ee0576000848401525b50505050565b6000601f19601f8301169050919050565b6000610f0282610e97565b610f0c8185610ea2565b9350610f1c818560208601610eb3565b610f2581610ee6565b840191505092915050565b60006020820190508181036000830152610f4a8184610ef7565b905092915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610f8282610f57565b9050919050565b610f9281610f77565b8114610f9d57600080fd5b50565b600081359050610faf81610f89565b92915050565b6000819050919050565b610fc881610fb5565b8114610fd357600080fd5b50565b600081359050610fe581610fbf565b92915050565b6000806040838503121561100257611001610f52565b5b600061101085828601610fa0565b925050602061102185828601610fd6565b9150509250929050565b60008115159050919050565b6110408161102b565b82525050565b600060208201905061105b6000830184611037565b92915050565b61106a81610fb5565b82525050565b60006020820190506110856000830184611061565b92915050565b6000806000606084860312156110a4576110a3610f52565b5b60006110b286828701610fa0565b93505060206110c386828701610fa0565b92505060406110d486828701610fd6565b9150509250925092565b600060ff82169050919050565b6110f4816110de565b82525050565b600060208201905061110f60008301846110eb565b92915050565b60006020828403121561112b5761112a610f52565b5b600061113984828501610fa0565b91505092915050565b61114b81610f77565b82525050565b60006020820190506111666000830184611142565b92915050565b6000806040838503121561118357611182610f52565b5b600061119185828601610fa0565b92505060206111a285828601610fa0565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806111f357607f821691505b60208210811415611207576112066111ac565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061124782610fb5565b915061125283610fb5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112875761128661120d565b5b828201905092915050565b7f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760008201527f207a65726f000000000000000000000000000000000000000000000000000000602082015250565b60006112ee602583610ea2565b91506112f982611292565b604082019050919050565b6000602082019050818103600083015261131d816112e1565b9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611380602683610ea2565b915061138b82611324565b604082019050919050565b600060208201905081810360008301526113af81611373565b9050919050565b7f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460008201527f7265737300000000000000000000000000000000000000000000000000000000602082015250565b6000611412602483610ea2565b915061141d826113b6565b604082019050919050565b6000602082019050818103600083015261144181611405565b9050919050565b7f45524332303a20617070726f766520746f20746865207a65726f20616464726560008201527f7373000000000000000000000000000000000000000000000000000000000000602082015250565b60006114a4602283610ea2565b91506114af82611448565b604082019050919050565b600060208201905081810360008301526114d381611497565b9050919050565b7f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000600082015250565b6000611510601d83610ea2565b915061151b826114da565b602082019050919050565b6000602082019050818103600083015261153f81611503565b9050919050565b7f45524332303a207472616e736665722066726f6d20746865207a65726f20616460008201527f6472657373000000000000000000000000000000000000000000000000000000602082015250565b60006115a2602583610ea2565b91506115ad82611546565b604082019050919050565b600060208201905081810360008301526115d181611595565b9050919050565b7f45524332303a207472616e7366657220746f20746865207a65726f206164647260008201527f6573730000000000000000000000000000000000000000000000000000000000602082015250565b6000611634602383610ea2565b915061163f826115d8565b604082019050919050565b6000602082019050818103600083015261166381611627565b9050919050565b7f45524332303a207472616e7366657220616d6f756e742065786365656473206260008201527f616c616e63650000000000000000000000000000000000000000000000000000602082015250565b60006116c6602683610ea2565b91506116d18261166a565b604082019050919050565b600060208201905081810360008301526116f5816116b9565b9050919050565b7f45524332303a206d696e7420746f20746865207a65726f206164647265737300600082015250565b6000611732601f83610ea2565b915061173d826116fc565b602082019050919050565b6000602082019050818103600083015261176181611725565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b600061179e602083610ea2565b91506117a982611768565b602082019050919050565b600060208201905081810360008301526117cd81611791565b905091905056fea264697066735822122077891ed0c1f8a0fc06938bb065e23a578364716ef657b7f5da301f24e647d11864736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x276 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2A6 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2D6 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x306 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x200 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x230 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x23A JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x258 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B872DD GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x196 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1E4 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x148 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x102 PUSH2 0x322 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10F SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x3B4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x3D7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x180 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x108B JUMP JUMPDEST PUSH2 0x3E1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH2 0x410 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x10FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1CE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1DB SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x450 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x21A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x215 SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x45E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x227 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x238 PUSH2 0x4A6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x242 PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24F SWAP2 SWAP1 PUSH2 0x1151 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x260 PUSH2 0x4E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26D SWAP2 SWAP1 PUSH2 0xF30 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x290 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28B SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x576 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BB SWAP2 SWAP1 PUSH2 0xFEB JUMP JUMPDEST PUSH2 0x5ED JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2CD SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2F0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2EB SWAP2 SWAP1 PUSH2 0x116C JUMP JUMPDEST PUSH2 0x610 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2FD SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x320 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x31B SWAP2 SWAP1 PUSH2 0x1115 JUMP JUMPDEST PUSH2 0x697 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x331 SWAP1 PUSH2 0x11DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x35D SWAP1 PUSH2 0x11DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x3AA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x37F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x3AA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x38D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3BF PUSH2 0x71B JUMP JUMPDEST SWAP1 POP PUSH2 0x3CC DUP2 DUP6 DUP6 PUSH2 0x723 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x3EC PUSH2 0x71B JUMP JUMPDEST SWAP1 POP PUSH2 0x3F9 DUP6 DUP3 DUP6 PUSH2 0x8EE JUMP JUMPDEST PUSH2 0x404 DUP6 DUP6 DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x424 PUSH2 0x71B JUMP JUMPDEST SWAP1 POP PUSH2 0x445 DUP2 DUP6 DUP6 PUSH2 0x436 DUP6 DUP10 PUSH2 0x610 JUMP JUMPDEST PUSH2 0x440 SWAP2 SWAP1 PUSH2 0x123C JUMP JUMPDEST PUSH2 0x723 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x45A DUP3 DUP3 PUSH2 0xBF2 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4AE PUSH2 0xD49 JUMP JUMPDEST PUSH2 0x4B8 PUSH1 0x0 PUSH2 0xDC7 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x4F3 SWAP1 PUSH2 0x11DB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x51F SWAP1 PUSH2 0x11DB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x56C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x541 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x56C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x54F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x581 PUSH2 0x71B JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x58F DUP3 DUP7 PUSH2 0x610 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x5D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5CB SWAP1 PUSH2 0x1304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5E1 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x723 JUMP JUMPDEST PUSH1 0x1 SWAP3 POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x5F8 PUSH2 0x71B JUMP JUMPDEST SWAP1 POP PUSH2 0x605 DUP2 DUP6 DUP6 PUSH2 0x97A JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x69F PUSH2 0xD49 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x70F JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x706 SWAP1 PUSH2 0x1396 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x718 DUP2 PUSH2 0xDC7 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x793 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x78A SWAP1 PUSH2 0x1428 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x803 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7FA SWAP1 PUSH2 0x14BA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP4 PUSH1 0x40 MLOAD PUSH2 0x8E1 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8FA DUP5 DUP5 PUSH2 0x610 JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x974 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x966 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x95D SWAP1 PUSH2 0x1526 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x973 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x723 JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x9EA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E1 SWAP1 PUSH2 0x15B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA5A JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA51 SWAP1 PUSH2 0x164A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA65 DUP4 DUP4 DUP4 PUSH2 0xE8D JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xAEB JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE2 SWAP1 PUSH2 0x16DC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH1 0x0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x0 DUP1 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0xBD9 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xBEC DUP5 DUP5 DUP5 PUSH2 0xE92 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xC59 SWAP1 PUSH2 0x1748 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xC6E PUSH1 0x0 DUP4 DUP4 PUSH2 0xE8D JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xC80 SWAP2 SWAP1 PUSH2 0x123C JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 PUSH1 0x0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xD31 SWAP2 SWAP1 PUSH2 0x1070 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0xD45 PUSH1 0x0 DUP4 DUP4 PUSH2 0xE92 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0xD51 PUSH2 0x71B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xD6F PUSH2 0x4BA JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDBC SWAP1 PUSH2 0x17B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0xED1 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0xEB6 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xEE0 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF02 DUP3 PUSH2 0xE97 JUMP JUMPDEST PUSH2 0xF0C DUP2 DUP6 PUSH2 0xEA2 JUMP JUMPDEST SWAP4 POP PUSH2 0xF1C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEB3 JUMP JUMPDEST PUSH2 0xF25 DUP2 PUSH2 0xEE6 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF4A DUP2 DUP5 PUSH2 0xEF7 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF82 DUP3 PUSH2 0xF57 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF92 DUP2 PUSH2 0xF77 JUMP JUMPDEST DUP2 EQ PUSH2 0xF9D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFAF DUP2 PUSH2 0xF89 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFC8 DUP2 PUSH2 0xFB5 JUMP JUMPDEST DUP2 EQ PUSH2 0xFD3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFE5 DUP2 PUSH2 0xFBF JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1002 JUMPI PUSH2 0x1001 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1010 DUP6 DUP3 DUP7 ADD PUSH2 0xFA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1021 DUP6 DUP3 DUP7 ADD PUSH2 0xFD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1040 DUP2 PUSH2 0x102B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x105B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1037 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x106A DUP2 PUSH2 0xFB5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1085 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1061 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x10A4 JUMPI PUSH2 0x10A3 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x10B2 DUP7 DUP3 DUP8 ADD PUSH2 0xFA0 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x10C3 DUP7 DUP3 DUP8 ADD PUSH2 0xFA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10D4 DUP7 DUP3 DUP8 ADD PUSH2 0xFD6 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10F4 DUP2 PUSH2 0x10DE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x110F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x112B JUMPI PUSH2 0x112A PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1139 DUP5 DUP3 DUP6 ADD PUSH2 0xFA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x114B DUP2 PUSH2 0xF77 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1166 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1142 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1183 JUMPI PUSH2 0x1182 PUSH2 0xF52 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x1191 DUP6 DUP3 DUP7 ADD PUSH2 0xFA0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x11A2 DUP6 DUP3 DUP7 ADD PUSH2 0xFA0 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x11F3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x1207 JUMPI PUSH2 0x1206 PUSH2 0x11AC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1247 DUP3 PUSH2 0xFB5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1252 DUP4 PUSH2 0xFB5 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1287 JUMPI PUSH2 0x1286 PUSH2 0x120D JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x207A65726F000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12EE PUSH1 0x25 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x12F9 DUP3 PUSH2 0x1292 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x131D DUP2 PUSH2 0x12E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1380 PUSH1 0x26 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x138B DUP3 PUSH2 0x1324 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x13AF DUP2 PUSH2 0x1373 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7265737300000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1412 PUSH1 0x24 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x141D DUP3 PUSH2 0x13B6 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1441 DUP2 PUSH2 0x1405 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7373000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x14A4 PUSH1 0x22 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x14AF DUP3 PUSH2 0x1448 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x14D3 DUP2 PUSH2 0x1497 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1510 PUSH1 0x1D DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x151B DUP3 PUSH2 0x14DA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x153F DUP2 PUSH2 0x1503 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6472657373000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x15A2 PUSH1 0x25 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x15AD DUP3 PUSH2 0x1546 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x15D1 DUP2 PUSH2 0x1595 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6573730000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1634 PUSH1 0x23 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x163F DUP3 PUSH2 0x15D8 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1663 DUP2 PUSH2 0x1627 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x616C616E63650000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x16C6 PUSH1 0x26 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x16D1 DUP3 PUSH2 0x166A JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x16F5 DUP2 PUSH2 0x16B9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1732 PUSH1 0x1F DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x173D DUP3 PUSH2 0x16FC JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1761 DUP2 PUSH2 0x1725 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x179E PUSH1 0x20 DUP4 PUSH2 0xEA2 JUMP JUMPDEST SWAP2 POP PUSH2 0x17A9 DUP3 PUSH2 0x1768 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x17CD DUP2 PUSH2 0x1791 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH24 0x891ED0C1F8A0FC06938BB065E23A578364716EF657B7F5DA ADDRESS 0x1F 0x24 0xE6 SELFBALANCE 0xD1 XOR PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"169:185:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4431:197;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3242:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5190:286;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3091:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5871:234;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;264:87:12;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3406:125:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1831:101:2;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2365:102:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6592:427;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3727:189;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3974:149;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2154:98:3;2208:13;2240:5;2233:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2154:98;:::o;4431:197::-;4514:4;4530:13;4546:12;:10;:12::i;:::-;4530:28;;4568:32;4577:5;4584:7;4593:6;4568:8;:32::i;:::-;4617:4;4610:11;;;4431:197;;;;:::o;3242:106::-;3303:7;3329:12;;3322:19;;3242:106;:::o;5190:286::-;5317:4;5333:15;5351:12;:10;:12::i;:::-;5333:30;;5373:38;5389:4;5395:7;5404:6;5373:15;:38::i;:::-;5421:27;5431:4;5437:2;5441:6;5421:9;:27::i;:::-;5465:4;5458:11;;;5190:286;;;;;:::o;3091:91::-;3149:5;3173:2;3166:9;;3091:91;:::o;5871:234::-;5959:4;5975:13;5991:12;:10;:12::i;:::-;5975:28;;6013:64;6022:5;6029:7;6066:10;6038:25;6048:5;6055:7;6038:9;:25::i;:::-;:38;;;;:::i;:::-;6013:8;:64::i;:::-;6094:4;6087:11;;;5871:234;;;;:::o;264:87:12:-;326:17;332:2;336:6;326:5;:17::i;:::-;264:87;;:::o;3406:125:3:-;3480:7;3506:9;:18;3516:7;3506:18;;;;;;;;;;;;;;;;3499:25;;3406:125;;;:::o;1831:101:2:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;2365:102:3:-;2421:13;2453:7;2446:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2365:102;:::o;6592:427::-;6685:4;6701:13;6717:12;:10;:12::i;:::-;6701:28;;6739:24;6766:25;6776:5;6783:7;6766:9;:25::i;:::-;6739:52;;6829:15;6809:16;:35;;6801:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;6920:60;6929:5;6936:7;6964:15;6945:16;:34;6920:8;:60::i;:::-;7008:4;7001:11;;;;6592:427;;;;:::o;3727:189::-;3806:4;3822:13;3838:12;:10;:12::i;:::-;3822:28;;3860;3870:5;3877:2;3881:6;3860:9;:28::i;:::-;3905:4;3898:11;;;3727:189;;;;:::o;3974:149::-;4063:7;4089:11;:18;4101:5;4089:18;;;;;;;;;;;;;;;:27;4108:7;4089:27;;;;;;;;;;;;;;;;4082:34;;3974:149;;;;:::o;2081:198:2:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;10504:370:3:-;10652:1;10635:19;;:5;:19;;;;10627:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10732:1;10713:21;;:7;:21;;;;10705:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;10814:6;10784:11;:18;10796:5;10784:18;;;;;;;;;;;;;;;:27;10803:7;10784:27;;;;;;;;;;;;;;;:36;;;;10851:7;10835:32;;10844:5;10835:32;;;10860:6;10835:32;;;;;;:::i;:::-;;;;;;;;10504:370;;;:::o;11155:441::-;11285:24;11312:25;11322:5;11329:7;11312:9;:25::i;:::-;11285:52;;11371:17;11351:16;:37;11347:243;;11432:6;11412:16;:26;;11404:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;11514:51;11523:5;11530:7;11558:6;11539:16;:25;11514:8;:51::i;:::-;11347:243;11275:321;11155:441;;;:::o;7473:818::-;7615:1;7599:18;;:4;:18;;;;7591:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;7691:1;7677:16;;:2;:16;;;;7669:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;7744:38;7765:4;7771:2;7775:6;7744:20;:38::i;:::-;7793:19;7815:9;:15;7825:4;7815:15;;;;;;;;;;;;;;;;7793:37;;7863:6;7848:11;:21;;7840:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7978:6;7964:11;:20;7946:9;:15;7956:4;7946:15;;;;;;;;;;;;;;;:38;;;;8178:6;8161:9;:13;8171:2;8161:13;;;;;;;;;;;;;;;;:23;;;;;;;;;;;8225:2;8210:26;;8219:4;8210:26;;;8229:6;8210:26;;;;;;:::i;:::-;;;;;;;;8247:37;8267:4;8273:2;8277:6;8247:19;:37::i;:::-;7581:710;7473:818;;;:::o;8567:535::-;8669:1;8650:21;;:7;:21;;;;8642:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;8718:49;8747:1;8751:7;8760:6;8718:20;:49::i;:::-;8794:6;8778:12;;:22;;;;;;;:::i;:::-;;;;;;;;8968:6;8946:9;:18;8956:7;8946:18;;;;;;;;;;;;;;;;:28;;;;;;;;;;;9020:7;8999:37;;9016:1;8999:37;;;9029:6;8999:37;;;;;;:::i;:::-;;;;;;;;9047:48;9075:1;9079:7;9088:6;9047:19;:48::i;:::-;8567:535;;:::o;1359:130:2:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;12180:121:3:-;;;;:::o;12889:120::-;;;;:::o;7:99:17:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:307::-;355:1;365:113;379:6;376:1;373:13;365:113;;;464:1;459:3;455:11;449:18;445:1;440:3;436:11;429:39;401:2;398:1;394:10;389:15;;365:113;;;496:6;493:1;490:13;487:101;;;576:1;567:6;562:3;558:16;551:27;487:101;336:258;287:307;;;:::o;600:102::-;641:6;692:2;688:7;683:2;676:5;672:14;668:28;658:38;;600:102;;;:::o;708:364::-;796:3;824:39;857:5;824:39;:::i;:::-;879:71;943:6;938:3;879:71;:::i;:::-;872:78;;959:52;1004:6;999:3;992:4;985:5;981:16;959:52;:::i;:::-;1036:29;1058:6;1036:29;:::i;:::-;1031:3;1027:39;1020:46;;800:272;708:364;;;;:::o;1078:313::-;1191:4;1229:2;1218:9;1214:18;1206:26;;1278:9;1272:4;1268:20;1264:1;1253:9;1249:17;1242:47;1306:78;1379:4;1370:6;1306:78;:::i;:::-;1298:86;;1078:313;;;;:::o;1478:117::-;1587:1;1584;1577:12;1724:126;1761:7;1801:42;1794:5;1790:54;1779:65;;1724:126;;;:::o;1856:96::-;1893:7;1922:24;1940:5;1922:24;:::i;:::-;1911:35;;1856:96;;;:::o;1958:122::-;2031:24;2049:5;2031:24;:::i;:::-;2024:5;2021:35;2011:63;;2070:1;2067;2060:12;2011:63;1958:122;:::o;2086:139::-;2132:5;2170:6;2157:20;2148:29;;2186:33;2213:5;2186:33;:::i;:::-;2086:139;;;;:::o;2231:77::-;2268:7;2297:5;2286:16;;2231:77;;;:::o;2314:122::-;2387:24;2405:5;2387:24;:::i;:::-;2380:5;2377:35;2367:63;;2426:1;2423;2416:12;2367:63;2314:122;:::o;2442:139::-;2488:5;2526:6;2513:20;2504:29;;2542:33;2569:5;2542:33;:::i;:::-;2442:139;;;;:::o;2587:474::-;2655:6;2663;2712:2;2700:9;2691:7;2687:23;2683:32;2680:119;;;2718:79;;:::i;:::-;2680:119;2838:1;2863:53;2908:7;2899:6;2888:9;2884:22;2863:53;:::i;:::-;2853:63;;2809:117;2965:2;2991:53;3036:7;3027:6;3016:9;3012:22;2991:53;:::i;:::-;2981:63;;2936:118;2587:474;;;;;:::o;3067:90::-;3101:7;3144:5;3137:13;3130:21;3119:32;;3067:90;;;:::o;3163:109::-;3244:21;3259:5;3244:21;:::i;:::-;3239:3;3232:34;3163:109;;:::o;3278:210::-;3365:4;3403:2;3392:9;3388:18;3380:26;;3416:65;3478:1;3467:9;3463:17;3454:6;3416:65;:::i;:::-;3278:210;;;;:::o;3494:118::-;3581:24;3599:5;3581:24;:::i;:::-;3576:3;3569:37;3494:118;;:::o;3618:222::-;3711:4;3749:2;3738:9;3734:18;3726:26;;3762:71;3830:1;3819:9;3815:17;3806:6;3762:71;:::i;:::-;3618:222;;;;:::o;3846:619::-;3923:6;3931;3939;3988:2;3976:9;3967:7;3963:23;3959:32;3956:119;;;3994:79;;:::i;:::-;3956:119;4114:1;4139:53;4184:7;4175:6;4164:9;4160:22;4139:53;:::i;:::-;4129:63;;4085:117;4241:2;4267:53;4312:7;4303:6;4292:9;4288:22;4267:53;:::i;:::-;4257:63;;4212:118;4369:2;4395:53;4440:7;4431:6;4420:9;4416:22;4395:53;:::i;:::-;4385:63;;4340:118;3846:619;;;;;:::o;4471:86::-;4506:7;4546:4;4539:5;4535:16;4524:27;;4471:86;;;:::o;4563:112::-;4646:22;4662:5;4646:22;:::i;:::-;4641:3;4634:35;4563:112;;:::o;4681:214::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:67;4885:1;4874:9;4870:17;4861:6;4821:67;:::i;:::-;4681:214;;;;:::o;4901:329::-;4960:6;5009:2;4997:9;4988:7;4984:23;4980:32;4977:119;;;5015:79;;:::i;:::-;4977:119;5135:1;5160:53;5205:7;5196:6;5185:9;5181:22;5160:53;:::i;:::-;5150:63;;5106:117;4901:329;;;;:::o;5236:118::-;5323:24;5341:5;5323:24;:::i;:::-;5318:3;5311:37;5236:118;;:::o;5360:222::-;5453:4;5491:2;5480:9;5476:18;5468:26;;5504:71;5572:1;5561:9;5557:17;5548:6;5504:71;:::i;:::-;5360:222;;;;:::o;5588:474::-;5656:6;5664;5713:2;5701:9;5692:7;5688:23;5684:32;5681:119;;;5719:79;;:::i;:::-;5681:119;5839:1;5864:53;5909:7;5900:6;5889:9;5885:22;5864:53;:::i;:::-;5854:63;;5810:117;5966:2;5992:53;6037:7;6028:6;6017:9;6013:22;5992:53;:::i;:::-;5982:63;;5937:118;5588:474;;;;;:::o;6068:180::-;6116:77;6113:1;6106:88;6213:4;6210:1;6203:15;6237:4;6234:1;6227:15;6254:320;6298:6;6335:1;6329:4;6325:12;6315:22;;6382:1;6376:4;6372:12;6403:18;6393:81;;6459:4;6451:6;6447:17;6437:27;;6393:81;6521:2;6513:6;6510:14;6490:18;6487:38;6484:84;;;6540:18;;:::i;:::-;6484:84;6305:269;6254:320;;;:::o;6580:180::-;6628:77;6625:1;6618:88;6725:4;6722:1;6715:15;6749:4;6746:1;6739:15;6766:305;6806:3;6825:20;6843:1;6825:20;:::i;:::-;6820:25;;6859:20;6877:1;6859:20;:::i;:::-;6854:25;;7013:1;6945:66;6941:74;6938:1;6935:81;6932:107;;;7019:18;;:::i;:::-;6932:107;7063:1;7060;7056:9;7049:16;;6766:305;;;;:::o;7077:224::-;7217:34;7213:1;7205:6;7201:14;7194:58;7286:7;7281:2;7273:6;7269:15;7262:32;7077:224;:::o;7307:366::-;7449:3;7470:67;7534:2;7529:3;7470:67;:::i;:::-;7463:74;;7546:93;7635:3;7546:93;:::i;:::-;7664:2;7659:3;7655:12;7648:19;;7307:366;;;:::o;7679:419::-;7845:4;7883:2;7872:9;7868:18;7860:26;;7932:9;7926:4;7922:20;7918:1;7907:9;7903:17;7896:47;7960:131;8086:4;7960:131;:::i;:::-;7952:139;;7679:419;;;:::o;8104:225::-;8244:34;8240:1;8232:6;8228:14;8221:58;8313:8;8308:2;8300:6;8296:15;8289:33;8104:225;:::o;8335:366::-;8477:3;8498:67;8562:2;8557:3;8498:67;:::i;:::-;8491:74;;8574:93;8663:3;8574:93;:::i;:::-;8692:2;8687:3;8683:12;8676:19;;8335:366;;;:::o;8707:419::-;8873:4;8911:2;8900:9;8896:18;8888:26;;8960:9;8954:4;8950:20;8946:1;8935:9;8931:17;8924:47;8988:131;9114:4;8988:131;:::i;:::-;8980:139;;8707:419;;;:::o;9132:223::-;9272:34;9268:1;9260:6;9256:14;9249:58;9341:6;9336:2;9328:6;9324:15;9317:31;9132:223;:::o;9361:366::-;9503:3;9524:67;9588:2;9583:3;9524:67;:::i;:::-;9517:74;;9600:93;9689:3;9600:93;:::i;:::-;9718:2;9713:3;9709:12;9702:19;;9361:366;;;:::o;9733:419::-;9899:4;9937:2;9926:9;9922:18;9914:26;;9986:9;9980:4;9976:20;9972:1;9961:9;9957:17;9950:47;10014:131;10140:4;10014:131;:::i;:::-;10006:139;;9733:419;;;:::o;10158:221::-;10298:34;10294:1;10286:6;10282:14;10275:58;10367:4;10362:2;10354:6;10350:15;10343:29;10158:221;:::o;10385:366::-;10527:3;10548:67;10612:2;10607:3;10548:67;:::i;:::-;10541:74;;10624:93;10713:3;10624:93;:::i;:::-;10742:2;10737:3;10733:12;10726:19;;10385:366;;;:::o;10757:419::-;10923:4;10961:2;10950:9;10946:18;10938:26;;11010:9;11004:4;11000:20;10996:1;10985:9;10981:17;10974:47;11038:131;11164:4;11038:131;:::i;:::-;11030:139;;10757:419;;;:::o;11182:179::-;11322:31;11318:1;11310:6;11306:14;11299:55;11182:179;:::o;11367:366::-;11509:3;11530:67;11594:2;11589:3;11530:67;:::i;:::-;11523:74;;11606:93;11695:3;11606:93;:::i;:::-;11724:2;11719:3;11715:12;11708:19;;11367:366;;;:::o;11739:419::-;11905:4;11943:2;11932:9;11928:18;11920:26;;11992:9;11986:4;11982:20;11978:1;11967:9;11963:17;11956:47;12020:131;12146:4;12020:131;:::i;:::-;12012:139;;11739:419;;;:::o;12164:224::-;12304:34;12300:1;12292:6;12288:14;12281:58;12373:7;12368:2;12360:6;12356:15;12349:32;12164:224;:::o;12394:366::-;12536:3;12557:67;12621:2;12616:3;12557:67;:::i;:::-;12550:74;;12633:93;12722:3;12633:93;:::i;:::-;12751:2;12746:3;12742:12;12735:19;;12394:366;;;:::o;12766:419::-;12932:4;12970:2;12959:9;12955:18;12947:26;;13019:9;13013:4;13009:20;13005:1;12994:9;12990:17;12983:47;13047:131;13173:4;13047:131;:::i;:::-;13039:139;;12766:419;;;:::o;13191:222::-;13331:34;13327:1;13319:6;13315:14;13308:58;13400:5;13395:2;13387:6;13383:15;13376:30;13191:222;:::o;13419:366::-;13561:3;13582:67;13646:2;13641:3;13582:67;:::i;:::-;13575:74;;13658:93;13747:3;13658:93;:::i;:::-;13776:2;13771:3;13767:12;13760:19;;13419:366;;;:::o;13791:419::-;13957:4;13995:2;13984:9;13980:18;13972:26;;14044:9;14038:4;14034:20;14030:1;14019:9;14015:17;14008:47;14072:131;14198:4;14072:131;:::i;:::-;14064:139;;13791:419;;;:::o;14216:225::-;14356:34;14352:1;14344:6;14340:14;14333:58;14425:8;14420:2;14412:6;14408:15;14401:33;14216:225;:::o;14447:366::-;14589:3;14610:67;14674:2;14669:3;14610:67;:::i;:::-;14603:74;;14686:93;14775:3;14686:93;:::i;:::-;14804:2;14799:3;14795:12;14788:19;;14447:366;;;:::o;14819:419::-;14985:4;15023:2;15012:9;15008:18;15000:26;;15072:9;15066:4;15062:20;15058:1;15047:9;15043:17;15036:47;15100:131;15226:4;15100:131;:::i;:::-;15092:139;;14819:419;;;:::o;15244:181::-;15384:33;15380:1;15372:6;15368:14;15361:57;15244:181;:::o;15431:366::-;15573:3;15594:67;15658:2;15653:3;15594:67;:::i;:::-;15587:74;;15670:93;15759:3;15670:93;:::i;:::-;15788:2;15783:3;15779:12;15772:19;;15431:366;;;:::o;15803:419::-;15969:4;16007:2;15996:9;15992:18;15984:26;;16056:9;16050:4;16046:20;16042:1;16031:9;16027:17;16020:47;16084:131;16210:4;16084:131;:::i;:::-;16076:139;;15803:419;;;:::o;16228:182::-;16368:34;16364:1;16356:6;16352:14;16345:58;16228:182;:::o;16416:366::-;16558:3;16579:67;16643:2;16638:3;16579:67;:::i;:::-;16572:74;;16655:93;16744:3;16655:93;:::i;:::-;16773:2;16768:3;16764:12;16757:19;;16416:366;;;:::o;16788:419::-;16954:4;16992:2;16981:9;16977:18;16969:26;;17041:9;17035:4;17031:20;17027:1;17016:9;17012:17;17005:47;17069:131;17195:4;17069:131;:::i;:::-;17061:139;;16788:419;;;:::o"},"methodIdentifiers":{"allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","decimals()":"313ce567","decreaseAllowance(address,uint256)":"a457c2d7","increaseAllowance(address,uint256)":"39509351","mint(address,uint256)":"40c10f19","name()":"06fdde03","owner()":"8da5cb5b","renounceOwnership()":"715018a6","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/ERC20.sol\":\"tradeToken\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x4ffc0547c02ad22925310c585c0f166f8759e2648a09e9b489100c42f15dd98d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://15f52f51413a9de1ff191e2f6367c62178e1df7806d7880fe857a98b0b66253d\",\"dweb:/ipfs/QmaQG1fwfgUt5E9nu2cccFiV47B2V78MM1tCy1qB7n4MsH\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/ERC20.sol\":{\"keccak256\":\"0x694f17650270a6b48525e53f8fa1b44e8194f83ae5132e2cfef3d7191d6bf33f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://baabcf3d41ab05cd7f39de6f28f740ab41a002901beb6090df6072f616ce7cd4\",\"dweb:/ipfs/QmdxyVEMc1H3XEtj2i8Bi2Q8r8giqmDF9SEcGC4K5nKz3y\"]}},\"version\":1}"}},"contracts/Lock.sol":{"Lock":{"abi":[{"inputs":[{"internalType":"uint256","name":"_unlockTime","type":"uint256"}],"stateMutability":"payable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"when","type":"uint256"}],"name":"Withdrawal","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address payable","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"unlockTime","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"withdraw","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_2970":{"entryPoint":null,"id":2970,"parameterSlots":1,"returnSlots":0},"abi_decode_t_uint256_fromMemory":{"entryPoint":219,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256_fromMemory":{"entryPoint":240,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413_to_t_string_memory_ptr_fromStack":{"entryPoint":381,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":416,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":285,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":186,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":181,"id":null,"parameterSlots":0,"returnSlots":0},"store_literal_in_memory_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413":{"entryPoint":302,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":196,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:2248:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:32:17","statements":[{"nodeType":"YulAssignment","src":"389:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:77:17"},{"body":{"nodeType":"YulBlock","src":"460:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:17"},"nodeType":"YulFunctionCall","src":"519:12:17"},"nodeType":"YulExpressionStatement","src":"519:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"490:17:17"},"nodeType":"YulFunctionCall","src":"490:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:17"},"nodeType":"YulFunctionCall","src":"480:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:17"},"nodeType":"YulFunctionCall","src":"473:43:17"},"nodeType":"YulIf","src":"470:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:17","type":""}],"src":"417:122:17"},{"body":{"nodeType":"YulBlock","src":"608:80:17","statements":[{"nodeType":"YulAssignment","src":"618:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"633:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"627:5:17"},"nodeType":"YulFunctionCall","src":"627:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"618:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"649:26:17"},"nodeType":"YulFunctionCall","src":"649:33:17"},"nodeType":"YulExpressionStatement","src":"649:33:17"}]},"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"586:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"594:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"602:5:17","type":""}],"src":"545:143:17"},{"body":{"nodeType":"YulBlock","src":"771:274:17","statements":[{"body":{"nodeType":"YulBlock","src":"817:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"819:77:17"},"nodeType":"YulFunctionCall","src":"819:79:17"},"nodeType":"YulExpressionStatement","src":"819:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"792:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"801:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"788:3:17"},"nodeType":"YulFunctionCall","src":"788:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"813:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"784:3:17"},"nodeType":"YulFunctionCall","src":"784:32:17"},"nodeType":"YulIf","src":"781:119:17"},{"nodeType":"YulBlock","src":"910:128:17","statements":[{"nodeType":"YulVariableDeclaration","src":"925:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"939:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"929:6:17","type":""}]},{"nodeType":"YulAssignment","src":"954:74:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1000:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1011:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"996:3:17"},"nodeType":"YulFunctionCall","src":"996:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1020:7:17"}],"functionName":{"name":"abi_decode_t_uint256_fromMemory","nodeType":"YulIdentifier","src":"964:31:17"},"nodeType":"YulFunctionCall","src":"964:64:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"954:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"741:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"752:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"764:6:17","type":""}],"src":"694:351:17"},{"body":{"nodeType":"YulBlock","src":"1147:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1164:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1169:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1157:6:17"},"nodeType":"YulFunctionCall","src":"1157:19:17"},"nodeType":"YulExpressionStatement","src":"1157:19:17"},{"nodeType":"YulAssignment","src":"1185:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1204:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1209:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1200:3:17"},"nodeType":"YulFunctionCall","src":"1200:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1185:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1119:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1124:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1135:11:17","type":""}],"src":"1051:169:17"},{"body":{"nodeType":"YulBlock","src":"1332:116:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1354:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1362:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1350:3:17"},"nodeType":"YulFunctionCall","src":"1350:14:17"},{"hexValue":"556e6c6f636b2074696d652073686f756c6420626520696e2074686520667574","kind":"string","nodeType":"YulLiteral","src":"1366:34:17","type":"","value":"Unlock time should be in the fut"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1343:6:17"},"nodeType":"YulFunctionCall","src":"1343:58:17"},"nodeType":"YulExpressionStatement","src":"1343:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1422:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1430:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1418:3:17"},"nodeType":"YulFunctionCall","src":"1418:15:17"},{"hexValue":"757265","kind":"string","nodeType":"YulLiteral","src":"1435:5:17","type":"","value":"ure"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1411:6:17"},"nodeType":"YulFunctionCall","src":"1411:30:17"},"nodeType":"YulExpressionStatement","src":"1411:30:17"}]},"name":"store_literal_in_memory_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1324:6:17","type":""}],"src":"1226:222:17"},{"body":{"nodeType":"YulBlock","src":"1600:220:17","statements":[{"nodeType":"YulAssignment","src":"1610:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1676:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1681:2:17","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1617:58:17"},"nodeType":"YulFunctionCall","src":"1617:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1610:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1782:3:17"}],"functionName":{"name":"store_literal_in_memory_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413","nodeType":"YulIdentifier","src":"1693:88:17"},"nodeType":"YulFunctionCall","src":"1693:93:17"},"nodeType":"YulExpressionStatement","src":"1693:93:17"},{"nodeType":"YulAssignment","src":"1795:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1806:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1811:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1802:3:17"},"nodeType":"YulFunctionCall","src":"1802:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1795:3:17"}]}]},"name":"abi_encode_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1588:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1596:3:17","type":""}],"src":"1454:366:17"},{"body":{"nodeType":"YulBlock","src":"1997:248:17","statements":[{"nodeType":"YulAssignment","src":"2007:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2019:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2030:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2015:3:17"},"nodeType":"YulFunctionCall","src":"2015:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2007:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2054:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2065:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2050:3:17"},"nodeType":"YulFunctionCall","src":"2050:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2073:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2079:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2069:3:17"},"nodeType":"YulFunctionCall","src":"2069:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2043:6:17"},"nodeType":"YulFunctionCall","src":"2043:47:17"},"nodeType":"YulExpressionStatement","src":"2043:47:17"},{"nodeType":"YulAssignment","src":"2099:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2233:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2107:124:17"},"nodeType":"YulFunctionCall","src":"2107:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2099:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1977:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1992:4:17","type":""}],"src":"1826:419:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413(memPtr) {\n\n        mstore(add(memPtr, 0), \"Unlock time should be in the fut\")\n\n        mstore(add(memPtr, 32), \"ure\")\n\n    }\n\n    function abi_encode_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f6fa9918d4578fba07be58c41841a4c6937c19725f7f4601884cd186799a8413_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040526040516105d83803806105d8833981810160405281019061002591906100f0565b804210610067576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161005e906101a0565b60405180910390fd5b8060008190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506101c0565b600080fd5b6000819050919050565b6100cd816100ba565b81146100d857600080fd5b50565b6000815190506100ea816100c4565b92915050565b600060208284031215610106576101056100b5565b5b6000610114848285016100db565b91505092915050565b600082825260208201905092915050565b7f556e6c6f636b2074696d652073686f756c6420626520696e207468652066757460008201527f7572650000000000000000000000000000000000000000000000000000000000602082015250565b600061018a60238361011d565b91506101958261012e565b604082019050919050565b600060208201905081810360008301526101b98161017d565b9050919050565b610409806101cf6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063251c1aa3146100465780633ccfd60b146100645780638da5cb5b1461006e575b600080fd5b61004e61008c565b60405161005b919061024a565b60405180910390f35b61006c610092565b005b61007661020b565b60405161008391906102a6565b60405180910390f35b60005481565b6000544210156100d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ce9061031e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610167576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015e9061038a565b60405180910390fd5b7fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b9347426040516101989291906103aa565b60405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610208573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b61024481610231565b82525050565b600060208201905061025f600083018461023b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061029082610265565b9050919050565b6102a081610285565b82525050565b60006020820190506102bb6000830184610297565b92915050565b600082825260208201905092915050565b7f596f752063616e27742077697468647261772079657400000000000000000000600082015250565b60006103086016836102c1565b9150610313826102d2565b602082019050919050565b60006020820190508181036000830152610337816102fb565b9050919050565b7f596f75206172656e277420746865206f776e6572000000000000000000000000600082015250565b60006103746014836102c1565b915061037f8261033e565b602082019050919050565b600060208201905081810360008301526103a381610367565b9050919050565b60006040820190506103bf600083018561023b565b6103cc602083018461023b565b939250505056fea2646970667358221220def00297447773aa4f9c2d566c4afacd3ef428da821a43cbf8b915cadc477ef064736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH2 0x5D8 CODESIZE SUB DUP1 PUSH2 0x5D8 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x25 SWAP2 SWAP1 PUSH2 0xF0 JUMP JUMPDEST DUP1 TIMESTAMP LT PUSH2 0x67 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5E SWAP1 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x1C0 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCD DUP2 PUSH2 0xBA JUMP JUMPDEST DUP2 EQ PUSH2 0xD8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xEA DUP2 PUSH2 0xC4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x106 JUMPI PUSH2 0x105 PUSH2 0xB5 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x114 DUP5 DUP3 DUP6 ADD PUSH2 0xDB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x556E6C6F636B2074696D652073686F756C6420626520696E2074686520667574 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x7572650000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A PUSH1 0x23 DUP4 PUSH2 0x11D JUMP JUMPDEST SWAP2 POP PUSH2 0x195 DUP3 PUSH2 0x12E JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1B9 DUP2 PUSH2 0x17D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x409 DUP1 PUSH2 0x1CF PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x251C1AA3 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP LT ISZERO PUSH2 0xD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE SWAP1 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x167 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E SWAP1 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xBF2ED60BD5B5965D685680C01195C9514E4382E28E3A5A2D2D5244BF59411B93 SELFBALANCE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x198 SWAP3 SWAP2 SWAP1 PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x208 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x244 DUP2 PUSH2 0x231 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290 DUP3 PUSH2 0x265 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A0 DUP2 PUSH2 0x285 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x297 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E27742077697468647261772079657400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH1 0x16 DUP4 PUSH2 0x2C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x313 DUP3 PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x337 DUP2 PUSH2 0x2FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F75206172656E277420746865206F776E6572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x374 PUSH1 0x14 DUP4 PUSH2 0x2C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x37F DUP3 PUSH2 0x33E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A3 DUP2 PUSH2 0x367 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3BF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x23B JUMP JUMPDEST PUSH2 0x3CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE CREATE MUL SWAP8 DIFFICULTY PUSH24 0x73AA4F9C2D566C4AFACD3EF428DA821A43CBF8B915CADC47 PUSH31 0xF064736F6C6343000809003300000000000000000000000000000000000000 ","sourceMap":"140:866:13:-:0;;;270:238;;;;;;;;;;;;;;;;;;;;;:::i;:::-;357:11;339:15;:29;318:111;;;;;;;;;;;;:::i;:::-;;;;;;;;;453:11;440:10;:24;;;;490:10;474:5;;:27;;;;;;;;;;;;;;;;;;270:238;140:866;;88:117:17;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:169::-;1135:11;1169:6;1164:3;1157:19;1209:4;1204:3;1200:14;1185:29;;1051:169;;;;:::o;1226:222::-;1366:34;1362:1;1354:6;1350:14;1343:58;1435:5;1430:2;1422:6;1418:15;1411:30;1226:222;:::o;1454:366::-;1596:3;1617:67;1681:2;1676:3;1617:67;:::i;:::-;1610:74;;1693:93;1782:3;1693:93;:::i;:::-;1811:2;1806:3;1802:12;1795:19;;1454:366;;;:::o;1826:419::-;1992:4;2030:2;2019:9;2015:18;2007:26;;2079:9;2073:4;2069:20;2065:1;2054:9;2050:17;2043:47;2107:131;2233:4;2107:131;:::i;:::-;2099:139;;1826:419;;;:::o;140:866:13:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@owner_2938":{"entryPoint":523,"id":2938,"parameterSlots":0,"returnSlots":0},"@unlockTime_2936":{"entryPoint":140,"id":2936,"parameterSlots":0,"returnSlots":0},"@withdraw_3010":{"entryPoint":146,"id":3010,"parameterSlots":0,"returnSlots":0},"abi_encode_t_address_payable_to_t_address_payable_fromStack":{"entryPoint":663,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8_to_t_string_memory_ptr_fromStack":{"entryPoint":763,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a_to_t_string_memory_ptr_fromStack":{"entryPoint":871,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":571,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed":{"entryPoint":678,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":798,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":906,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":586,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed":{"entryPoint":938,"id":null,"parameterSlots":3,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":705,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address_payable":{"entryPoint":645,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":613,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":561,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8":{"entryPoint":722,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a":{"entryPoint":830,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3550:17","statements":[{"body":{"nodeType":"YulBlock","src":"52:32:17","statements":[{"nodeType":"YulAssignment","src":"62:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"73:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"62:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"34:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"44:7:17","type":""}],"src":"7:77:17"},{"body":{"nodeType":"YulBlock","src":"155:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"172:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"195:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"177:17:17"},"nodeType":"YulFunctionCall","src":"177:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"165:6:17"},"nodeType":"YulFunctionCall","src":"165:37:17"},"nodeType":"YulExpressionStatement","src":"165:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"143:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"150:3:17","type":""}],"src":"90:118:17"},{"body":{"nodeType":"YulBlock","src":"312:124:17","statements":[{"nodeType":"YulAssignment","src":"322:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"334:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"345:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"330:3:17"},"nodeType":"YulFunctionCall","src":"330:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"322:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"402:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"415:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"426:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"411:3:17"},"nodeType":"YulFunctionCall","src":"411:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"358:43:17"},"nodeType":"YulFunctionCall","src":"358:71:17"},"nodeType":"YulExpressionStatement","src":"358:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"284:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"296:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"307:4:17","type":""}],"src":"214:222:17"},{"body":{"nodeType":"YulBlock","src":"487:81:17","statements":[{"nodeType":"YulAssignment","src":"497:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"512:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"519:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"508:3:17"},"nodeType":"YulFunctionCall","src":"508:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"497:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"469:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"479:7:17","type":""}],"src":"442:126:17"},{"body":{"nodeType":"YulBlock","src":"627:51:17","statements":[{"nodeType":"YulAssignment","src":"637:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"666:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"648:17:17"},"nodeType":"YulFunctionCall","src":"648:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"637:7:17"}]}]},"name":"cleanup_t_address_payable","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"609:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"619:7:17","type":""}],"src":"574:104:17"},{"body":{"nodeType":"YulBlock","src":"765:61:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"782:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"813:5:17"}],"functionName":{"name":"cleanup_t_address_payable","nodeType":"YulIdentifier","src":"787:25:17"},"nodeType":"YulFunctionCall","src":"787:32:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"775:6:17"},"nodeType":"YulFunctionCall","src":"775:45:17"},"nodeType":"YulExpressionStatement","src":"775:45:17"}]},"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"753:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"760:3:17","type":""}],"src":"684:142:17"},{"body":{"nodeType":"YulBlock","src":"946:140:17","statements":[{"nodeType":"YulAssignment","src":"956:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"968:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"979:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"964:3:17"},"nodeType":"YulFunctionCall","src":"964:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"956:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1052:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1065:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1076:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1061:3:17"},"nodeType":"YulFunctionCall","src":"1061:17:17"}],"functionName":{"name":"abi_encode_t_address_payable_to_t_address_payable_fromStack","nodeType":"YulIdentifier","src":"992:59:17"},"nodeType":"YulFunctionCall","src":"992:87:17"},"nodeType":"YulExpressionStatement","src":"992:87:17"}]},"name":"abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"918:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"930:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"941:4:17","type":""}],"src":"832:254:17"},{"body":{"nodeType":"YulBlock","src":"1188:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1205:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1210:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1198:6:17"},"nodeType":"YulFunctionCall","src":"1198:19:17"},"nodeType":"YulExpressionStatement","src":"1198:19:17"},{"nodeType":"YulAssignment","src":"1226:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1245:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1250:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1241:3:17"},"nodeType":"YulFunctionCall","src":"1241:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1226:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1160:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1165:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1176:11:17","type":""}],"src":"1092:169:17"},{"body":{"nodeType":"YulBlock","src":"1373:66:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1395:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1403:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1391:3:17"},"nodeType":"YulFunctionCall","src":"1391:14:17"},{"hexValue":"596f752063616e277420776974686472617720796574","kind":"string","nodeType":"YulLiteral","src":"1407:24:17","type":"","value":"You can't withdraw yet"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1384:6:17"},"nodeType":"YulFunctionCall","src":"1384:48:17"},"nodeType":"YulExpressionStatement","src":"1384:48:17"}]},"name":"store_literal_in_memory_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"1365:6:17","type":""}],"src":"1267:172:17"},{"body":{"nodeType":"YulBlock","src":"1591:220:17","statements":[{"nodeType":"YulAssignment","src":"1601:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1667:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1672:2:17","type":"","value":"22"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"1608:58:17"},"nodeType":"YulFunctionCall","src":"1608:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"1601:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1773:3:17"}],"functionName":{"name":"store_literal_in_memory_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8","nodeType":"YulIdentifier","src":"1684:88:17"},"nodeType":"YulFunctionCall","src":"1684:93:17"},"nodeType":"YulExpressionStatement","src":"1684:93:17"},{"nodeType":"YulAssignment","src":"1786:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1797:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1802:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1793:3:17"},"nodeType":"YulFunctionCall","src":"1793:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"1786:3:17"}]}]},"name":"abi_encode_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1579:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"1587:3:17","type":""}],"src":"1445:366:17"},{"body":{"nodeType":"YulBlock","src":"1988:248:17","statements":[{"nodeType":"YulAssignment","src":"1998:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2010:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2021:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2006:3:17"},"nodeType":"YulFunctionCall","src":"2006:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1998:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2045:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2056:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2041:3:17"},"nodeType":"YulFunctionCall","src":"2041:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2064:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2070:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2060:3:17"},"nodeType":"YulFunctionCall","src":"2060:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2034:6:17"},"nodeType":"YulFunctionCall","src":"2034:47:17"},"nodeType":"YulExpressionStatement","src":"2034:47:17"},{"nodeType":"YulAssignment","src":"2090:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"2224:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2098:124:17"},"nodeType":"YulFunctionCall","src":"2098:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2090:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1968:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1983:4:17","type":""}],"src":"1817:419:17"},{"body":{"nodeType":"YulBlock","src":"2348:64:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"2370:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2378:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2366:3:17"},"nodeType":"YulFunctionCall","src":"2366:14:17"},{"hexValue":"596f75206172656e277420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"2382:22:17","type":"","value":"You aren't the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2359:6:17"},"nodeType":"YulFunctionCall","src":"2359:46:17"},"nodeType":"YulExpressionStatement","src":"2359:46:17"}]},"name":"store_literal_in_memory_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"2340:6:17","type":""}],"src":"2242:170:17"},{"body":{"nodeType":"YulBlock","src":"2564:220:17","statements":[{"nodeType":"YulAssignment","src":"2574:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2640:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2645:2:17","type":"","value":"20"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2581:58:17"},"nodeType":"YulFunctionCall","src":"2581:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2574:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2746:3:17"}],"functionName":{"name":"store_literal_in_memory_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a","nodeType":"YulIdentifier","src":"2657:88:17"},"nodeType":"YulFunctionCall","src":"2657:93:17"},"nodeType":"YulExpressionStatement","src":"2657:93:17"},{"nodeType":"YulAssignment","src":"2759:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2770:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2775:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2766:3:17"},"nodeType":"YulFunctionCall","src":"2766:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2759:3:17"}]}]},"name":"abi_encode_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2552:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2560:3:17","type":""}],"src":"2418:366:17"},{"body":{"nodeType":"YulBlock","src":"2961:248:17","statements":[{"nodeType":"YulAssignment","src":"2971:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2983:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2994:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2979:3:17"},"nodeType":"YulFunctionCall","src":"2979:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2971:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3018:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3029:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3014:3:17"},"nodeType":"YulFunctionCall","src":"3014:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3037:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3043:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3033:3:17"},"nodeType":"YulFunctionCall","src":"3033:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3007:6:17"},"nodeType":"YulFunctionCall","src":"3007:47:17"},"nodeType":"YulExpressionStatement","src":"3007:47:17"},{"nodeType":"YulAssignment","src":"3063:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3197:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3071:124:17"},"nodeType":"YulFunctionCall","src":"3071:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3063:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2941:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2956:4:17","type":""}],"src":"2790:419:17"},{"body":{"nodeType":"YulBlock","src":"3341:206:17","statements":[{"nodeType":"YulAssignment","src":"3351:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3363:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3374:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3359:3:17"},"nodeType":"YulFunctionCall","src":"3359:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3351:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3431:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3444:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3455:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3440:3:17"},"nodeType":"YulFunctionCall","src":"3440:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3387:43:17"},"nodeType":"YulFunctionCall","src":"3387:71:17"},"nodeType":"YulExpressionStatement","src":"3387:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"3512:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3525:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3536:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3521:3:17"},"nodeType":"YulFunctionCall","src":"3521:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"3468:43:17"},"nodeType":"YulFunctionCall","src":"3468:72:17"},"nodeType":"YulExpressionStatement","src":"3468:72:17"}]},"name":"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3305:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"3317:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3325:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3336:4:17","type":""}],"src":"3215:332:17"}]},"contents":"{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address_payable(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_payable_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address_payable(value))\n    }\n\n    function abi_encode_tuple_t_address_payable__to_t_address_payable__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_payable_to_t_address_payable_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8(memPtr) {\n\n        mstore(add(memPtr, 0), \"You can't withdraw yet\")\n\n    }\n\n    function abi_encode_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_09be2a1d7c98765b8c1bd9ab3700b54ab19d501eebe572af39b71382f17d12e8_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a(memPtr) {\n\n        mstore(add(memPtr, 0), \"You aren't the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_345d93c1110e55177ee5f687f392a2e775da2aa3d491c8308e925f0505e3530a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100415760003560e01c8063251c1aa3146100465780633ccfd60b146100645780638da5cb5b1461006e575b600080fd5b61004e61008c565b60405161005b919061024a565b60405180910390f35b61006c610092565b005b61007661020b565b60405161008391906102a6565b60405180910390f35b60005481565b6000544210156100d7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100ce9061031e565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610167576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015e9061038a565b60405180910390fd5b7fbf2ed60bd5b5965d685680c01195c9514e4382e28e3a5a2d2d5244bf59411b9347426040516101989291906103aa565b60405180910390a1600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610208573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000819050919050565b61024481610231565b82525050565b600060208201905061025f600083018461023b565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061029082610265565b9050919050565b6102a081610285565b82525050565b60006020820190506102bb6000830184610297565b92915050565b600082825260208201905092915050565b7f596f752063616e27742077697468647261772079657400000000000000000000600082015250565b60006103086016836102c1565b9150610313826102d2565b602082019050919050565b60006020820190508181036000830152610337816102fb565b9050919050565b7f596f75206172656e277420746865206f776e6572000000000000000000000000600082015250565b60006103746014836102c1565b915061037f8261033e565b602082019050919050565b600060208201905081810360008301526103a381610367565b9050919050565b60006040820190506103bf600083018561023b565b6103cc602083018461023b565b939250505056fea2646970667358221220def00297447773aa4f9c2d566c4afacd3ef428da821a43cbf8b915cadc477ef064736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x251C1AA3 EQ PUSH2 0x46 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x64 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x6E JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x4E PUSH2 0x8C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B SWAP2 SWAP1 PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x6C PUSH2 0x92 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x76 PUSH2 0x20B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x83 SWAP2 SWAP1 PUSH2 0x2A6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD TIMESTAMP LT ISZERO PUSH2 0xD7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCE SWAP1 PUSH2 0x31E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x167 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15E SWAP1 PUSH2 0x38A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xBF2ED60BD5B5965D685680C01195C9514E4382E28E3A5A2D2D5244BF59411B93 SELFBALANCE TIMESTAMP PUSH1 0x40 MLOAD PUSH2 0x198 SWAP3 SWAP2 SWAP1 PUSH2 0x3AA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x208 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x244 DUP2 PUSH2 0x231 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x23B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x290 DUP3 PUSH2 0x265 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2A0 DUP2 PUSH2 0x285 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2BB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x297 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x596F752063616E27742077697468647261772079657400000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x308 PUSH1 0x16 DUP4 PUSH2 0x2C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x313 DUP3 PUSH2 0x2D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x337 DUP2 PUSH2 0x2FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x596F75206172656E277420746865206F776E6572000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x374 PUSH1 0x14 DUP4 PUSH2 0x2C1 JUMP JUMPDEST SWAP2 POP PUSH2 0x37F DUP3 PUSH2 0x33E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A3 DUP2 PUSH2 0x367 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x3BF PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x23B JUMP JUMPDEST PUSH2 0x3CC PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x23B JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDE CREATE MUL SWAP8 DIFFICULTY PUSH24 0x73AA4F9C2D566C4AFACD3EF428DA821A43CBF8B915CADC47 PUSH31 0xF064736F6C6343000809003300000000000000000000000000000000000000 ","sourceMap":"140:866:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;160:22;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;514:490;;;:::i;:::-;;188:28;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;160:22;;;;:::o;514:490::-;784:10;;765:15;:29;;757:64;;;;;;;;;;;;:::i;:::-;;;;;;;;;853:5;;;;;;;;;;;839:19;;:10;:19;;;831:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;899:50;910:21;933:15;899:50;;;;;;;:::i;:::-;;;;;;;;960:5;;;;;;;;;;;:14;;:37;975:21;960:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;514:490::o;188:28::-;;;;;;;;;;;;;:::o;7:77:17:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:126::-;479:7;519:42;512:5;508:54;497:65;;442:126;;;:::o;574:104::-;619:7;648:24;666:5;648:24;:::i;:::-;637:35;;574:104;;;:::o;684:142::-;787:32;813:5;787:32;:::i;:::-;782:3;775:45;684:142;;:::o;832:254::-;941:4;979:2;968:9;964:18;956:26;;992:87;1076:1;1065:9;1061:17;1052:6;992:87;:::i;:::-;832:254;;;;:::o;1092:169::-;1176:11;1210:6;1205:3;1198:19;1250:4;1245:3;1241:14;1226:29;;1092:169;;;;:::o;1267:172::-;1407:24;1403:1;1395:6;1391:14;1384:48;1267:172;:::o;1445:366::-;1587:3;1608:67;1672:2;1667:3;1608:67;:::i;:::-;1601:74;;1684:93;1773:3;1684:93;:::i;:::-;1802:2;1797:3;1793:12;1786:19;;1445:366;;;:::o;1817:419::-;1983:4;2021:2;2010:9;2006:18;1998:26;;2070:9;2064:4;2060:20;2056:1;2045:9;2041:17;2034:47;2098:131;2224:4;2098:131;:::i;:::-;2090:139;;1817:419;;;:::o;2242:170::-;2382:22;2378:1;2370:6;2366:14;2359:46;2242:170;:::o;2418:366::-;2560:3;2581:67;2645:2;2640:3;2581:67;:::i;:::-;2574:74;;2657:93;2746:3;2657:93;:::i;:::-;2775:2;2770:3;2766:12;2759:19;;2418:366;;;:::o;2790:419::-;2956:4;2994:2;2983:9;2979:18;2971:26;;3043:9;3037:4;3033:20;3029:1;3018:9;3014:17;3007:47;3071:131;3197:4;3071:131;:::i;:::-;3063:139;;2790:419;;;:::o;3215:332::-;3336:4;3374:2;3363:9;3359:18;3351:26;;3387:71;3455:1;3444:9;3440:17;3431:6;3387:71;:::i;:::-;3468:72;3536:2;3525:9;3521:18;3512:6;3468:72;:::i;:::-;3215:332;;;;;:::o"},"methodIdentifiers":{"owner()":"8da5cb5b","unlockTime()":"251c1aa3","withdraw()":"3ccfd60b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_unlockTime\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"when\",\"type\":\"uint256\"}],\"name\":\"Withdrawal\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unlockTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Lock.sol\":\"Lock\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/Lock.sol\":{\"keccak256\":\"0x4d0f79e4b9fa4dd45dc835bb7eaf2762bc6964eee20530d840033245e67890d0\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://177a5bb6ec97cf5f54ae9516d8a337e4e89377cbc5196f4e60e4abe854f69a39\",\"dweb:/ipfs/Qmd3NmYM7q6ZAbzMreDycUZJZaVqhq53Z42LP3N7nGG37V\"]}},\"version\":1}"}},"contracts/allowances.sol":{"Allowances":{"abi":[{"inputs":[{"internalType":"bytes32","name":"currency","type":"bytes32"}],"name":"addressCurrency","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allCurrenciesAllowed","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"608060405234801561001057600080fd5b506104a2806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806346da743e1461003b578063a8ca9f681461006b575b600080fd5b61005560048036038101906100509190610223565b610089565b6040516100629190610291565b60405180910390f35b6100736100c5565b604051610080919061036a565b60405180910390f35b600080600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b606060006100d36001610180565b905060008167ffffffffffffffff8111156100f1576100f061038c565b5b60405190808252806020026020018201604052801561011f5781602001602082028036833780820191505090505b50905060005b8281101561017757600061014382600161019590919063ffffffff16565b905080838381518110610159576101586103bb565b5b602002602001018181525050508061017090610423565b9050610125565b50809250505090565b600061018e826000016101ac565b9050919050565b60006101a483600001836101bd565b905092915050565b600081600001805490509050919050565b60008260000182815481106101d5576101d46103bb565b5b9060005260206000200154905092915050565b600080fd5b6000819050919050565b610200816101ed565b811461020b57600080fd5b50565b60008135905061021d816101f7565b92915050565b600060208284031215610239576102386101e8565b5b60006102478482850161020e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061027b82610250565b9050919050565b61028b81610270565b82525050565b60006020820190506102a66000830184610282565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6102e1816101ed565b82525050565b60006102f383836102d8565b60208301905092915050565b6000602082019050919050565b6000610317826102ac565b61032181856102b7565b935061032c836102c8565b8060005b8381101561035d57815161034488826102e7565b975061034f836102ff565b925050600181019050610330565b5085935050505092915050565b60006020820190508181036000830152610384818461030c565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061042e82610419565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610461576104606103ea565b5b60018201905091905056fea26469706673582212200554146d77329bf3d9da43de4780015cedd518fa5e4e188c64acceab824e433064736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A2 DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x46DA743E EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA8CA9F68 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x223 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xD3 PUSH1 0x1 PUSH2 0x180 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x38C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 PUSH2 0x143 DUP3 PUSH1 0x1 PUSH2 0x195 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x159 JUMPI PUSH2 0x158 PUSH2 0x3BB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP DUP1 PUSH2 0x170 SWAP1 PUSH2 0x423 JUMP JUMPDEST SWAP1 POP PUSH2 0x125 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E DUP3 PUSH1 0x0 ADD PUSH2 0x1AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x1BD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D5 JUMPI PUSH2 0x1D4 PUSH2 0x3BB JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x200 DUP2 PUSH2 0x1ED JUMP JUMPDEST DUP2 EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21D DUP2 PUSH2 0x1F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x239 JUMPI PUSH2 0x238 PUSH2 0x1E8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x247 DUP5 DUP3 DUP6 ADD PUSH2 0x20E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP3 PUSH2 0x250 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28B DUP2 PUSH2 0x270 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x282 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E1 DUP2 PUSH2 0x1ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F3 DUP4 DUP4 PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x321 DUP2 DUP6 PUSH2 0x2B7 JUMP JUMPDEST SWAP4 POP PUSH2 0x32C DUP4 PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35D JUMPI DUP2 MLOAD PUSH2 0x344 DUP9 DUP3 PUSH2 0x2E7 JUMP JUMPDEST SWAP8 POP PUSH2 0x34F DUP4 PUSH2 0x2FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x330 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x384 DUP2 DUP5 PUSH2 0x30C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42E DUP3 PUSH2 0x419 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x461 JUMPI PUSH2 0x460 PUSH2 0x3EA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV SLOAD EQ PUSH14 0x77329BF3D9DA43DE4780015CEDD5 XOR STATICCALL 0x5E 0x4E XOR DUP13 PUSH5 0xACCEAB824E NUMBER ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"187:1678:14:-:0;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_at_2476":{"entryPoint":445,"id":2476,"parameterSlots":2,"returnSlots":1},"@_length_2459":{"entryPoint":428,"id":2459,"parameterSlots":1,"returnSlots":1},"@addressCurrency_3096":{"entryPoint":137,"id":3096,"parameterSlots":1,"returnSlots":1},"@allCurrenciesAllowed_3165":{"entryPoint":197,"id":3165,"parameterSlots":0,"returnSlots":1},"@at_2581":{"entryPoint":405,"id":2581,"parameterSlots":2,"returnSlots":1},"@length_2563":{"entryPoint":384,"id":2563,"parameterSlots":1,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":526,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":547,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":743,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":642,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":780,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":728,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":657,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":874,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_unbounded":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":712,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":684,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":767,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":695,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":624,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":493,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":592,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":1049,"id":null,"parameterSlots":1,"returnSlots":1},"increment_t_uint256":{"entryPoint":1059,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":1002,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":955,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":908,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":null,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":488,"id":null,"parameterSlots":0,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":503,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:4501:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"379:32:17","statements":[{"nodeType":"YulAssignment","src":"389:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"400:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:17"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:17","type":""}],"src":"334:77:17"},{"body":{"nodeType":"YulBlock","src":"460:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"517:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"526:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"529:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"519:6:17"},"nodeType":"YulFunctionCall","src":"519:12:17"},"nodeType":"YulExpressionStatement","src":"519:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"483:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"508:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"490:17:17"},"nodeType":"YulFunctionCall","src":"490:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"480:2:17"},"nodeType":"YulFunctionCall","src":"480:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"473:6:17"},"nodeType":"YulFunctionCall","src":"473:43:17"},"nodeType":"YulIf","src":"470:63:17"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"453:5:17","type":""}],"src":"417:122:17"},{"body":{"nodeType":"YulBlock","src":"597:87:17","statements":[{"nodeType":"YulAssignment","src":"607:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"629:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"616:12:17"},"nodeType":"YulFunctionCall","src":"616:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"607:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"672:5:17"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"645:26:17"},"nodeType":"YulFunctionCall","src":"645:33:17"},"nodeType":"YulExpressionStatement","src":"645:33:17"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"575:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"583:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"591:5:17","type":""}],"src":"545:139:17"},{"body":{"nodeType":"YulBlock","src":"756:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"802:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"804:77:17"},"nodeType":"YulFunctionCall","src":"804:79:17"},"nodeType":"YulExpressionStatement","src":"804:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"777:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"786:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"773:3:17"},"nodeType":"YulFunctionCall","src":"773:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"798:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"769:3:17"},"nodeType":"YulFunctionCall","src":"769:32:17"},"nodeType":"YulIf","src":"766:119:17"},{"nodeType":"YulBlock","src":"895:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"910:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"924:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"914:6:17","type":""}]},{"nodeType":"YulAssignment","src":"939:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"974:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"985:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"970:3:17"},"nodeType":"YulFunctionCall","src":"970:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"994:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"949:20:17"},"nodeType":"YulFunctionCall","src":"949:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"939:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"726:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"737:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"749:6:17","type":""}],"src":"690:329:17"},{"body":{"nodeType":"YulBlock","src":"1070:81:17","statements":[{"nodeType":"YulAssignment","src":"1080:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1095:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"1102:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"1091:3:17"},"nodeType":"YulFunctionCall","src":"1091:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1080:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1052:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1062:7:17","type":""}],"src":"1025:126:17"},{"body":{"nodeType":"YulBlock","src":"1202:51:17","statements":[{"nodeType":"YulAssignment","src":"1212:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1241:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"1223:17:17"},"nodeType":"YulFunctionCall","src":"1223:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1212:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1184:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1194:7:17","type":""}],"src":"1157:96:17"},{"body":{"nodeType":"YulBlock","src":"1324:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1341:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1364:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1346:17:17"},"nodeType":"YulFunctionCall","src":"1346:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1334:6:17"},"nodeType":"YulFunctionCall","src":"1334:37:17"},"nodeType":"YulExpressionStatement","src":"1334:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1312:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1319:3:17","type":""}],"src":"1259:118:17"},{"body":{"nodeType":"YulBlock","src":"1481:124:17","statements":[{"nodeType":"YulAssignment","src":"1491:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1503:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1514:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1499:3:17"},"nodeType":"YulFunctionCall","src":"1499:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1491:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1571:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1584:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1595:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1580:3:17"},"nodeType":"YulFunctionCall","src":"1580:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"1527:43:17"},"nodeType":"YulFunctionCall","src":"1527:71:17"},"nodeType":"YulExpressionStatement","src":"1527:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1453:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1465:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1476:4:17","type":""}],"src":"1383:222:17"},{"body":{"nodeType":"YulBlock","src":"1685:40:17","statements":[{"nodeType":"YulAssignment","src":"1696:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1712:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1706:5:17"},"nodeType":"YulFunctionCall","src":"1706:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1696:6:17"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1668:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1678:6:17","type":""}],"src":"1611:114:17"},{"body":{"nodeType":"YulBlock","src":"1842:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1859:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1864:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1852:6:17"},"nodeType":"YulFunctionCall","src":"1852:19:17"},"nodeType":"YulExpressionStatement","src":"1852:19:17"},{"nodeType":"YulAssignment","src":"1880:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1899:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"1904:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1895:3:17"},"nodeType":"YulFunctionCall","src":"1895:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"1880:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"1814:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1819:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"1830:11:17","type":""}],"src":"1731:184:17"},{"body":{"nodeType":"YulBlock","src":"1993:60:17","statements":[{"nodeType":"YulAssignment","src":"2003:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"2011:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2003:4:17"}]},{"nodeType":"YulAssignment","src":"2024:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2036:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2041:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2032:3:17"},"nodeType":"YulFunctionCall","src":"2032:14:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"2024:4:17"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"1980:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"1988:4:17","type":""}],"src":"1921:132:17"},{"body":{"nodeType":"YulBlock","src":"2114:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2131:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2154:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2136:17:17"},"nodeType":"YulFunctionCall","src":"2136:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2124:6:17"},"nodeType":"YulFunctionCall","src":"2124:37:17"},"nodeType":"YulExpressionStatement","src":"2124:37:17"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2102:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2109:3:17","type":""}],"src":"2059:108:17"},{"body":{"nodeType":"YulBlock","src":"2253:99:17","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2297:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"2305:3:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"2263:33:17"},"nodeType":"YulFunctionCall","src":"2263:46:17"},"nodeType":"YulExpressionStatement","src":"2263:46:17"},{"nodeType":"YulAssignment","src":"2318:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2336:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2341:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2332:3:17"},"nodeType":"YulFunctionCall","src":"2332:14:17"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"2318:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"2226:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2234:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"2242:10:17","type":""}],"src":"2173:179:17"},{"body":{"nodeType":"YulBlock","src":"2433:38:17","statements":[{"nodeType":"YulAssignment","src":"2443:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"2455:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"2460:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2451:3:17"},"nodeType":"YulFunctionCall","src":"2451:14:17"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"2443:4:17"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"2420:3:17","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"2428:4:17","type":""}],"src":"2358:113:17"},{"body":{"nodeType":"YulBlock","src":"2631:608:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2641:68:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2703:5:17"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2655:47:17"},"nodeType":"YulFunctionCall","src":"2655:54:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2645:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2718:93:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2799:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2804:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"2725:73:17"},"nodeType":"YulFunctionCall","src":"2725:86:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2718:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"2820:71:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2885:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"2835:49:17"},"nodeType":"YulFunctionCall","src":"2835:56:17"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"2824:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"2900:21:17","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"2914:7:17"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"2904:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2990:224:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3004:34:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3031:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3025:5:17"},"nodeType":"YulFunctionCall","src":"3025:13:17"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"3008:13:17","type":""}]},{"nodeType":"YulAssignment","src":"3051:70:17","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"3102:13:17"},{"name":"pos","nodeType":"YulIdentifier","src":"3117:3:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"3058:43:17"},"nodeType":"YulFunctionCall","src":"3058:63:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"3051:3:17"}]},{"nodeType":"YulAssignment","src":"3134:70:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3197:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"3144:52:17"},"nodeType":"YulFunctionCall","src":"3144:60:17"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"3134:6:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2952:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"2955:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2949:2:17"},"nodeType":"YulFunctionCall","src":"2949:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2963:18:17","statements":[{"nodeType":"YulAssignment","src":"2965:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2974:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"2977:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2970:3:17"},"nodeType":"YulFunctionCall","src":"2970:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2965:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"2934:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2936:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2945:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2940:1:17","type":""}]}]},"src":"2930:284:17"},{"nodeType":"YulAssignment","src":"3223:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"3230:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"3223:3:17"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2610:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2617:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2626:3:17","type":""}],"src":"2507:732:17"},{"body":{"nodeType":"YulBlock","src":"3393:225:17","statements":[{"nodeType":"YulAssignment","src":"3403:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3415:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3426:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3411:3:17"},"nodeType":"YulFunctionCall","src":"3411:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3403:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3450:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3461:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3446:3:17"},"nodeType":"YulFunctionCall","src":"3446:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"3469:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"3475:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"3465:3:17"},"nodeType":"YulFunctionCall","src":"3465:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3439:6:17"},"nodeType":"YulFunctionCall","src":"3439:47:17"},"nodeType":"YulExpressionStatement","src":"3439:47:17"},{"nodeType":"YulAssignment","src":"3495:116:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3597:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"3606:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"3503:93:17"},"nodeType":"YulFunctionCall","src":"3503:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"3495:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"3365:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"3377:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"3388:4:17","type":""}],"src":"3245:373:17"},{"body":{"nodeType":"YulBlock","src":"3652:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3669:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3672:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3662:6:17"},"nodeType":"YulFunctionCall","src":"3662:88:17"},"nodeType":"YulExpressionStatement","src":"3662:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3766:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3769:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3759:6:17"},"nodeType":"YulFunctionCall","src":"3759:15:17"},"nodeType":"YulExpressionStatement","src":"3759:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3790:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3793:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3783:6:17"},"nodeType":"YulFunctionCall","src":"3783:15:17"},"nodeType":"YulExpressionStatement","src":"3783:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3624:180:17"},{"body":{"nodeType":"YulBlock","src":"3838:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3855:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3858:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3848:6:17"},"nodeType":"YulFunctionCall","src":"3848:88:17"},"nodeType":"YulExpressionStatement","src":"3848:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3952:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3955:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3945:6:17"},"nodeType":"YulFunctionCall","src":"3945:15:17"},"nodeType":"YulExpressionStatement","src":"3945:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3976:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3979:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3969:6:17"},"nodeType":"YulFunctionCall","src":"3969:15:17"},"nodeType":"YulExpressionStatement","src":"3969:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"3810:180:17"},{"body":{"nodeType":"YulBlock","src":"4024:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4041:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4044:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4034:6:17"},"nodeType":"YulFunctionCall","src":"4034:88:17"},"nodeType":"YulExpressionStatement","src":"4034:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4138:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"4141:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4131:6:17"},"nodeType":"YulFunctionCall","src":"4131:15:17"},"nodeType":"YulExpressionStatement","src":"4131:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"4162:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"4165:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"4155:6:17"},"nodeType":"YulFunctionCall","src":"4155:15:17"},"nodeType":"YulExpressionStatement","src":"4155:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"3996:180:17"},{"body":{"nodeType":"YulBlock","src":"4227:32:17","statements":[{"nodeType":"YulAssignment","src":"4237:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"4248:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"4237:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4209:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"4219:7:17","type":""}],"src":"4182:77:17"},{"body":{"nodeType":"YulBlock","src":"4308:190:17","statements":[{"nodeType":"YulAssignment","src":"4318:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4345:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"4327:17:17"},"nodeType":"YulFunctionCall","src":"4327:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"4318:5:17"}]},{"body":{"nodeType":"YulBlock","src":"4441:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"4443:16:17"},"nodeType":"YulFunctionCall","src":"4443:18:17"},"nodeType":"YulExpressionStatement","src":"4443:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4366:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4373:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"4363:2:17"},"nodeType":"YulFunctionCall","src":"4363:77:17"},"nodeType":"YulIf","src":"4360:103:17"},{"nodeType":"YulAssignment","src":"4472:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4483:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4490:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4479:3:17"},"nodeType":"YulFunctionCall","src":"4479:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"4472:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4294:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"4304:3:17","type":""}],"src":"4265:233:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100365760003560e01c806346da743e1461003b578063a8ca9f681461006b575b600080fd5b61005560048036038101906100509190610223565b610089565b6040516100629190610291565b60405180910390f35b6100736100c5565b604051610080919061036a565b60405180910390f35b600080600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b606060006100d36001610180565b905060008167ffffffffffffffff8111156100f1576100f061038c565b5b60405190808252806020026020018201604052801561011f5781602001602082028036833780820191505090505b50905060005b8281101561017757600061014382600161019590919063ffffffff16565b905080838381518110610159576101586103bb565b5b602002602001018181525050508061017090610423565b9050610125565b50809250505090565b600061018e826000016101ac565b9050919050565b60006101a483600001836101bd565b905092915050565b600081600001805490509050919050565b60008260000182815481106101d5576101d46103bb565b5b9060005260206000200154905092915050565b600080fd5b6000819050919050565b610200816101ed565b811461020b57600080fd5b50565b60008135905061021d816101f7565b92915050565b600060208284031215610239576102386101e8565b5b60006102478482850161020e565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600061027b82610250565b9050919050565b61028b81610270565b82525050565b60006020820190506102a66000830184610282565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6102e1816101ed565b82525050565b60006102f383836102d8565b60208301905092915050565b6000602082019050919050565b6000610317826102ac565b61032181856102b7565b935061032c836102c8565b8060005b8381101561035d57815161034488826102e7565b975061034f836102ff565b925050600181019050610330565b5085935050505092915050565b60006020820190508181036000830152610384818461030c565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000819050919050565b600061042e82610419565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610461576104606103ea565b5b60018201905091905056fea26469706673582212200554146d77329bf3d9da43de4780015cedd518fa5e4e188c64acceab824e433064736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x46DA743E EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xA8CA9F68 EQ PUSH2 0x6B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x55 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x223 JUMP JUMPDEST PUSH2 0x89 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x62 SWAP2 SWAP1 PUSH2 0x291 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH2 0xC5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x80 SWAP2 SWAP1 PUSH2 0x36A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0xD3 PUSH1 0x1 PUSH2 0x180 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xF1 JUMPI PUSH2 0xF0 PUSH2 0x38C JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x11F JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x177 JUMPI PUSH1 0x0 PUSH2 0x143 DUP3 PUSH1 0x1 PUSH2 0x195 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x159 JUMPI PUSH2 0x158 PUSH2 0x3BB JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP DUP1 PUSH2 0x170 SWAP1 PUSH2 0x423 JUMP JUMPDEST SWAP1 POP PUSH2 0x125 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18E DUP3 PUSH1 0x0 ADD PUSH2 0x1AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A4 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x1BD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1D5 JUMPI PUSH2 0x1D4 PUSH2 0x3BB JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x200 DUP2 PUSH2 0x1ED JUMP JUMPDEST DUP2 EQ PUSH2 0x20B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x21D DUP2 PUSH2 0x1F7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x239 JUMPI PUSH2 0x238 PUSH2 0x1E8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x247 DUP5 DUP3 DUP6 ADD PUSH2 0x20E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x27B DUP3 PUSH2 0x250 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28B DUP2 PUSH2 0x270 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2A6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x282 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2E1 DUP2 PUSH2 0x1ED JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F3 DUP4 DUP4 PUSH2 0x2D8 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x317 DUP3 PUSH2 0x2AC JUMP JUMPDEST PUSH2 0x321 DUP2 DUP6 PUSH2 0x2B7 JUMP JUMPDEST SWAP4 POP PUSH2 0x32C DUP4 PUSH2 0x2C8 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x35D JUMPI DUP2 MLOAD PUSH2 0x344 DUP9 DUP3 PUSH2 0x2E7 JUMP JUMPDEST SWAP8 POP PUSH2 0x34F DUP4 PUSH2 0x2FF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x330 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x384 DUP2 DUP5 PUSH2 0x30C JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42E DUP3 PUSH2 0x419 JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x461 JUMPI PUSH2 0x460 PUSH2 0x3EA JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SDIV SLOAD EQ PUSH14 0x77329BF3D9DA43DE4780015CEDD5 XOR STATICCALL 0x5E 0x4E XOR DUP13 PUSH5 0xACCEAB824E NUMBER ADDRESS PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"187:1678:14:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;892:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1279:401;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;892:124;955:7;982:16;:26;999:8;982:26;;;;;;;;;;;;;;;;;;;;;975:33;;892:124;;;:::o;1279:401::-;1331:16;1360;1379:25;:16;:23;:25::i;:::-;1360:44;;1415:27;1459:8;1445:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1415:53;;1484:13;1479:166;1511:8;1503:5;:16;1479:166;;;1545:16;1564:26;1584:5;1564:16;:19;;:26;;;;:::i;:::-;1545:45;;1625:8;1605:10;1616:5;1605:17;;;;;;;;:::i;:::-;;;;;;;:28;;;;;1530:115;1521:7;;;;:::i;:::-;;;1479:166;;;;1662:10;1655:17;;;;1279:401;:::o;6631:115:11:-;6694:7;6720:19;6728:3;:10;;6720:7;:19::i;:::-;6713:26;;6631:115;;;:::o;7088:129::-;7162:7;7188:22;7192:3;:10;;7204:5;7188:3;:22::i;:::-;7181:29;;7088:129;;;;:::o;4455:107::-;4511:7;4537:3;:11;;:18;;;;4530:25;;4455:107;;;:::o;4904:118::-;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;;4990:25;;4904:118;;;;:::o;88:117:17:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:126::-;1062:7;1102:42;1095:5;1091:54;1080:65;;1025:126;;;:::o;1157:96::-;1194:7;1223:24;1241:5;1223:24;:::i;:::-;1212:35;;1157:96;;;:::o;1259:118::-;1346:24;1364:5;1346:24;:::i;:::-;1341:3;1334:37;1259:118;;:::o;1383:222::-;1476:4;1514:2;1503:9;1499:18;1491:26;;1527:71;1595:1;1584:9;1580:17;1571:6;1527:71;:::i;:::-;1383:222;;;;:::o;1611:114::-;1678:6;1712:5;1706:12;1696:22;;1611:114;;;:::o;1731:184::-;1830:11;1864:6;1859:3;1852:19;1904:4;1899:3;1895:14;1880:29;;1731:184;;;;:::o;1921:132::-;1988:4;2011:3;2003:11;;2041:4;2036:3;2032:14;2024:22;;1921:132;;;:::o;2059:108::-;2136:24;2154:5;2136:24;:::i;:::-;2131:3;2124:37;2059:108;;:::o;2173:179::-;2242:10;2263:46;2305:3;2297:6;2263:46;:::i;:::-;2341:4;2336:3;2332:14;2318:28;;2173:179;;;;:::o;2358:113::-;2428:4;2460;2455:3;2451:14;2443:22;;2358:113;;;:::o;2507:732::-;2626:3;2655:54;2703:5;2655:54;:::i;:::-;2725:86;2804:6;2799:3;2725:86;:::i;:::-;2718:93;;2835:56;2885:5;2835:56;:::i;:::-;2914:7;2945:1;2930:284;2955:6;2952:1;2949:13;2930:284;;;3031:6;3025:13;3058:63;3117:3;3102:13;3058:63;:::i;:::-;3051:70;;3144:60;3197:6;3144:60;:::i;:::-;3134:70;;2990:224;2977:1;2974;2970:9;2965:14;;2930:284;;;2934:14;3230:3;3223:10;;2631:608;;;2507:732;;;;:::o;3245:373::-;3388:4;3426:2;3415:9;3411:18;3403:26;;3475:9;3469:4;3465:20;3461:1;3450:9;3446:17;3439:47;3503:108;3606:4;3597:6;3503:108;:::i;:::-;3495:116;;3245:373;;;;:::o;3624:180::-;3672:77;3669:1;3662:88;3769:4;3766:1;3759:15;3793:4;3790:1;3783:15;3810:180;3858:77;3855:1;3848:88;3955:4;3952:1;3945:15;3979:4;3976:1;3969:15;3996:180;4044:77;4041:1;4034:88;4141:4;4138:1;4131:15;4165:4;4162:1;4155:15;4182:77;4219:7;4248:5;4237:16;;4182:77;;;:::o;4265:233::-;4304:3;4327:24;4345:5;4327:24;:::i;:::-;4318:33;;4373:66;4366:5;4363:77;4360:103;;;4443:18;;:::i;:::-;4360:103;4490:1;4483:5;4479:13;4472:20;;4265:233;;;:::o"},"methodIdentifiers":{"addressCurrency(bytes32)":"46da743e","allCurrenciesAllowed()":"a8ca9f68"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"currency\",\"type\":\"bytes32\"}],\"name\":\"addressCurrency\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allCurrenciesAllowed\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allCurrenciesAllowed()\":{\"details\":\"use this function to get all erc20 allowed as payment method in the contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/allowances.sol\":\"Allowances\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"contracts/allowances.sol\":{\"keccak256\":\"0xcf7e7770ba68ec5e825d096e34da08bcdc5d767a9a817f14e6de889cfb6025b8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8bed24691840052a78948815ae801e010dcd49e4a6f69de7ddb4ad883bb9c767\",\"dweb:/ipfs/QmRbE8ywn3yvT58UWZ2ga5z7WRYn9FuRfi1UNNzicbeuFM\"]}},\"version\":1}"}},"contracts/tradingInCrypto.sol":{"tradingInCrypto":{"abi":[{"inputs":[{"internalType":"string","name":"uri","type":"string"}],"stateMutability":"nonpayable","type":"constructor"},{"inputs":[],"name":"AllReadyAgreed","type":"error"},{"inputs":[],"name":"AlreadyAddedBL","type":"error"},{"inputs":[],"name":"CurrencyNotAllowed","type":"error"},{"inputs":[],"name":"InvalidBuyer","type":"error"},{"inputs":[],"name":"InvalidCallerAddress","type":"error"},{"inputs":[],"name":"InvalidSeller","type":"error"},{"inputs":[],"name":"InvalidTradeNumber","type":"error"},{"inputs":[],"name":"InvalidTradeType","type":"error"},{"inputs":[],"name":"InvalidTrader","type":"error"},{"inputs":[],"name":"NotAcceptedYet","type":"error"},{"inputs":[],"name":"NotBLAddedYet","type":"error"},{"inputs":[],"name":"TradeCompleted","type":"error"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"previousAdminRole","type":"bytes32"},{"indexed":true,"internalType":"bytes32","name":"newAdminRole","type":"bytes32"}],"name":"RoleAdminChanged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleGranted","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"role","type":"bytes32"},{"indexed":true,"internalType":"address","name":"account","type":"address"},{"indexed":true,"internalType":"address","name":"sender","type":"address"}],"name":"RoleRevoked","type":"event"},{"inputs":[],"name":"BUYER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"DEFAULT_ADMIN_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"SELLER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"TRADER_ROLE","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"currency","type":"bytes32"},{"internalType":"address","name":"currencyAddress","type":"address"}],"name":"addCurrency","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"currency","type":"bytes32"}],"name":"addressCurrency","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tradeNumber","type":"uint256"}],"name":"agreeToTrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"allCurrenciesAllowed","outputs":[{"internalType":"bytes32[]","name":"","type":"bytes32[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"allTradingNumbers","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256[]","name":"tradingNumbers","type":"uint256[]"}],"name":"batchDetailsTrades","outputs":[{"components":[{"internalType":"uint256","name":"tradeNumber","type":"uint256"},{"internalType":"string","name":"assetName","type":"string"},{"internalType":"bytes32","name":"currency","type":"bytes32"},{"internalType":"address","name":"fromAddress","type":"address"},{"internalType":"address","name":"toAddress","type":"address"},{"internalType":"uint256","name":"totalAmount","type":"uint256"},{"internalType":"string","name":"blHash","type":"string"},{"internalType":"bool","name":"acceptTrade","type":"bool"},{"internalType":"bool","name":"verifyBl","type":"bool"},{"internalType":"uint256","name":"tradeType","type":"uint256"}],"internalType":"struct tradingInCryptoStorage.trading[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tradeNumber","type":"uint256"},{"internalType":"string","name":"assetName","type":"string"},{"internalType":"bytes32","name":"currency","type":"bytes32"},{"internalType":"address","name":"walletAddress","type":"address"},{"internalType":"uint256","name":"totalAmount","type":"uint256"},{"internalType":"uint256","name":"tradeType","type":"uint256"}],"name":"createtrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"}],"name":"getRoleAdmin","outputs":[{"internalType":"bytes32","name":"","type":"bytes32"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tradeNumber","type":"uint256"}],"name":"getTradingHash","outputs":[{"internalType":"string","name":"","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"grantRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"hasRole","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"currency","type":"bytes32"}],"name":"removeCurrency","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"renounceRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes32","name":"role","type":"bytes32"},{"internalType":"address","name":"account","type":"address"}],"name":"revokeRole","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"bytes4","name":"interfaceId","type":"bytes4"}],"name":"supportsInterface","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"totalTrades","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"index","type":"uint256"}],"name":"totalTradesNumberByIndex","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tradeNumber","type":"uint256"}],"name":"tradingDetails","outputs":[{"internalType":"uint256","name":"TradeNumber","type":"uint256"},{"internalType":"string","name":"AssetName","type":"string"},{"internalType":"bytes32","name":"Currency","type":"bytes32"},{"internalType":"address","name":"FromAddress","type":"address"},{"internalType":"address","name":"ToAddress","type":"address"},{"internalType":"uint256","name":"TotalAmount","type":"uint256"},{"internalType":"string","name":"TradeBL","type":"string"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"tradeNumber","type":"uint256"},{"internalType":"string","name":"hash","type":"string"}],"name":"updateBL","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"string","name":"uri","type":"string"}],"name":"updateBaseUri","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"tradeNumber","type":"uint256"}],"name":"verifyBL","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_3284":{"entryPoint":null,"id":3284,"parameterSlots":1,"returnSlots":0},"@_grantRole_283":{"entryPoint":258,"id":283,"parameterSlots":2,"returnSlots":0},"@_msgSender_1203":{"entryPoint":605,"id":1203,"parameterSlots":0,"returnSlots":1},"@hasRole_79":{"entryPoint":499,"id":79,"parameterSlots":2,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr_fromMemory":{"entryPoint":1076,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_string_memory_ptr_fromMemory":{"entryPoint":1151,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr_fromMemory":{"entryPoint":1202,"id":null,"parameterSlots":2,"returnSlots":1},"allocate_memory":{"entryPoint":937,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":789,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":968,"id":null,"parameterSlots":1,"returnSlots":1},"copy_memory_to_memory":{"entryPoint":1022,"id":null,"parameterSlots":3,"returnSlots":0},"extract_byte_array_length":{"entryPoint":1330,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":883,"id":null,"parameterSlots":2,"returnSlots":0},"panic_error_0x22":{"entryPoint":1283,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":836,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":809,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":814,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":804,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":799,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":819,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:3764:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"423:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"440:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"443:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"433:6:17"},"nodeType":"YulFunctionCall","src":"433:12:17"},"nodeType":"YulExpressionStatement","src":"433:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"334:117:17"},{"body":{"nodeType":"YulBlock","src":"546:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"563:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"566:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"556:6:17"},"nodeType":"YulFunctionCall","src":"556:12:17"},"nodeType":"YulExpressionStatement","src":"556:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"457:117:17"},{"body":{"nodeType":"YulBlock","src":"628:54:17","statements":[{"nodeType":"YulAssignment","src":"638:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"656:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"663:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"652:3:17"},"nodeType":"YulFunctionCall","src":"652:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"672:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"668:3:17"},"nodeType":"YulFunctionCall","src":"668:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"648:3:17"},"nodeType":"YulFunctionCall","src":"648:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"638:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"611:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"621:6:17","type":""}],"src":"580:102:17"},{"body":{"nodeType":"YulBlock","src":"716:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"733:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"736:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"726:6:17"},"nodeType":"YulFunctionCall","src":"726:88:17"},"nodeType":"YulExpressionStatement","src":"726:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"830:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"833:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"823:6:17"},"nodeType":"YulFunctionCall","src":"823:15:17"},"nodeType":"YulExpressionStatement","src":"823:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"854:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"857:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"847:6:17"},"nodeType":"YulFunctionCall","src":"847:15:17"},"nodeType":"YulExpressionStatement","src":"847:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"688:180:17"},{"body":{"nodeType":"YulBlock","src":"917:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"927:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"949:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"979:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"957:21:17"},"nodeType":"YulFunctionCall","src":"957:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"945:3:17"},"nodeType":"YulFunctionCall","src":"945:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"931:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1096:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1098:16:17"},"nodeType":"YulFunctionCall","src":"1098:18:17"},"nodeType":"YulExpressionStatement","src":"1098:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1039:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"1051:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1036:2:17"},"nodeType":"YulFunctionCall","src":"1036:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1075:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"1087:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1072:2:17"},"nodeType":"YulFunctionCall","src":"1072:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"1033:2:17"},"nodeType":"YulFunctionCall","src":"1033:62:17"},"nodeType":"YulIf","src":"1030:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1134:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"1138:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1127:6:17"},"nodeType":"YulFunctionCall","src":"1127:22:17"},"nodeType":"YulExpressionStatement","src":"1127:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"903:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"911:4:17","type":""}],"src":"874:281:17"},{"body":{"nodeType":"YulBlock","src":"1202:88:17","statements":[{"nodeType":"YulAssignment","src":"1212:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"1222:18:17"},"nodeType":"YulFunctionCall","src":"1222:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1212:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"1271:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"1279:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"1251:19:17"},"nodeType":"YulFunctionCall","src":"1251:33:17"},"nodeType":"YulExpressionStatement","src":"1251:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"1186:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"1195:6:17","type":""}],"src":"1161:129:17"},{"body":{"nodeType":"YulBlock","src":"1363:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"1468:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"1470:16:17"},"nodeType":"YulFunctionCall","src":"1470:18:17"},"nodeType":"YulExpressionStatement","src":"1470:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1440:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"1448:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1437:2:17"},"nodeType":"YulFunctionCall","src":"1437:30:17"},"nodeType":"YulIf","src":"1434:56:17"},{"nodeType":"YulAssignment","src":"1500:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"1530:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"1508:21:17"},"nodeType":"YulFunctionCall","src":"1508:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1500:4:17"}]},{"nodeType":"YulAssignment","src":"1574:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"1586:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"1592:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1582:3:17"},"nodeType":"YulFunctionCall","src":"1582:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"1574:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"1347:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"1358:4:17","type":""}],"src":"1296:308:17"},{"body":{"nodeType":"YulBlock","src":"1659:258:17","statements":[{"nodeType":"YulVariableDeclaration","src":"1669:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"1678:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"1673:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"1738:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1763:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1768:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1759:3:17"},"nodeType":"YulFunctionCall","src":"1759:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"1782:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"1787:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1778:3:17"},"nodeType":"YulFunctionCall","src":"1778:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1772:5:17"},"nodeType":"YulFunctionCall","src":"1772:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1752:6:17"},"nodeType":"YulFunctionCall","src":"1752:39:17"},"nodeType":"YulExpressionStatement","src":"1752:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1699:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1702:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"1696:2:17"},"nodeType":"YulFunctionCall","src":"1696:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"1710:19:17","statements":[{"nodeType":"YulAssignment","src":"1712:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1721:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"1724:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1717:3:17"},"nodeType":"YulFunctionCall","src":"1717:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"1712:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"1692:3:17","statements":[]},"src":"1688:113:17"},{"body":{"nodeType":"YulBlock","src":"1835:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"1885:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"1890:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1881:3:17"},"nodeType":"YulFunctionCall","src":"1881:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"1899:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1874:6:17"},"nodeType":"YulFunctionCall","src":"1874:27:17"},"nodeType":"YulExpressionStatement","src":"1874:27:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"1816:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"1819:6:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"1813:2:17"},"nodeType":"YulFunctionCall","src":"1813:13:17"},"nodeType":"YulIf","src":"1810:101:17"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1641:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"1646:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1651:6:17","type":""}],"src":"1610:307:17"},{"body":{"nodeType":"YulBlock","src":"2018:326:17","statements":[{"nodeType":"YulAssignment","src":"2028:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2095:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2053:41:17"},"nodeType":"YulFunctionCall","src":"2053:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"2037:15:17"},"nodeType":"YulFunctionCall","src":"2037:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2028:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2119:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"2126:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2112:6:17"},"nodeType":"YulFunctionCall","src":"2112:21:17"},"nodeType":"YulExpressionStatement","src":"2112:21:17"},{"nodeType":"YulVariableDeclaration","src":"2142:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"2157:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"2164:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2153:3:17"},"nodeType":"YulFunctionCall","src":"2153:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"2146:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"2207:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"2209:77:17"},"nodeType":"YulFunctionCall","src":"2209:79:17"},"nodeType":"YulExpressionStatement","src":"2209:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2188:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2193:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2184:3:17"},"nodeType":"YulFunctionCall","src":"2184:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"2202:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"2181:2:17"},"nodeType":"YulFunctionCall","src":"2181:25:17"},"nodeType":"YulIf","src":"2178:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2321:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"2326:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"2331:6:17"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"2299:21:17"},"nodeType":"YulFunctionCall","src":"2299:39:17"},"nodeType":"YulExpressionStatement","src":"2299:39:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"1991:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"1996:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2004:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2012:5:17","type":""}],"src":"1923:421:17"},{"body":{"nodeType":"YulBlock","src":"2437:282:17","statements":[{"body":{"nodeType":"YulBlock","src":"2486:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"2488:77:17"},"nodeType":"YulFunctionCall","src":"2488:79:17"},"nodeType":"YulExpressionStatement","src":"2488:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2465:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2473:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2461:3:17"},"nodeType":"YulFunctionCall","src":"2461:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"2480:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2457:3:17"},"nodeType":"YulFunctionCall","src":"2457:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2450:6:17"},"nodeType":"YulFunctionCall","src":"2450:35:17"},"nodeType":"YulIf","src":"2447:122:17"},{"nodeType":"YulVariableDeclaration","src":"2578:27:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2598:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2592:5:17"},"nodeType":"YulFunctionCall","src":"2592:13:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2582:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2614:99:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2686:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"2694:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2682:3:17"},"nodeType":"YulFunctionCall","src":"2682:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"2701:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"2709:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"2623:58:17"},"nodeType":"YulFunctionCall","src":"2623:90:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"2614:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2415:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2423:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"2431:5:17","type":""}],"src":"2364:355:17"},{"body":{"nodeType":"YulBlock","src":"2812:437:17","statements":[{"body":{"nodeType":"YulBlock","src":"2858:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"2860:77:17"},"nodeType":"YulFunctionCall","src":"2860:79:17"},"nodeType":"YulExpressionStatement","src":"2860:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"2833:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"2842:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"2829:3:17"},"nodeType":"YulFunctionCall","src":"2829:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"2854:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"2825:3:17"},"nodeType":"YulFunctionCall","src":"2825:32:17"},"nodeType":"YulIf","src":"2822:119:17"},{"nodeType":"YulBlock","src":"2951:291:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2966:38:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2990:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"3001:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2986:3:17"},"nodeType":"YulFunctionCall","src":"2986:17:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2980:5:17"},"nodeType":"YulFunctionCall","src":"2980:24:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2970:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3051:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"3053:77:17"},"nodeType":"YulFunctionCall","src":"3053:79:17"},"nodeType":"YulExpressionStatement","src":"3053:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"3023:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3031:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3020:2:17"},"nodeType":"YulFunctionCall","src":"3020:30:17"},"nodeType":"YulIf","src":"3017:117:17"},{"nodeType":"YulAssignment","src":"3148:84:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"3204:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"3215:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3200:3:17"},"nodeType":"YulFunctionCall","src":"3200:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"3224:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr_fromMemory","nodeType":"YulIdentifier","src":"3158:41:17"},"nodeType":"YulFunctionCall","src":"3158:74:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"3148:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2782:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"2793:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"2805:6:17","type":""}],"src":"2725:524:17"},{"body":{"nodeType":"YulBlock","src":"3283:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3300:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3303:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3293:6:17"},"nodeType":"YulFunctionCall","src":"3293:88:17"},"nodeType":"YulExpressionStatement","src":"3293:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3397:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3400:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3390:6:17"},"nodeType":"YulFunctionCall","src":"3390:15:17"},"nodeType":"YulExpressionStatement","src":"3390:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3421:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3424:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3414:6:17"},"nodeType":"YulFunctionCall","src":"3414:15:17"},"nodeType":"YulExpressionStatement","src":"3414:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"3255:180:17"},{"body":{"nodeType":"YulBlock","src":"3492:269:17","statements":[{"nodeType":"YulAssignment","src":"3502:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3516:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3522:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"3512:3:17"},"nodeType":"YulFunctionCall","src":"3512:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3502:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"3533:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"3563:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"3569:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3559:3:17"},"nodeType":"YulFunctionCall","src":"3559:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"3537:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3610:51:17","statements":[{"nodeType":"YulAssignment","src":"3624:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3638:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3646:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3634:3:17"},"nodeType":"YulFunctionCall","src":"3634:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3624:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3590:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"3583:6:17"},"nodeType":"YulFunctionCall","src":"3583:26:17"},"nodeType":"YulIf","src":"3580:81:17"},{"body":{"nodeType":"YulBlock","src":"3713:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"3727:16:17"},"nodeType":"YulFunctionCall","src":"3727:18:17"},"nodeType":"YulExpressionStatement","src":"3727:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"3677:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"3700:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"3708:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3697:2:17"},"nodeType":"YulFunctionCall","src":"3697:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"3674:2:17"},"nodeType":"YulFunctionCall","src":"3674:38:17"},"nodeType":"YulIf","src":"3671:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"3476:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3485:6:17","type":""}],"src":"3441:320:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr_fromMemory(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_memory_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr_fromMemory(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := mload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr_fromMemory(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := mload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5060405162003eea38038062003eea8339818101604052810190620000379190620004b2565b80600790805190602001906200004f92919062000265565b50620000656000801b336200010260201b60201c565b620000977f43f25613eb2f15fb17222a5d424ca2655743e71265d98e4b93c05e5fb589ecde336200010260201b60201c565b620000c97ffacaf2747a7486cf5730e9265973fb54447d3ace6e7e4711f6360826b0731941336200010260201b60201c565b620000fb7ff8cd32ed93fc2f9fc78152a14807c9609af3d99c5fe4dc6b106a801aaddfe90e336200010260201b60201c565b5062000568565b620001148282620001f360201b60201c565b620001ef57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550620001946200025d60201b60201c565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b600033905090565b828054620002739062000532565b90600052602060002090601f016020900481019282620002975760008555620002e3565b82601f10620002b257805160ff1916838001178555620002e3565b82800160010185558215620002e3579182015b82811115620002e2578251825591602001919060010190620002c5565b5b509050620002f29190620002f6565b5090565b5b8082111562000311576000816000905550600101620002f7565b5090565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6200037e8262000333565b810181811067ffffffffffffffff82111715620003a0576200039f62000344565b5b80604052505050565b6000620003b562000315565b9050620003c3828262000373565b919050565b600067ffffffffffffffff821115620003e657620003e562000344565b5b620003f18262000333565b9050602081019050919050565b60005b838110156200041e57808201518184015260208101905062000401565b838111156200042e576000848401525b50505050565b60006200044b6200044584620003c8565b620003a9565b9050828152602081018484840111156200046a57620004696200032e565b5b62000477848285620003fe565b509392505050565b600082601f83011262000497576200049662000329565b5b8151620004a984826020860162000434565b91505092915050565b600060208284031215620004cb57620004ca6200031f565b5b600082015167ffffffffffffffff811115620004ec57620004eb62000324565b5b620004fa848285016200047f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806200054b57607f821691505b6020821081141562000562576200056162000503565b5b50919050565b61397280620005786000396000f3fe608060405234801561001057600080fd5b50600436106101735760003560e01c8063954679da116100de578063c47d62bd11610097578063dbe4613d11610071578063dbe4613d14610472578063e275c99714610490578063efd4ad5a146104ae578063f0a56fc8146104ca57610173565b8063c47d62bd1461041c578063c7d63a131461043a578063d547741f1461045657610173565b8063954679da1461032e578063a217fddf1461035e578063a4a591b71461037c578063a8ca9f68146103ac578063af4a9fe5146103ca578063b4b83e931461040057610173565b80633d1d6a7f116101305780633d1d6a7f14610248578063437860141461026457806346da743e14610280578063770994d0146102b05780637a01a1da146102e057806391d14854146102fe57610173565b806301ffc9a714610178578063248a9ca3146101a85780632c535497146101d85780632f2ff15d146101f457806336568abe1461021057806339f7e37f1461022c575b600080fd5b610192600480360381019061018d919061287e565b6104e8565b60405161019f91906128c6565b60405180910390f35b6101c260048036038101906101bd9190612917565b610562565b6040516101cf9190612953565b60405180910390f35b6101f260048036038101906101ed9190612aea565b610581565b005b61020e60048036038101906102099190612ba4565b61071c565b005b61022a60048036038101906102259190612ba4565b61073d565b005b61024660048036038101906102419190612be4565b6107c0565b005b610262600480360381019061025d9190612c2d565b6107e8565b005b61027e60048036038101906102799190612c2d565b610b3b565b005b61029a60048036038101906102959190612917565b610db7565b6040516102a79190612c69565b60405180910390f35b6102ca60048036038101906102c59190612d4c565b610df4565b6040516102d79190612ffc565b60405180910390f35b6102e86110fb565b6040516102f59190612953565b60405180910390f35b61031860048036038101906103139190612ba4565b61111f565b60405161032591906128c6565b60405180910390f35b61034860048036038101906103439190612c2d565b611189565b6040516103559190613068565b60405180910390f35b610366611251565b6040516103739190612953565b60405180910390f35b61039660048036038101906103919190612c2d565b611258565b6040516103a39190613099565b60405180910390f35b6103b4611275565b6040516103c19190613163565b60405180910390f35b6103e460048036038101906103df9190612c2d565b611330565b6040516103f79796959493929190613185565b60405180910390f35b61041a60048036038101906104159190613202565b611370565b005b610424611712565b604051610431919061335a565b60405180910390f35b610454600480360381019061044f9190612ba4565b6117c0565b005b610470600480360381019061046b9190612ba4565b6117dc565b005b61047a6117fd565b6040516104879190612953565b60405180910390f35b610498611821565b6040516104a59190613099565b60405180910390f35b6104c860048036038101906104c39190612917565b611832565b005b6104d261184c565b6040516104df9190612953565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061055b575061055a82611870565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b61059c600860008481526020019081526020016000206118da565b6105d2576040517f18fec92a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105ed600860008481526020019081526020016000206118fa565b610623576040517f36f9f28200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61063e60086000848152602001908152602001600020611915565b610674576040517fd9d0f22f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166106a660086000858152602001908152602001600020611931565b73ffffffffffffffffffffffffffffffffffffffff16146106f3576040517fc7e21ef000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610718816008600085815260200190815260200160002061195f90919063ffffffff16565b5050565b61072582610562565b61072e8161197c565b6107388383611990565b505050565b610745611a70565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a9906133ee565b60405180910390fd5b6107bc8282611a78565b5050565b6000801b6107cd8161197c565b81600790805190602001906107e39291906126e9565b505050565b610803600860008381526020019081526020016000206118da565b610839576040517f18fec92a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610854600860008381526020019081526020016000206118fa565b1561088b576040517fe5f4e72100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016108a860086000848152602001908152602001600020611b59565b14806108ce575060026108cc60086000848152602001908152602001600020611b59565b145b15610957573373ffffffffffffffffffffffffffffffffffffffff1661090560086000848152602001908152602001600020611b67565b73ffffffffffffffffffffffffffffffffffffffff1614610952576040517fc7e21ef000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a31565b600361097460086000848152602001908152602001600020611b59565b14156109fe573373ffffffffffffffffffffffffffffffffffffffff166109ac60086000848152602001908152602001600020611931565b73ffffffffffffffffffffffffffffffffffffffff16146109f9576040517fc7e21ef000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a30565b6040517f89c4be2c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b6000610a56610a5160086000858152602001908152602001600020611b95565b610db7565b9050610a7360086000848152602001908152602001600020611ba3565b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd610aaa60086000868152602001908152602001600020611b67565b30610ac660086000888152602001908152602001600020611bc3565b6040518463ffffffff1660e01b8152600401610ae49392919061340e565b602060405180830381600087803b158015610afe57600080fd5b505af1158015610b12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b369190613471565b505050565b610b56600860008381526020019081526020016000206118da565b610b8c576040517f18fec92a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ba760086000838152602001908152602001600020611bd1565b15610bde576040517f15c9cc7700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bf960086000838152602001908152602001600020611915565b15610c30576040517f3d50195100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16610c6260086000848152602001908152602001600020611b67565b73ffffffffffffffffffffffffffffffffffffffff1614610caf576040517fc7e21ef000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cca60086000838152602001908152602001600020611bec565b6000610cef610cea60086000858152602001908152602001600020611b95565b610db7565b90508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610d2860086000868152602001908152602001600020611931565b610d4360086000878152602001908152602001600020611bc3565b6040518363ffffffff1660e01b8152600401610d6092919061349e565b602060405180830381600087803b158015610d7a57600080fd5b505af1158015610d8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db29190613471565b505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606000825167ffffffffffffffff811115610e1357610e126129bf565b5b604051908082528060200260200182016040528015610e4c57816020015b610e3961276f565b815260200190600190039081610e315790505b50905060005b83518110156110f15760086000858381518110610e7257610e716134c7565b5b602002602001015181526020019081526020016000206040518061014001604052908160008201548152602001600182018054610eae90613525565b80601f0160208091040260200160405190810160405280929190818152602001828054610eda90613525565b8015610f275780601f10610efc57610100808354040283529160200191610f27565b820191906000526020600020905b815481529060010190602001808311610f0a57829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815260200160068201805461100090613525565b80601f016020809104026020016040519081016040528092919081815260200182805461102c90613525565b80156110795780601f1061104e57610100808354040283529160200191611079565b820191906000526020600020905b81548152906001019060200180831161105c57829003601f168201915b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff161515151581526020016008820154815250508282815181106110d5576110d46134c7565b5b6020026020010181905250806110ea90613586565b9050610e52565b5080915050919050565b7ff8cd32ed93fc2f9fc78152a14807c9609af3d99c5fe4dc6b106a801aaddfe90e81565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60606111a6600860008481526020019081526020016000206118da565b6111dc576040517f18fec92a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006111e6611c0c565b9050600061120560086000868152602001908152602001600020611c9e565b905060008251116112255760405180602001604052806000815250611248565b818160405160200161123892919061360b565b6040516020818303038152906040525b92505050919050565b6000801b81565b600061126e826005611d3490919063ffffffff16565b9050919050565b606060006112836002611d4e565b905060008167ffffffffffffffff8111156112a1576112a06129bf565b5b6040519080825280602002602001820160405280156112cf5781602001602082028036833780820191505090505b50905060005b828110156113275760006112f3826002611d6390919063ffffffff16565b905080838381518110611309576113086134c7565b5b602002602001018181525050508061132090613586565b90506112d5565b50809250505090565b600060606000806000806060611357600860008a8152602001908152602001600020611d7a565b9650965096509650965096509650919395979092949650565b60008061138e600860008a81526020019081526020016000206118da565b156113c5576040517f18fec92a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166113e687610db7565b73ffffffffffffffffffffffffffffffffffffffff161415611434576040517f25f2f2ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001831415611508576114677f43f25613eb2f15fb17222a5d424ca2655743e71265d98e4b93c05e5fb589ecde3361111f565b61149d576040517fbab7ca3500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114c77ffacaf2747a7486cf5730e9265973fb54447d3ace6e7e4711f6360826b07319418661111f565b6114fd576040517ffb7595a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3391508490506116e4565b60028314156115dc5761153b7ffacaf2747a7486cf5730e9265973fb54447d3ace6e7e4711f6360826b07319413361111f565b611571576040517ffb7595a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61159b7ff8cd32ed93fc2f9fc78152a14807c9609af3d99c5fe4dc6b106a801aaddfe90e8661111f565b6115d1576040517fb1df0e0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3391508490506116e3565b60038314156116b05761160f7ff8cd32ed93fc2f9fc78152a14807c9609af3d99c5fe4dc6b106a801aaddfe90e3361111f565b611645576040517fb1df0e0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61166f7ffacaf2747a7486cf5730e9265973fb54447d3ace6e7e4711f6360826b07319418661111f565b6116a5576040517ffb7595a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8491503390506116e2565b6040517f89c4be2c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b6116f388888885858989611f18565b611707886005611f5890919063ffffffff16565b505050505050505050565b6060600061171e611821565b905060008167ffffffffffffffff81111561173c5761173b6129bf565b5b60405190808252806020026020018201604052801561176a5781602001602082028036833780820191505090505b50905060005b828110156117b757600061178382611258565b905080838381518110611799576117986134c7565b5b60200260200101818152505050806117b090613586565b9050611770565b50809250505090565b6000801b6117cd8161197c565b6117d78383611f72565b505050565b6117e582610562565b6117ee8161197c565b6117f88383611a78565b505050565b7f43f25613eb2f15fb17222a5d424ca2655743e71265d98e4b93c05e5fb589ecde81565b600061182d600561204d565b905090565b6000801b61183f8161197c565b61184882612062565b5050565b7ffacaf2747a7486cf5730e9265973fb54447d3ace6e7e4711f6360826b073194181565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000808260000154146118f057600190506118f5565b600090505b919050565b60008160070160009054906101000a900460ff169050919050565b60008082600601805461192790613525565b9050149050919050565b60008160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808260060190805190602001906119779291906126e9565b505050565b61198d81611988611a70565b61211d565b50565b61199a828261111f565b611a6c57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611a11611a70565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b611a82828261111f565b15611b5557600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611afa611a70565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600081600801549050919050565b60008160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600081600201549050919050565b60018160070160006101000a81548160ff02191690831515021790555050565b600081600501549050919050565b60008160070160019054906101000a900460ff169050919050565b60018160070160016101000a81548160ff02191690831515021790555050565b606060078054611c1b90613525565b80601f0160208091040260200160405190810160405280929190818152602001828054611c4790613525565b8015611c945780601f10611c6957610100808354040283529160200191611c94565b820191906000526020600020905b815481529060010190602001808311611c7757829003601f168201915b5050505050905090565b6060816006018054611caf90613525565b80601f0160208091040260200160405190810160405280929190818152602001828054611cdb90613525565b8015611d285780601f10611cfd57610100808354040283529160200191611d28565b820191906000526020600020905b815481529060010190602001808311611d0b57829003601f168201915b50505050509050919050565b6000611d4383600001836121a2565b60001c905092915050565b6000611d5c826000016121cd565b9050919050565b6000611d7283600001836121a2565b905092915050565b60006060600080600080606087600001548860010189600201548a60030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168c600501548d600601858054611df390613525565b80601f0160208091040260200160405190810160405280929190818152602001828054611e1f90613525565b8015611e6c5780601f10611e4157610100808354040283529160200191611e6c565b820191906000526020600020905b815481529060010190602001808311611e4f57829003601f168201915b50505050509550808054611e7f90613525565b80601f0160208091040260200160405190810160405280929190818152602001828054611eab90613525565b8015611ef85780601f10611ecd57610100808354040283529160200191611ef8565b820191906000526020600020905b815481529060010190602001808311611edb57829003601f168201915b505050505090509650965096509650965096509650919395979092949650565b6000879050611f4e88888888888888600860008a81526020019081526020016000206121de90979695949392919063ffffffff16565b5050505050505050565b6000611f6a836000018360001b6122ab565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611fe2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd9906136a1565b60405180910390fd5b806001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061204882600261231b90919063ffffffff16565b505050565b600061205b826000016121cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156120cf57600080fd5b6120e381600261233290919063ffffffff16565b506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b612127828261111f565b61219e5761213481612349565b6121428360001c6020612376565b604051602001612153929190613759565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121959190613068565b60405180910390fd5b5050565b60008260000182815481106121ba576121b96134c7565b5b9060005260206000200154905092915050565b600081600001805490509050919050565b868860000181905550858860010190805190602001906121ff9291906126e9565b50848860020181905550838860030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828860040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508188600501819055508088600801819055505050505050505050565b60006122b783836125b2565b612310578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612315565b600090505b92915050565b600061232a83600001836122ab565b905092915050565b600061234183600001836125d5565b905092915050565b606061236f8273ffffffffffffffffffffffffffffffffffffffff16601460ff16612376565b9050919050565b6060600060028360026123899190613793565b61239391906137ed565b67ffffffffffffffff8111156123ac576123ab6129bf565b5b6040519080825280601f01601f1916602001820160405280156123de5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110612416576124156134c7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061247a576124796134c7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026124ba9190613793565b6124c491906137ed565b90505b6001811115612564577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612506576125056134c7565b5b1a60f81b82828151811061251d5761251c6134c7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061255d90613843565b90506124c7565b50600084146125a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161259f906138b9565b60405180910390fd5b8091505092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080836001016000848152602001908152602001600020549050600081146126dd57600060018261260791906138d9565b905060006001866000018054905061261f91906138d9565b905081811461268e5760008660000182815481106126405761263f6134c7565b5b9060005260206000200154905080876000018481548110612664576126636134c7565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806126a2576126a161390d565b5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506126e3565b60009150505b92915050565b8280546126f590613525565b90600052602060002090601f016020900481019282612717576000855561275e565b82601f1061273057805160ff191683800117855561275e565b8280016001018555821561275e579182015b8281111561275d578251825591602001919060010190612742565b5b50905061276b91906127f5565b5090565b604051806101400160405280600081526020016060815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160608152602001600015158152602001600015158152602001600081525090565b5b8082111561280e5760008160009055506001016127f6565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61285b81612826565b811461286657600080fd5b50565b60008135905061287881612852565b92915050565b6000602082840312156128945761289361281c565b5b60006128a284828501612869565b91505092915050565b60008115159050919050565b6128c0816128ab565b82525050565b60006020820190506128db60008301846128b7565b92915050565b6000819050919050565b6128f4816128e1565b81146128ff57600080fd5b50565b600081359050612911816128eb565b92915050565b60006020828403121561292d5761292c61281c565b5b600061293b84828501612902565b91505092915050565b61294d816128e1565b82525050565b60006020820190506129686000830184612944565b92915050565b6000819050919050565b6129818161296e565b811461298c57600080fd5b50565b60008135905061299e81612978565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6129f7826129ae565b810181811067ffffffffffffffff82111715612a1657612a156129bf565b5b80604052505050565b6000612a29612812565b9050612a3582826129ee565b919050565b600067ffffffffffffffff821115612a5557612a546129bf565b5b612a5e826129ae565b9050602081019050919050565b82818337600083830152505050565b6000612a8d612a8884612a3a565b612a1f565b905082815260208101848484011115612aa957612aa86129a9565b5b612ab4848285612a6b565b509392505050565b600082601f830112612ad157612ad06129a4565b5b8135612ae1848260208601612a7a565b91505092915050565b60008060408385031215612b0157612b0061281c565b5b6000612b0f8582860161298f565b925050602083013567ffffffffffffffff811115612b3057612b2f612821565b5b612b3c85828601612abc565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b7182612b46565b9050919050565b612b8181612b66565b8114612b8c57600080fd5b50565b600081359050612b9e81612b78565b92915050565b60008060408385031215612bbb57612bba61281c565b5b6000612bc985828601612902565b9250506020612bda85828601612b8f565b9150509250929050565b600060208284031215612bfa57612bf961281c565b5b600082013567ffffffffffffffff811115612c1857612c17612821565b5b612c2484828501612abc565b91505092915050565b600060208284031215612c4357612c4261281c565b5b6000612c518482850161298f565b91505092915050565b612c6381612b66565b82525050565b6000602082019050612c7e6000830184612c5a565b92915050565b600067ffffffffffffffff821115612c9f57612c9e6129bf565b5b602082029050602081019050919050565b600080fd5b6000612cc8612cc384612c84565b612a1f565b90508083825260208201905060208402830185811115612ceb57612cea612cb0565b5b835b81811015612d145780612d00888261298f565b845260208401935050602081019050612ced565b5050509392505050565b600082601f830112612d3357612d326129a4565b5b8135612d43848260208601612cb5565b91505092915050565b600060208284031215612d6257612d6161281c565b5b600082013567ffffffffffffffff811115612d8057612d7f612821565b5b612d8c84828501612d1e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612dca8161296e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612e0a578082015181840152602081019050612def565b83811115612e19576000848401525b50505050565b6000612e2a82612dd0565b612e348185612ddb565b9350612e44818560208601612dec565b612e4d816129ae565b840191505092915050565b612e61816128e1565b82525050565b612e7081612b66565b82525050565b612e7f816128ab565b82525050565b600061014083016000830151612e9e6000860182612dc1565b5060208301518482036020860152612eb68282612e1f565b9150506040830151612ecb6040860182612e58565b506060830151612ede6060860182612e67565b506080830151612ef16080860182612e67565b5060a0830151612f0460a0860182612dc1565b5060c083015184820360c0860152612f1c8282612e1f565b91505060e0830151612f3160e0860182612e76565b50610100830151612f46610100860182612e76565b50610120830151612f5b610120860182612dc1565b508091505092915050565b6000612f728383612e85565b905092915050565b6000602082019050919050565b6000612f9282612d95565b612f9c8185612da0565b935083602082028501612fae85612db1565b8060005b85811015612fea5784840389528151612fcb8582612f66565b9450612fd683612f7a565b925060208a01995050600181019050612fb2565b50829750879550505050505092915050565b600060208201905081810360008301526130168184612f87565b905092915050565b600082825260208201905092915050565b600061303a82612dd0565b613044818561301e565b9350613054818560208601612dec565b61305d816129ae565b840191505092915050565b60006020820190508181036000830152613082818461302f565b905092915050565b6130938161296e565b82525050565b60006020820190506130ae600083018461308a565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006130ec8383612e58565b60208301905092915050565b6000602082019050919050565b6000613110826130b4565b61311a81856130bf565b9350613125836130d0565b8060005b8381101561315657815161313d88826130e0565b9750613148836130f8565b925050600181019050613129565b5085935050505092915050565b6000602082019050818103600083015261317d8184613105565b905092915050565b600060e08201905061319a600083018a61308a565b81810360208301526131ac818961302f565b90506131bb6040830188612944565b6131c86060830187612c5a565b6131d56080830186612c5a565b6131e260a083018561308a565b81810360c08301526131f4818461302f565b905098975050505050505050565b60008060008060008060c0878903121561321f5761321e61281c565b5b600061322d89828a0161298f565b965050602087013567ffffffffffffffff81111561324e5761324d612821565b5b61325a89828a01612abc565b955050604061326b89828a01612902565b945050606061327c89828a01612b8f565b935050608061328d89828a0161298f565b92505060a061329e89828a0161298f565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006132e38383612dc1565b60208301905092915050565b6000602082019050919050565b6000613307826132ab565b61331181856132b6565b935061331c836132c7565b8060005b8381101561334d57815161333488826132d7565b975061333f836132ef565b925050600181019050613320565b5085935050505092915050565b6000602082019050818103600083015261337481846132fc565b905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006133d8602f8361301e565b91506133e38261337c565b604082019050919050565b60006020820190508181036000830152613407816133cb565b9050919050565b60006060820190506134236000830186612c5a565b6134306020830185612c5a565b61343d604083018461308a565b949350505050565b61344e816128ab565b811461345957600080fd5b50565b60008151905061346b81613445565b92915050565b6000602082840312156134875761348661281c565b5b60006134958482850161345c565b91505092915050565b60006040820190506134b36000830185612c5a565b6134c0602083018461308a565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061353d57607f821691505b60208210811415613551576135506134f6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006135918261296e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156135c4576135c3613557565b5b600182019050919050565b600081905092915050565b60006135e582612dd0565b6135ef81856135cf565b93506135ff818560208601612dec565b80840191505092915050565b600061361782856135da565b915061362382846135da565b91508190509392505050565b7f416c6c6f77616e6365733a20546865205a65726f20416464726573732069732060008201527f6e6f7420616c6c6f776564000000000000000000000000000000000000000000602082015250565b600061368b602b8361301e565b91506136968261362f565b604082019050919050565b600060208201905081810360008301526136ba8161367e565b9050919050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006136f76017836135cf565b9150613702826136c1565b601782019050919050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006137436011836135cf565b915061374e8261370d565b601182019050919050565b6000613764826136ea565b915061377082856135da565b915061377b82613736565b915061378782846135da565b91508190509392505050565b600061379e8261296e565b91506137a98361296e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156137e2576137e1613557565b5b828202905092915050565b60006137f88261296e565b91506138038361296e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561383857613837613557565b5b828201905092915050565b600061384e8261296e565b9150600082141561386257613861613557565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b60006138a360208361301e565b91506138ae8261386d565b602082019050919050565b600060208201905081810360008301526138d281613896565b9050919050565b60006138e48261296e565b91506138ef8361296e565b92508282101561390257613901613557565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220d404478b574365c6509869d7cc0a156aba958775f4b14819ffe45da34553803e64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x3EEA CODESIZE SUB DUP1 PUSH3 0x3EEA DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x4B2 JUMP JUMPDEST DUP1 PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x4F SWAP3 SWAP2 SWAP1 PUSH3 0x265 JUMP JUMPDEST POP PUSH3 0x65 PUSH1 0x0 DUP1 SHL CALLER PUSH3 0x102 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x97 PUSH32 0x43F25613EB2F15FB17222A5D424CA2655743E71265D98E4B93C05E5FB589ECDE CALLER PUSH3 0x102 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xC9 PUSH32 0xFACAF2747A7486CF5730E9265973FB54447D3ACE6E7E4711F6360826B0731941 CALLER PUSH3 0x102 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xFB PUSH32 0xF8CD32ED93FC2F9FC78152A14807C9609AF3D99C5FE4DC6B106A801AADDFE90E CALLER PUSH3 0x102 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH3 0x568 JUMP JUMPDEST PUSH3 0x114 DUP3 DUP3 PUSH3 0x1F3 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1EF JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH3 0x194 PUSH3 0x25D PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x273 SWAP1 PUSH3 0x532 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x297 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x2E3 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x2B2 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x2E3 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x2E3 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x2E2 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x2C5 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH3 0x2F2 SWAP2 SWAP1 PUSH3 0x2F6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x311 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH3 0x2F7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH3 0x37E DUP3 PUSH3 0x333 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH3 0x3A0 JUMPI PUSH3 0x39F PUSH3 0x344 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x3B5 PUSH3 0x315 JUMP JUMPDEST SWAP1 POP PUSH3 0x3C3 DUP3 DUP3 PUSH3 0x373 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH3 0x3E6 JUMPI PUSH3 0x3E5 PUSH3 0x344 JUMP JUMPDEST JUMPDEST PUSH3 0x3F1 DUP3 PUSH3 0x333 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH3 0x41E JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x401 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH3 0x42E JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x44B PUSH3 0x445 DUP5 PUSH3 0x3C8 JUMP JUMPDEST PUSH3 0x3A9 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH3 0x46A JUMPI PUSH3 0x469 PUSH3 0x32E JUMP JUMPDEST JUMPDEST PUSH3 0x477 DUP5 DUP3 DUP6 PUSH3 0x3FE JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x497 JUMPI PUSH3 0x496 PUSH3 0x329 JUMP JUMPDEST JUMPDEST DUP2 MLOAD PUSH3 0x4A9 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH3 0x434 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x4CB JUMPI PUSH3 0x4CA PUSH3 0x31F JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x4EC JUMPI PUSH3 0x4EB PUSH3 0x324 JUMP JUMPDEST JUMPDEST PUSH3 0x4FA DUP5 DUP3 DUP6 ADD PUSH3 0x47F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x54B JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x562 JUMPI PUSH3 0x561 PUSH3 0x503 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3972 DUP1 PUSH3 0x578 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x954679DA GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC47D62BD GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDBE4613D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDBE4613D EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0xE275C997 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0xEFD4AD5A EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xF0A56FC8 EQ PUSH2 0x4CA JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xC47D62BD EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xC7D63A13 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x456 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x954679DA EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xA4A591B7 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xA8CA9F68 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xAF4A9FE5 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xB4B83E93 EQ PUSH2 0x400 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x3D1D6A7F GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x3D1D6A7F EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x43786014 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x46DA743E EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x770994D0 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x7A01A1DA EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2FE JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x2C535497 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x39F7E37F EQ PUSH2 0x22C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x2C69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x2FFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x3068 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x396 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x1330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F7 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x3202 JUMP JUMPDEST PUSH2 0x1370 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x424 PUSH2 0x1712 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x335A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x454 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0x17C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x470 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0x17DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x47A PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x498 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH2 0x1832 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D2 PUSH2 0x184C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x55B JUMPI POP PUSH2 0x55A DUP3 PUSH2 0x1870 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59C PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x18FEC92A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5ED PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x18FA JUMP JUMPDEST PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH32 0x36F9F28200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x63E PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD9D0F22F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6A6 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1931 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC7E21EF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x718 DUP2 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x195F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x725 DUP3 PUSH2 0x562 JUMP JUMPDEST PUSH2 0x72E DUP2 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x738 DUP4 DUP4 PUSH2 0x1990 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x745 PUSH2 0x1A70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A9 SWAP1 PUSH2 0x33EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BC DUP3 DUP3 PUSH2 0x1A78 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x7CD DUP2 PUSH2 0x197C JUMP JUMPDEST DUP2 PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x7E3 SWAP3 SWAP2 SWAP1 PUSH2 0x26E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x803 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x18FEC92A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x854 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x18FA JUMP JUMPDEST ISZERO PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH32 0xE5F4E72100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH2 0x8A8 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B59 JUMP JUMPDEST EQ DUP1 PUSH2 0x8CE JUMPI POP PUSH1 0x2 PUSH2 0x8CC PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B59 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x957 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x905 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC7E21EF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x974 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B59 JUMP JUMPDEST EQ ISZERO PUSH2 0x9FE JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9AC PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1931 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC7E21EF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x89C4BE2C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA56 PUSH2 0xA51 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST SWAP1 POP PUSH2 0xA73 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1BA3 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0xAAA PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B67 JUMP JUMPDEST ADDRESS PUSH2 0xAC6 PUSH1 0x8 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x340E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x3471 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB56 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x18FEC92A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA7 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1BD1 JUMP JUMPDEST ISZERO PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x15C9CC7700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBF9 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1915 JUMP JUMPDEST ISZERO PUSH2 0xC30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3D50195100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC62 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCAF JUMPI PUSH1 0x40 MLOAD PUSH32 0xC7E21EF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCCA PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCEF PUSH2 0xCEA PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0xD28 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1931 JUMP JUMPDEST PUSH2 0xD43 PUSH1 0x8 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD60 SWAP3 SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB2 SWAP2 SWAP1 PUSH2 0x3471 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE13 JUMPI PUSH2 0xE12 PUSH2 0x29BF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE4C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xE39 PUSH2 0x276F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE31 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x10F1 JUMPI PUSH1 0x8 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE72 JUMPI PUSH2 0xE71 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xEAE SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEDA SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF27 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEFC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF27 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF0A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x1000 SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x102C SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1079 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x104E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1079 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x105C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10D5 JUMPI PUSH2 0x10D4 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH2 0x10EA SWAP1 PUSH2 0x3586 JUMP JUMPDEST SWAP1 POP PUSH2 0xE52 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xF8CD32ED93FC2F9FC78152A14807C9609AF3D99C5FE4DC6B106A801AADDFE90E DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11A6 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x18FEC92A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11E6 PUSH2 0x1C0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1205 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1C9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x1225 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1248 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1238 SWAP3 SWAP2 SWAP1 PUSH2 0x360B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126E DUP3 PUSH1 0x5 PUSH2 0x1D34 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1283 PUSH1 0x2 PUSH2 0x1D4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x12A0 PUSH2 0x29BF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12CF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1327 JUMPI PUSH1 0x0 PUSH2 0x12F3 DUP3 PUSH1 0x2 PUSH2 0x1D63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1309 JUMPI PUSH2 0x1308 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP DUP1 PUSH2 0x1320 SWAP1 PUSH2 0x3586 JUMP JUMPDEST SWAP1 POP PUSH2 0x12D5 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH2 0x1357 PUSH1 0x8 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1D7A JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x138E PUSH1 0x8 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x18DA JUMP JUMPDEST ISZERO PUSH2 0x13C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x18FEC92A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13E6 DUP8 PUSH2 0xDB7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1434 JUMPI PUSH1 0x40 MLOAD PUSH32 0x25F2F2FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x1508 JUMPI PUSH2 0x1467 PUSH32 0x43F25613EB2F15FB17222A5D424CA2655743E71265D98E4B93C05E5FB589ECDE CALLER PUSH2 0x111F JUMP JUMPDEST PUSH2 0x149D JUMPI PUSH1 0x40 MLOAD PUSH32 0xBAB7CA3500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14C7 PUSH32 0xFACAF2747A7486CF5730E9265973FB54447D3ACE6E7E4711F6360826B0731941 DUP7 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x14FD JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB7595A200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER SWAP2 POP DUP5 SWAP1 POP PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x2 DUP4 EQ ISZERO PUSH2 0x15DC JUMPI PUSH2 0x153B PUSH32 0xFACAF2747A7486CF5730E9265973FB54447D3ACE6E7E4711F6360826B0731941 CALLER PUSH2 0x111F JUMP JUMPDEST PUSH2 0x1571 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB7595A200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x159B PUSH32 0xF8CD32ED93FC2F9FC78152A14807C9609AF3D99C5FE4DC6B106A801AADDFE90E DUP7 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB1DF0E0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER SWAP2 POP DUP5 SWAP1 POP PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x3 DUP4 EQ ISZERO PUSH2 0x16B0 JUMPI PUSH2 0x160F PUSH32 0xF8CD32ED93FC2F9FC78152A14807C9609AF3D99C5FE4DC6B106A801AADDFE90E CALLER PUSH2 0x111F JUMP JUMPDEST PUSH2 0x1645 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB1DF0E0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x166F PUSH32 0xFACAF2747A7486CF5730E9265973FB54447D3ACE6E7E4711F6360826B0731941 DUP7 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x16A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB7595A200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SWAP2 POP CALLER SWAP1 POP PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x89C4BE2C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH2 0x16F3 DUP9 DUP9 DUP9 DUP6 DUP6 DUP10 DUP10 PUSH2 0x1F18 JUMP JUMPDEST PUSH2 0x1707 DUP9 PUSH1 0x5 PUSH2 0x1F58 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x171E PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x173C JUMPI PUSH2 0x173B PUSH2 0x29BF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x176A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x17B7 JUMPI PUSH1 0x0 PUSH2 0x1783 DUP3 PUSH2 0x1258 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1799 JUMPI PUSH2 0x1798 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP DUP1 PUSH2 0x17B0 SWAP1 PUSH2 0x3586 JUMP JUMPDEST SWAP1 POP PUSH2 0x1770 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x17CD DUP2 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x17D7 DUP4 DUP4 PUSH2 0x1F72 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x17E5 DUP3 PUSH2 0x562 JUMP JUMPDEST PUSH2 0x17EE DUP2 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x17F8 DUP4 DUP4 PUSH2 0x1A78 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x43F25613EB2F15FB17222A5D424CA2655743E71265D98E4B93C05E5FB589ECDE DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182D PUSH1 0x5 PUSH2 0x204D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x183F DUP2 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1848 DUP3 PUSH2 0x2062 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xFACAF2747A7486CF5730E9265973FB54447D3ACE6E7E4711F6360826B0731941 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x18F0 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x6 ADD DUP1 SLOAD PUSH2 0x1927 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP1 POP EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 PUSH1 0x6 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1977 SWAP3 SWAP2 SWAP1 PUSH2 0x26E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x198D DUP2 PUSH2 0x1988 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0x211D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x199A DUP3 DUP3 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x1A6C JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1A11 PUSH2 0x1A70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A82 DUP3 DUP3 PUSH2 0x111F JUMP JUMPDEST ISZERO PUSH2 0x1B55 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1AFA PUSH2 0x1A70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x8 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x7 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x1C1B SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C47 SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C94 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C69 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C94 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C77 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x6 ADD DUP1 SLOAD PUSH2 0x1CAF SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CDB SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D28 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CFD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D28 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D0B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D43 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x21A2 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5C DUP3 PUSH1 0x0 ADD PUSH2 0x21CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D72 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x21A2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 PUSH1 0x0 ADD SLOAD DUP9 PUSH1 0x1 ADD DUP10 PUSH1 0x2 ADD SLOAD DUP11 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH1 0x5 ADD SLOAD DUP14 PUSH1 0x6 ADD DUP6 DUP1 SLOAD PUSH2 0x1DF3 SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E1F SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E6C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E41 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E6C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E4F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP6 POP DUP1 DUP1 SLOAD PUSH2 0x1E7F SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EAB SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EF8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ECD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1EF8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1EDB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP8 SWAP1 POP PUSH2 0x1F4E DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x8 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x21DE SWAP1 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F6A DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x22AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD9 SWAP1 PUSH2 0x36A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2048 DUP3 PUSH1 0x2 PUSH2 0x231B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205B DUP3 PUSH1 0x0 ADD PUSH2 0x21CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x20CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20E3 DUP2 PUSH1 0x2 PUSH2 0x2332 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2127 DUP3 DUP3 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x219E JUMPI PUSH2 0x2134 DUP2 PUSH2 0x2349 JUMP JUMPDEST PUSH2 0x2142 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2153 SWAP3 SWAP2 SWAP1 PUSH2 0x3759 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2195 SWAP2 SWAP1 PUSH2 0x3068 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x21BA JUMPI PUSH2 0x21B9 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP7 DUP9 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP9 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x21FF SWAP3 SWAP2 SWAP1 PUSH2 0x26E9 JUMP JUMPDEST POP DUP5 DUP9 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP9 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP9 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP9 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP9 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B7 DUP4 DUP4 PUSH2 0x25B2 JUMP JUMPDEST PUSH2 0x2310 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x232A DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x22AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2341 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x25D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x236F DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x2376 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x2389 SWAP2 SWAP1 PUSH2 0x3793 JUMP JUMPDEST PUSH2 0x2393 SWAP2 SWAP1 PUSH2 0x37ED JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23AC JUMPI PUSH2 0x23AB PUSH2 0x29BF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x23DE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2416 JUMPI PUSH2 0x2415 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x247A JUMPI PUSH2 0x2479 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x24BA SWAP2 SWAP1 PUSH2 0x3793 JUMP JUMPDEST PUSH2 0x24C4 SWAP2 SWAP1 PUSH2 0x37ED JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2564 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x2506 JUMPI PUSH2 0x2505 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x251D JUMPI PUSH2 0x251C PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x255D SWAP1 PUSH2 0x3843 JUMP JUMPDEST SWAP1 POP PUSH2 0x24C7 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x25A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259F SWAP1 PUSH2 0x38B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x26DD JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x2607 SWAP2 SWAP1 PUSH2 0x38D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x261F SWAP2 SWAP1 PUSH2 0x38D9 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x268E JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2640 JUMPI PUSH2 0x263F PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2664 JUMPI PUSH2 0x2663 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x26A2 JUMPI PUSH2 0x26A1 PUSH2 0x390D JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x26E3 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x26F5 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2717 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x275E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2730 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x275E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x275E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x275D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2742 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x276B SWAP2 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x280E JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x27F6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x285B DUP2 PUSH2 0x2826 JUMP JUMPDEST DUP2 EQ PUSH2 0x2866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2878 DUP2 PUSH2 0x2852 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2894 JUMPI PUSH2 0x2893 PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A2 DUP5 DUP3 DUP6 ADD PUSH2 0x2869 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28C0 DUP2 PUSH2 0x28AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28DB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F4 DUP2 PUSH2 0x28E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x28FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2911 DUP2 PUSH2 0x28EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x292D JUMPI PUSH2 0x292C PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x293B DUP5 DUP3 DUP6 ADD PUSH2 0x2902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x294D DUP2 PUSH2 0x28E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2968 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2944 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2981 DUP2 PUSH2 0x296E JUMP JUMPDEST DUP2 EQ PUSH2 0x298C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x299E DUP2 PUSH2 0x2978 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x29F7 DUP3 PUSH2 0x29AE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A16 JUMPI PUSH2 0x2A15 PUSH2 0x29BF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A29 PUSH2 0x2812 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A35 DUP3 DUP3 PUSH2 0x29EE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A55 JUMPI PUSH2 0x2A54 PUSH2 0x29BF JUMP JUMPDEST JUMPDEST PUSH2 0x2A5E DUP3 PUSH2 0x29AE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A8D PUSH2 0x2A88 DUP5 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x2A1F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2AA9 JUMPI PUSH2 0x2AA8 PUSH2 0x29A9 JUMP JUMPDEST JUMPDEST PUSH2 0x2AB4 DUP5 DUP3 DUP6 PUSH2 0x2A6B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2AD1 JUMPI PUSH2 0x2AD0 PUSH2 0x29A4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2AE1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2A7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B01 JUMPI PUSH2 0x2B00 PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B0F DUP6 DUP3 DUP7 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B30 JUMPI PUSH2 0x2B2F PUSH2 0x2821 JUMP JUMPDEST JUMPDEST PUSH2 0x2B3C DUP6 DUP3 DUP7 ADD PUSH2 0x2ABC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B71 DUP3 PUSH2 0x2B46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B81 DUP2 PUSH2 0x2B66 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B9E DUP2 PUSH2 0x2B78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BBB JUMPI PUSH2 0x2BBA PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BC9 DUP6 DUP3 DUP7 ADD PUSH2 0x2902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2BDA DUP6 DUP3 DUP7 ADD PUSH2 0x2B8F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BFA JUMPI PUSH2 0x2BF9 PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C18 JUMPI PUSH2 0x2C17 PUSH2 0x2821 JUMP JUMPDEST JUMPDEST PUSH2 0x2C24 DUP5 DUP3 DUP6 ADD PUSH2 0x2ABC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C43 JUMPI PUSH2 0x2C42 PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C51 DUP5 DUP3 DUP6 ADD PUSH2 0x298F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C63 DUP2 PUSH2 0x2B66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C7E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C9F JUMPI PUSH2 0x2C9E PUSH2 0x29BF JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CC8 PUSH2 0x2CC3 DUP5 PUSH2 0x2C84 JUMP JUMPDEST PUSH2 0x2A1F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2CEB JUMPI PUSH2 0x2CEA PUSH2 0x2CB0 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2D14 JUMPI DUP1 PUSH2 0x2D00 DUP9 DUP3 PUSH2 0x298F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2CED JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D33 JUMPI PUSH2 0x2D32 PUSH2 0x29A4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D43 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2CB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D62 JUMPI PUSH2 0x2D61 PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D80 JUMPI PUSH2 0x2D7F PUSH2 0x2821 JUMP JUMPDEST JUMPDEST PUSH2 0x2D8C DUP5 DUP3 DUP6 ADD PUSH2 0x2D1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DCA DUP2 PUSH2 0x296E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E0A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DEF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2E19 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2A DUP3 PUSH2 0x2DD0 JUMP JUMPDEST PUSH2 0x2E34 DUP2 DUP6 PUSH2 0x2DDB JUMP JUMPDEST SWAP4 POP PUSH2 0x2E44 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DEC JUMP JUMPDEST PUSH2 0x2E4D DUP2 PUSH2 0x29AE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E61 DUP2 PUSH2 0x28E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2E70 DUP2 PUSH2 0x2B66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2E7F DUP2 PUSH2 0x28AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2E9E PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2DC1 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2EB6 DUP3 DUP3 PUSH2 0x2E1F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2ECB PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2E58 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x2EDE PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2E67 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x2EF1 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2E67 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x2F04 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x2DC1 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x2F1C DUP3 DUP3 PUSH2 0x2E1F JUMP JUMPDEST SWAP2 POP POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x2F31 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x2E76 JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x2F46 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x2E76 JUMP JUMPDEST POP PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x2F5B PUSH2 0x120 DUP7 ADD DUP3 PUSH2 0x2DC1 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F72 DUP4 DUP4 PUSH2 0x2E85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F92 DUP3 PUSH2 0x2D95 JUMP JUMPDEST PUSH2 0x2F9C DUP2 DUP6 PUSH2 0x2DA0 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x2FAE DUP6 PUSH2 0x2DB1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2FEA JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x2FCB DUP6 DUP3 PUSH2 0x2F66 JUMP JUMPDEST SWAP5 POP PUSH2 0x2FD6 DUP4 PUSH2 0x2F7A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2FB2 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3016 DUP2 DUP5 PUSH2 0x2F87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x303A DUP3 PUSH2 0x2DD0 JUMP JUMPDEST PUSH2 0x3044 DUP2 DUP6 PUSH2 0x301E JUMP JUMPDEST SWAP4 POP PUSH2 0x3054 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DEC JUMP JUMPDEST PUSH2 0x305D DUP2 PUSH2 0x29AE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3082 DUP2 DUP5 PUSH2 0x302F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3093 DUP2 PUSH2 0x296E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x308A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30EC DUP4 DUP4 PUSH2 0x2E58 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3110 DUP3 PUSH2 0x30B4 JUMP JUMPDEST PUSH2 0x311A DUP2 DUP6 PUSH2 0x30BF JUMP JUMPDEST SWAP4 POP PUSH2 0x3125 DUP4 PUSH2 0x30D0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3156 JUMPI DUP2 MLOAD PUSH2 0x313D DUP9 DUP3 PUSH2 0x30E0 JUMP JUMPDEST SWAP8 POP PUSH2 0x3148 DUP4 PUSH2 0x30F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3129 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x317D DUP2 DUP5 PUSH2 0x3105 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x319A PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x308A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x31AC DUP2 DUP10 PUSH2 0x302F JUMP JUMPDEST SWAP1 POP PUSH2 0x31BB PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x2944 JUMP JUMPDEST PUSH2 0x31C8 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2C5A JUMP JUMPDEST PUSH2 0x31D5 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2C5A JUMP JUMPDEST PUSH2 0x31E2 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x308A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x31F4 DUP2 DUP5 PUSH2 0x302F JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x321F JUMPI PUSH2 0x321E PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x322D DUP10 DUP3 DUP11 ADD PUSH2 0x298F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x324E JUMPI PUSH2 0x324D PUSH2 0x2821 JUMP JUMPDEST JUMPDEST PUSH2 0x325A DUP10 DUP3 DUP11 ADD PUSH2 0x2ABC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x326B DUP10 DUP3 DUP11 ADD PUSH2 0x2902 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x327C DUP10 DUP3 DUP11 ADD PUSH2 0x2B8F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x328D DUP10 DUP3 DUP11 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x329E DUP10 DUP3 DUP11 ADD PUSH2 0x298F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E3 DUP4 DUP4 PUSH2 0x2DC1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3307 DUP3 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x3311 DUP2 DUP6 PUSH2 0x32B6 JUMP JUMPDEST SWAP4 POP PUSH2 0x331C DUP4 PUSH2 0x32C7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x334D JUMPI DUP2 MLOAD PUSH2 0x3334 DUP9 DUP3 PUSH2 0x32D7 JUMP JUMPDEST SWAP8 POP PUSH2 0x333F DUP4 PUSH2 0x32EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3320 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3374 DUP2 DUP5 PUSH2 0x32FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D8 PUSH1 0x2F DUP4 PUSH2 0x301E JUMP JUMPDEST SWAP2 POP PUSH2 0x33E3 DUP3 PUSH2 0x337C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3407 DUP2 PUSH2 0x33CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3423 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2C5A JUMP JUMPDEST PUSH2 0x3430 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2C5A JUMP JUMPDEST PUSH2 0x343D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x308A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x344E DUP2 PUSH2 0x28AB JUMP JUMPDEST DUP2 EQ PUSH2 0x3459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x346B DUP2 PUSH2 0x3445 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3487 JUMPI PUSH2 0x3486 PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3495 DUP5 DUP3 DUP6 ADD PUSH2 0x345C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x34B3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2C5A JUMP JUMPDEST PUSH2 0x34C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x308A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x353D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3551 JUMPI PUSH2 0x3550 PUSH2 0x34F6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3591 DUP3 PUSH2 0x296E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x35C4 JUMPI PUSH2 0x35C3 PUSH2 0x3557 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E5 DUP3 PUSH2 0x2DD0 JUMP JUMPDEST PUSH2 0x35EF DUP2 DUP6 PUSH2 0x35CF JUMP JUMPDEST SWAP4 POP PUSH2 0x35FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DEC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3617 DUP3 DUP6 PUSH2 0x35DA JUMP JUMPDEST SWAP2 POP PUSH2 0x3623 DUP3 DUP5 PUSH2 0x35DA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416C6C6F77616E6365733A20546865205A65726F204164647265737320697320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F7420616C6C6F776564000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x368B PUSH1 0x2B DUP4 PUSH2 0x301E JUMP JUMPDEST SWAP2 POP PUSH2 0x3696 DUP3 PUSH2 0x362F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36BA DUP2 PUSH2 0x367E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F7 PUSH1 0x17 DUP4 PUSH2 0x35CF JUMP JUMPDEST SWAP2 POP PUSH2 0x3702 DUP3 PUSH2 0x36C1 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3743 PUSH1 0x11 DUP4 PUSH2 0x35CF JUMP JUMPDEST SWAP2 POP PUSH2 0x374E DUP3 PUSH2 0x370D JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3764 DUP3 PUSH2 0x36EA JUMP JUMPDEST SWAP2 POP PUSH2 0x3770 DUP3 DUP6 PUSH2 0x35DA JUMP JUMPDEST SWAP2 POP PUSH2 0x377B DUP3 PUSH2 0x3736 JUMP JUMPDEST SWAP2 POP PUSH2 0x3787 DUP3 DUP5 PUSH2 0x35DA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x379E DUP3 PUSH2 0x296E JUMP JUMPDEST SWAP2 POP PUSH2 0x37A9 DUP4 PUSH2 0x296E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x37E2 JUMPI PUSH2 0x37E1 PUSH2 0x3557 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F8 DUP3 PUSH2 0x296E JUMP JUMPDEST SWAP2 POP PUSH2 0x3803 DUP4 PUSH2 0x296E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3838 JUMPI PUSH2 0x3837 PUSH2 0x3557 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x384E DUP3 PUSH2 0x296E JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x3862 JUMPI PUSH2 0x3861 PUSH2 0x3557 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38A3 PUSH1 0x20 DUP4 PUSH2 0x301E JUMP JUMPDEST SWAP2 POP PUSH2 0x38AE DUP3 PUSH2 0x386D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38D2 DUP2 PUSH2 0x3896 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38E4 DUP3 PUSH2 0x296E JUMP JUMPDEST SWAP2 POP PUSH2 0x38EF DUP4 PUSH2 0x296E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3902 JUMPI PUSH2 0x3901 PUSH2 0x3557 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 DIV SELFBALANCE DUP12 JUMPI NUMBER PUSH6 0xC6509869D7CC EXP ISZERO PUSH11 0xBA958775F4B14819FFE45D LOG3 GASLIMIT MSTORE8 DUP1 RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"627:7489:15:-:0;;;1137:240;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1188:3;1180:7;:11;;;;;;;;;;;;:::i;:::-;;1199:42;2072:4:0;1210:18:15;;1230:10;1199;;;:42;;:::i;:::-;1249:35;725:24;1273:10;1249;;;:35;;:::i;:::-;1292;794:24;1316:10;1292;;;:35;;:::i;:::-;1335:34;862:23;1358:10;1335;;;:34;;:::i;:::-;1137:240;627:7489;;7461:233:0;7544:22;7552:4;7558:7;7544;;;:22;;:::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;;;:12;;:::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;2895:145::-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;627:7489:15:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:117;443:1;440;433:12;457:117;566:1;563;556:12;580:102;621:6;672:2;668:7;663:2;656:5;652:14;648:28;638:38;;580:102;;;:::o;688:180::-;736:77;733:1;726:88;833:4;830:1;823:15;857:4;854:1;847:15;874:281;957:27;979:4;957:27;:::i;:::-;949:6;945:40;1087:6;1075:10;1072:22;1051:18;1039:10;1036:34;1033:62;1030:88;;;1098:18;;:::i;:::-;1030:88;1138:10;1134:2;1127:22;917:238;874:281;;:::o;1161:129::-;1195:6;1222:20;;:::i;:::-;1212:30;;1251:33;1279:4;1271:6;1251:33;:::i;:::-;1161:129;;;:::o;1296:308::-;1358:4;1448:18;1440:6;1437:30;1434:56;;;1470:18;;:::i;:::-;1434:56;1508:29;1530:6;1508:29;:::i;:::-;1500:37;;1592:4;1586;1582:15;1574:23;;1296:308;;;:::o;1610:307::-;1678:1;1688:113;1702:6;1699:1;1696:13;1688:113;;;1787:1;1782:3;1778:11;1772:18;1768:1;1763:3;1759:11;1752:39;1724:2;1721:1;1717:10;1712:15;;1688:113;;;1819:6;1816:1;1813:13;1810:101;;;1899:1;1890:6;1885:3;1881:16;1874:27;1810:101;1659:258;1610:307;;;:::o;1923:421::-;2012:5;2037:66;2053:49;2095:6;2053:49;:::i;:::-;2037:66;:::i;:::-;2028:75;;2126:6;2119:5;2112:21;2164:4;2157:5;2153:16;2202:3;2193:6;2188:3;2184:16;2181:25;2178:112;;;2209:79;;:::i;:::-;2178:112;2299:39;2331:6;2326:3;2321;2299:39;:::i;:::-;2018:326;1923:421;;;;;:::o;2364:355::-;2431:5;2480:3;2473:4;2465:6;2461:17;2457:27;2447:122;;2488:79;;:::i;:::-;2447:122;2598:6;2592:13;2623:90;2709:3;2701:6;2694:4;2686:6;2682:17;2623:90;:::i;:::-;2614:99;;2437:282;2364:355;;;;:::o;2725:524::-;2805:6;2854:2;2842:9;2833:7;2829:23;2825:32;2822:119;;;2860:79;;:::i;:::-;2822:119;3001:1;2990:9;2986:17;2980:24;3031:18;3023:6;3020:30;3017:117;;;3053:79;;:::i;:::-;3017:117;3158:74;3224:7;3215:6;3204:9;3200:22;3158:74;:::i;:::-;3148:84;;2951:291;2725:524;;;;:::o;3255:180::-;3303:77;3300:1;3293:88;3400:4;3397:1;3390:15;3424:4;3421:1;3414:15;3441:320;3485:6;3522:1;3516:4;3512:12;3502:22;;3569:1;3563:4;3559:12;3590:18;3580:81;;3646:4;3638:6;3634:17;3624:27;;3580:81;3708:2;3700:6;3697:14;3677:18;3674:38;3671:84;;;3727:18;;:::i;:::-;3671:84;3492:269;3441:320;;;:::o;627:7489:15:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@BUYER_ROLE_3234":{"entryPoint":4347,"id":3234,"parameterSlots":0,"returnSlots":0},"@DEFAULT_ADMIN_ROLE_27":{"entryPoint":4689,"id":27,"parameterSlots":0,"returnSlots":0},"@SELLER_ROLE_3224":{"entryPoint":6141,"id":3224,"parameterSlots":0,"returnSlots":0},"@TRADER_ROLE_3229":{"entryPoint":6220,"id":3229,"parameterSlots":0,"returnSlots":0},"@_addCurrency_3056":{"entryPoint":8050,"id":3056,"parameterSlots":2,"returnSlots":0},"@_add_2342":{"entryPoint":8875,"id":2342,"parameterSlots":2,"returnSlots":1},"@_at_2476":{"entryPoint":8610,"id":2476,"parameterSlots":2,"returnSlots":1},"@_baseURI_3310":{"entryPoint":7180,"id":3310,"parameterSlots":0,"returnSlots":1},"@_checkRole_131":{"entryPoint":8477,"id":131,"parameterSlots":2,"returnSlots":0},"@_checkRole_92":{"entryPoint":6524,"id":92,"parameterSlots":1,"returnSlots":0},"@_contains_2445":{"entryPoint":9650,"id":2445,"parameterSlots":2,"returnSlots":1},"@_createtrade_3397":{"entryPoint":7960,"id":3397,"parameterSlots":7,"returnSlots":0},"@_grantRole_283":{"entryPoint":6544,"id":283,"parameterSlots":2,"returnSlots":0},"@_length_2459":{"entryPoint":8653,"id":2459,"parameterSlots":1,"returnSlots":1},"@_msgSender_1203":{"entryPoint":6768,"id":1203,"parameterSlots":0,"returnSlots":1},"@_removeCurrency_3084":{"entryPoint":8290,"id":3084,"parameterSlots":1,"returnSlots":0},"@_remove_2426":{"entryPoint":9685,"id":2426,"parameterSlots":2,"returnSlots":1},"@_revokeRole_314":{"entryPoint":6776,"id":314,"parameterSlots":2,"returnSlots":0},"@addCurrency_3326":{"entryPoint":6080,"id":3326,"parameterSlots":2,"returnSlots":0},"@add_2512":{"entryPoint":8987,"id":2512,"parameterSlots":2,"returnSlots":1},"@add_2793":{"entryPoint":8024,"id":2793,"parameterSlots":2,"returnSlots":1},"@addressCurrency_3096":{"entryPoint":3511,"id":3096,"parameterSlots":1,"returnSlots":1},"@agreeToTrade_3686":{"entryPoint":2024,"id":3686,"parameterSlots":1,"returnSlots":0},"@allCurrenciesAllowed_3165":{"entryPoint":4725,"id":3165,"parameterSlots":0,"returnSlots":1},"@allTradingNumbers_3954":{"entryPoint":5906,"id":3954,"parameterSlots":0,"returnSlots":1},"@at_2581":{"entryPoint":7523,"id":2581,"parameterSlots":2,"returnSlots":1},"@at_2871":{"entryPoint":7476,"id":2871,"parameterSlots":2,"returnSlots":1},"@batchDetailsTrades_4004":{"entryPoint":3572,"id":4004,"parameterSlots":1,"returnSlots":1},"@createtrade_3567":{"entryPoint":4976,"id":3567,"parameterSlots":6,"returnSlots":0},"@getRoleAdmin_146":{"entryPoint":1378,"id":146,"parameterSlots":1,"returnSlots":1},"@getTradingHash_3905":{"entryPoint":4489,"id":3905,"parameterSlots":1,"returnSlots":1},"@grantRole_166":{"entryPoint":1820,"id":166,"parameterSlots":2,"returnSlots":0},"@hasRole_79":{"entryPoint":4383,"id":79,"parameterSlots":2,"returnSlots":1},"@isAcceptTrading_4248":{"entryPoint":6394,"id":4248,"parameterSlots":1,"returnSlots":1},"@isTradingBlHashEmpty_4290":{"entryPoint":6421,"id":4290,"parameterSlots":1,"returnSlots":1},"@isVerifyBl_4314":{"entryPoint":7121,"id":4314,"parameterSlots":1,"returnSlots":1},"@length_2563":{"entryPoint":7502,"id":2563,"parameterSlots":1,"returnSlots":1},"@length_2850":{"entryPoint":8269,"id":2850,"parameterSlots":1,"returnSlots":1},"@peelTradeNumber_4188":{"entryPoint":6362,"id":4188,"parameterSlots":1,"returnSlots":1},"@removeCurrency_3339":{"entryPoint":6194,"id":3339,"parameterSlots":1,"returnSlots":0},"@remove_2530":{"entryPoint":9010,"id":2530,"parameterSlots":2,"returnSlots":1},"@renounceRole_209":{"entryPoint":1853,"id":209,"parameterSlots":2,"returnSlots":0},"@revokeRole_186":{"entryPoint":6108,"id":186,"parameterSlots":2,"returnSlots":0},"@setAcceptTrading_4104":{"entryPoint":7075,"id":4104,"parameterSlots":1,"returnSlots":0},"@setTradingBL_4119":{"entryPoint":6495,"id":4119,"parameterSlots":2,"returnSlots":0},"@setVerifyTradingBL_4132":{"entryPoint":7148,"id":4132,"parameterSlots":1,"returnSlots":0},"@set_4091":{"entryPoint":8670,"id":4091,"parameterSlots":8,"returnSlots":0},"@supportsInterface_1411":{"entryPoint":6256,"id":1411,"parameterSlots":1,"returnSlots":1},"@supportsInterface_60":{"entryPoint":1256,"id":60,"parameterSlots":1,"returnSlots":1},"@toHexString_1367":{"entryPoint":9078,"id":1367,"parameterSlots":2,"returnSlots":1},"@toHexString_1387":{"entryPoint":9033,"id":1387,"parameterSlots":1,"returnSlots":1},"@totalTradesNumberByIndex_3362":{"entryPoint":4696,"id":3362,"parameterSlots":1,"returnSlots":1},"@totalTrades_3349":{"entryPoint":6177,"id":3349,"parameterSlots":0,"returnSlots":1},"@tradingBlHash_4272":{"entryPoint":7326,"id":4272,"parameterSlots":1,"returnSlots":1},"@tradingCurrency_4260":{"entryPoint":7061,"id":4260,"parameterSlots":1,"returnSlots":1},"@tradingDetails_3855":{"entryPoint":4912,"id":3855,"parameterSlots":1,"returnSlots":7},"@tradingDetails_4169":{"entryPoint":7546,"id":4169,"parameterSlots":1,"returnSlots":7},"@tradingFromAddress_4224":{"entryPoint":6449,"id":4224,"parameterSlots":1,"returnSlots":1},"@tradingToAddress_4236":{"entryPoint":7015,"id":4236,"parameterSlots":1,"returnSlots":1},"@tradingTotalAmount_4212":{"entryPoint":7107,"id":4212,"parameterSlots":1,"returnSlots":1},"@tradingType_4302":{"entryPoint":7001,"id":4302,"parameterSlots":1,"returnSlots":1},"@updateBL_3747":{"entryPoint":1409,"id":3747,"parameterSlots":2,"returnSlots":0},"@updateBaseUri_3302":{"entryPoint":1984,"id":3302,"parameterSlots":1,"returnSlots":0},"@verifyBL_3829":{"entryPoint":2875,"id":3829,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11445,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":10874,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":11151,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11550,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool_fromMemory":{"entryPoint":13404,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes32":{"entryPoint":10498,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bytes4":{"entryPoint":10345,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":10940,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":10639,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11596,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bool_fromMemory":{"entryPoint":13425,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32":{"entryPoint":10519,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_bytes32t_address":{"entryPoint":11172,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_bytes4":{"entryPoint":10366,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_string_memory_ptr":{"entryPoint":11236,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256":{"entryPoint":11309,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_uint256t_string_memory_ptr":{"entryPoint":10986,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_uint256t_string_memory_ptrt_bytes32t_addresst_uint256t_uint256":{"entryPoint":12802,"id":null,"parameterSlots":2,"returnSlots":6},"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32":{"entryPoint":12512,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_trading_$4028_memory_ptr_to_t_struct$_trading_$4028_memory_ptr":{"entryPoint":12134,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":13015,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":11879,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":11354,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":12549,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":12167,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":13052,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":11894,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":10423,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32":{"entryPoint":11864,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bytes32_to_t_bytes32_fromStack":{"entryPoint":10564,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":11807,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":12335,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13786,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack":{"entryPoint":14486,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_5da3a95acc8e6d5ca7b18b60537d16a9f25cf79235d81231c4e562d800763437_to_t_string_memory_ptr_fromStack":{"entryPoint":13950,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":14134,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack":{"entryPoint":13259,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_trading_$4028_memory_ptr_to_t_struct$_trading_$4028_memory_ptr":{"entryPoint":11909,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":11713,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":12426,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":13835,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed":{"entryPoint":14169,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":11369,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed":{"entryPoint":13326,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed":{"entryPoint":13470,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12643,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":12284,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13146,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":10438,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed":{"entryPoint":10579,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12392,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14521,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_5da3a95acc8e6d5ca7b18b60537d16a9f25cf79235d81231c4e562d800763437__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13985,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":13294,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":12441,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_bytes32_t_address_t_address_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_bytes32_t_address_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed":{"entryPoint":12677,"id":null,"parameterSlots":8,"returnSlots":1},"allocate_memory":{"entryPoint":10783,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":10258,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":11396,"id":null,"parameterSlots":1,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":10810,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":12496,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr":{"entryPoint":11697,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12999,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":12468,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr":{"entryPoint":11669,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12971,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":11728,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr":{"entryPoint":12536,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr":{"entryPoint":12154,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":13039,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack":{"entryPoint":12479,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":11680,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack":{"entryPoint":12982,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":11739,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":12318,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack":{"entryPoint":13775,"id":null,"parameterSlots":2,"returnSlots":1},"checked_add_t_uint256":{"entryPoint":14317,"id":null,"parameterSlots":2,"returnSlots":1},"checked_mul_t_uint256":{"entryPoint":14227,"id":null,"parameterSlots":2,"returnSlots":1},"checked_sub_t_uint256":{"entryPoint":14553,"id":null,"parameterSlots":2,"returnSlots":1},"cleanup_t_address":{"entryPoint":11110,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":10411,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes32":{"entryPoint":10465,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bytes4":{"entryPoint":10278,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":11078,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":10606,"id":null,"parameterSlots":1,"returnSlots":1},"copy_calldata_to_memory":{"entryPoint":10859,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory":{"entryPoint":11756,"id":null,"parameterSlots":3,"returnSlots":0},"decrement_t_uint256":{"entryPoint":14403,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":13605,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":10734,"id":null,"parameterSlots":2,"returnSlots":0},"increment_t_uint256":{"entryPoint":13702,"id":null,"parameterSlots":1,"returnSlots":1},"panic_error_0x11":{"entryPoint":13655,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x22":{"entryPoint":13558,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x31":{"entryPoint":14605,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":13511,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":10687,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":10660,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef":{"entryPoint":11440,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":10665,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":10273,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":10268,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":10670,"id":null,"parameterSlots":1,"returnSlots":1},"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2":{"entryPoint":14445,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_5da3a95acc8e6d5ca7b18b60537d16a9f25cf79235d81231c4e562d800763437":{"entryPoint":13871,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874":{"entryPoint":14017,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69":{"entryPoint":14093,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b":{"entryPoint":13180,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_address":{"entryPoint":11128,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":13381,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes32":{"entryPoint":10475,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bytes4":{"entryPoint":10322,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":10616,"id":null,"parameterSlots":1,"returnSlots":0}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:33540:17","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:17","statements":[{"nodeType":"YulAssignment","src":"57:19:17","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:17","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:17"},"nodeType":"YulFunctionCall","src":"67:9:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:17"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:17","type":""}],"src":"7:75:17"},{"body":{"nodeType":"YulBlock","src":"177:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:17"},"nodeType":"YulFunctionCall","src":"187:12:17"},"nodeType":"YulExpressionStatement","src":"187:12:17"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:17"},{"body":{"nodeType":"YulBlock","src":"300:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:17"},"nodeType":"YulFunctionCall","src":"310:12:17"},"nodeType":"YulExpressionStatement","src":"310:12:17"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:17"},{"body":{"nodeType":"YulBlock","src":"378:105:17","statements":[{"nodeType":"YulAssignment","src":"388:89:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"403:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"410:66:17","type":"","value":"0xffffffff00000000000000000000000000000000000000000000000000000000"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"399:3:17"},"nodeType":"YulFunctionCall","src":"399:78:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"388:7:17"}]}]},"name":"cleanup_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"360:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"370:7:17","type":""}],"src":"334:149:17"},{"body":{"nodeType":"YulBlock","src":"531:78:17","statements":[{"body":{"nodeType":"YulBlock","src":"587:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"596:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"599:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"589:6:17"},"nodeType":"YulFunctionCall","src":"589:12:17"},"nodeType":"YulExpressionStatement","src":"589:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"554:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"578:5:17"}],"functionName":{"name":"cleanup_t_bytes4","nodeType":"YulIdentifier","src":"561:16:17"},"nodeType":"YulFunctionCall","src":"561:23:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"551:2:17"},"nodeType":"YulFunctionCall","src":"551:34:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"544:6:17"},"nodeType":"YulFunctionCall","src":"544:42:17"},"nodeType":"YulIf","src":"541:62:17"}]},"name":"validator_revert_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"524:5:17","type":""}],"src":"489:120:17"},{"body":{"nodeType":"YulBlock","src":"666:86:17","statements":[{"nodeType":"YulAssignment","src":"676:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"698:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"685:12:17"},"nodeType":"YulFunctionCall","src":"685:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"676:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"740:5:17"}],"functionName":{"name":"validator_revert_t_bytes4","nodeType":"YulIdentifier","src":"714:25:17"},"nodeType":"YulFunctionCall","src":"714:32:17"},"nodeType":"YulExpressionStatement","src":"714:32:17"}]},"name":"abi_decode_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"644:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"652:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"660:5:17","type":""}],"src":"615:137:17"},{"body":{"nodeType":"YulBlock","src":"823:262:17","statements":[{"body":{"nodeType":"YulBlock","src":"869:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"871:77:17"},"nodeType":"YulFunctionCall","src":"871:79:17"},"nodeType":"YulExpressionStatement","src":"871:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"844:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"853:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"840:3:17"},"nodeType":"YulFunctionCall","src":"840:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"865:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"836:3:17"},"nodeType":"YulFunctionCall","src":"836:32:17"},"nodeType":"YulIf","src":"833:119:17"},{"nodeType":"YulBlock","src":"962:116:17","statements":[{"nodeType":"YulVariableDeclaration","src":"977:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"991:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"981:6:17","type":""}]},{"nodeType":"YulAssignment","src":"1006:62:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1040:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"1051:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1036:3:17"},"nodeType":"YulFunctionCall","src":"1036:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1060:7:17"}],"functionName":{"name":"abi_decode_t_bytes4","nodeType":"YulIdentifier","src":"1016:19:17"},"nodeType":"YulFunctionCall","src":"1016:52:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1006:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes4","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"793:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"804:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"816:6:17","type":""}],"src":"758:327:17"},{"body":{"nodeType":"YulBlock","src":"1133:48:17","statements":[{"nodeType":"YulAssignment","src":"1143:32:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1168:5:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1161:6:17"},"nodeType":"YulFunctionCall","src":"1161:13:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1154:6:17"},"nodeType":"YulFunctionCall","src":"1154:21:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1143:7:17"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1115:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1125:7:17","type":""}],"src":"1091:90:17"},{"body":{"nodeType":"YulBlock","src":"1246:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1263:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1283:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"1268:14:17"},"nodeType":"YulFunctionCall","src":"1268:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1256:6:17"},"nodeType":"YulFunctionCall","src":"1256:34:17"},"nodeType":"YulExpressionStatement","src":"1256:34:17"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1234:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1241:3:17","type":""}],"src":"1187:109:17"},{"body":{"nodeType":"YulBlock","src":"1394:118:17","statements":[{"nodeType":"YulAssignment","src":"1404:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1416:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1427:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1412:3:17"},"nodeType":"YulFunctionCall","src":"1412:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"1404:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"1478:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1491:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"1502:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1487:3:17"},"nodeType":"YulFunctionCall","src":"1487:17:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"1440:37:17"},"nodeType":"YulFunctionCall","src":"1440:65:17"},"nodeType":"YulExpressionStatement","src":"1440:65:17"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1366:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"1378:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"1389:4:17","type":""}],"src":"1302:210:17"},{"body":{"nodeType":"YulBlock","src":"1563:32:17","statements":[{"nodeType":"YulAssignment","src":"1573:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"1584:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"1573:7:17"}]}]},"name":"cleanup_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1545:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"1555:7:17","type":""}],"src":"1518:77:17"},{"body":{"nodeType":"YulBlock","src":"1644:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"1701:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1710:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1713:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1703:6:17"},"nodeType":"YulFunctionCall","src":"1703:12:17"},"nodeType":"YulExpressionStatement","src":"1703:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1667:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1692:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"1674:17:17"},"nodeType":"YulFunctionCall","src":"1674:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"1664:2:17"},"nodeType":"YulFunctionCall","src":"1664:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"1657:6:17"},"nodeType":"YulFunctionCall","src":"1657:43:17"},"nodeType":"YulIf","src":"1654:63:17"}]},"name":"validator_revert_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1637:5:17","type":""}],"src":"1601:122:17"},{"body":{"nodeType":"YulBlock","src":"1781:87:17","statements":[{"nodeType":"YulAssignment","src":"1791:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1813:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1800:12:17"},"nodeType":"YulFunctionCall","src":"1800:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1791:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1856:5:17"}],"functionName":{"name":"validator_revert_t_bytes32","nodeType":"YulIdentifier","src":"1829:26:17"},"nodeType":"YulFunctionCall","src":"1829:33:17"},"nodeType":"YulExpressionStatement","src":"1829:33:17"}]},"name":"abi_decode_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1759:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"1767:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1775:5:17","type":""}],"src":"1729:139:17"},{"body":{"nodeType":"YulBlock","src":"1940:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"1986:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1988:77:17"},"nodeType":"YulFunctionCall","src":"1988:79:17"},"nodeType":"YulExpressionStatement","src":"1988:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1961:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"1970:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1957:3:17"},"nodeType":"YulFunctionCall","src":"1957:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"1982:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1953:3:17"},"nodeType":"YulFunctionCall","src":"1953:32:17"},"nodeType":"YulIf","src":"1950:119:17"},{"nodeType":"YulBlock","src":"2079:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"2094:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"2108:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"2098:6:17","type":""}]},{"nodeType":"YulAssignment","src":"2123:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2158:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"2169:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2154:3:17"},"nodeType":"YulFunctionCall","src":"2154:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"2178:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"2133:20:17"},"nodeType":"YulFunctionCall","src":"2133:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"2123:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1910:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1921:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1933:6:17","type":""}],"src":"1874:329:17"},{"body":{"nodeType":"YulBlock","src":"2274:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2291:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2314:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"2296:17:17"},"nodeType":"YulFunctionCall","src":"2296:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2284:6:17"},"nodeType":"YulFunctionCall","src":"2284:37:17"},"nodeType":"YulExpressionStatement","src":"2284:37:17"}]},"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2262:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2269:3:17","type":""}],"src":"2209:118:17"},{"body":{"nodeType":"YulBlock","src":"2431:124:17","statements":[{"nodeType":"YulAssignment","src":"2441:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2453:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2464:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2449:3:17"},"nodeType":"YulFunctionCall","src":"2449:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"2441:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"2521:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"2534:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"2545:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2530:3:17"},"nodeType":"YulFunctionCall","src":"2530:17:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"2477:43:17"},"nodeType":"YulFunctionCall","src":"2477:71:17"},"nodeType":"YulExpressionStatement","src":"2477:71:17"}]},"name":"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"2403:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"2415:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"2426:4:17","type":""}],"src":"2333:222:17"},{"body":{"nodeType":"YulBlock","src":"2606:32:17","statements":[{"nodeType":"YulAssignment","src":"2616:16:17","value":{"name":"value","nodeType":"YulIdentifier","src":"2627:5:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2616:7:17"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2588:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2598:7:17","type":""}],"src":"2561:77:17"},{"body":{"nodeType":"YulBlock","src":"2687:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"2744:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2753:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"2756:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"2746:6:17"},"nodeType":"YulFunctionCall","src":"2746:12:17"},"nodeType":"YulExpressionStatement","src":"2746:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2710:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2735:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"2717:17:17"},"nodeType":"YulFunctionCall","src":"2717:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"2707:2:17"},"nodeType":"YulFunctionCall","src":"2707:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2700:6:17"},"nodeType":"YulFunctionCall","src":"2700:43:17"},"nodeType":"YulIf","src":"2697:63:17"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2680:5:17","type":""}],"src":"2644:122:17"},{"body":{"nodeType":"YulBlock","src":"2824:87:17","statements":[{"nodeType":"YulAssignment","src":"2834:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"2856:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"2843:12:17"},"nodeType":"YulFunctionCall","src":"2843:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"2834:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2899:5:17"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"2872:26:17"},"nodeType":"YulFunctionCall","src":"2872:33:17"},"nodeType":"YulExpressionStatement","src":"2872:33:17"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"2802:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"2810:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"2818:5:17","type":""}],"src":"2772:139:17"},{"body":{"nodeType":"YulBlock","src":"3006:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3023:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3026:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3016:6:17"},"nodeType":"YulFunctionCall","src":"3016:12:17"},"nodeType":"YulExpressionStatement","src":"3016:12:17"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"2917:117:17"},{"body":{"nodeType":"YulBlock","src":"3129:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3146:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3149:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3139:6:17"},"nodeType":"YulFunctionCall","src":"3139:12:17"},"nodeType":"YulExpressionStatement","src":"3139:12:17"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"3040:117:17"},{"body":{"nodeType":"YulBlock","src":"3211:54:17","statements":[{"nodeType":"YulAssignment","src":"3221:38:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3239:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"3246:2:17","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3235:3:17"},"nodeType":"YulFunctionCall","src":"3235:14:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3255:2:17","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"3251:3:17"},"nodeType":"YulFunctionCall","src":"3251:7:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"3231:3:17"},"nodeType":"YulFunctionCall","src":"3231:28:17"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"3221:6:17"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3194:5:17","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"3204:6:17","type":""}],"src":"3163:102:17"},{"body":{"nodeType":"YulBlock","src":"3299:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3316:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3319:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3309:6:17"},"nodeType":"YulFunctionCall","src":"3309:88:17"},"nodeType":"YulExpressionStatement","src":"3309:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3413:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"3416:4:17","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3406:6:17"},"nodeType":"YulFunctionCall","src":"3406:15:17"},"nodeType":"YulExpressionStatement","src":"3406:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3437:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"3440:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"3430:6:17"},"nodeType":"YulFunctionCall","src":"3430:15:17"},"nodeType":"YulExpressionStatement","src":"3430:15:17"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"3271:180:17"},{"body":{"nodeType":"YulBlock","src":"3500:238:17","statements":[{"nodeType":"YulVariableDeclaration","src":"3510:58:17","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3532:6:17"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"3562:4:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"3540:21:17"},"nodeType":"YulFunctionCall","src":"3540:27:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3528:3:17"},"nodeType":"YulFunctionCall","src":"3528:40:17"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"3514:10:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"3679:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"3681:16:17"},"nodeType":"YulFunctionCall","src":"3681:18:17"},"nodeType":"YulExpressionStatement","src":"3681:18:17"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3622:10:17"},{"kind":"number","nodeType":"YulLiteral","src":"3634:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"3619:2:17"},"nodeType":"YulFunctionCall","src":"3619:34:17"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3658:10:17"},{"name":"memPtr","nodeType":"YulIdentifier","src":"3670:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"3655:2:17"},"nodeType":"YulFunctionCall","src":"3655:22:17"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"3616:2:17"},"nodeType":"YulFunctionCall","src":"3616:62:17"},"nodeType":"YulIf","src":"3613:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"3717:2:17","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"3721:10:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3710:6:17"},"nodeType":"YulFunctionCall","src":"3710:22:17"},"nodeType":"YulExpressionStatement","src":"3710:22:17"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"3486:6:17","type":""},{"name":"size","nodeType":"YulTypedName","src":"3494:4:17","type":""}],"src":"3457:281:17"},{"body":{"nodeType":"YulBlock","src":"3785:88:17","statements":[{"nodeType":"YulAssignment","src":"3795:30:17","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"3805:18:17"},"nodeType":"YulFunctionCall","src":"3805:20:17"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3795:6:17"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"3854:6:17"},{"name":"size","nodeType":"YulIdentifier","src":"3862:4:17"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"3834:19:17"},"nodeType":"YulFunctionCall","src":"3834:33:17"},"nodeType":"YulExpressionStatement","src":"3834:33:17"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"3769:4:17","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"3778:6:17","type":""}],"src":"3744:129:17"},{"body":{"nodeType":"YulBlock","src":"3946:241:17","statements":[{"body":{"nodeType":"YulBlock","src":"4051:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"4053:16:17"},"nodeType":"YulFunctionCall","src":"4053:18:17"},"nodeType":"YulExpressionStatement","src":"4053:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4023:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4031:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4020:2:17"},"nodeType":"YulFunctionCall","src":"4020:30:17"},"nodeType":"YulIf","src":"4017:56:17"},{"nodeType":"YulAssignment","src":"4083:37:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4113:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"4091:21:17"},"nodeType":"YulFunctionCall","src":"4091:29:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4083:4:17"}]},{"nodeType":"YulAssignment","src":"4157:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"4169:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"4175:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4165:3:17"},"nodeType":"YulFunctionCall","src":"4165:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"4157:4:17"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"3930:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"3941:4:17","type":""}],"src":"3879:308:17"},{"body":{"nodeType":"YulBlock","src":"4244:103:17","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4267:3:17"},{"name":"src","nodeType":"YulIdentifier","src":"4272:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4277:6:17"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"4254:12:17"},"nodeType":"YulFunctionCall","src":"4254:30:17"},"nodeType":"YulExpressionStatement","src":"4254:30:17"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"4325:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4330:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4321:3:17"},"nodeType":"YulFunctionCall","src":"4321:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"4339:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4314:6:17"},"nodeType":"YulFunctionCall","src":"4314:27:17"},"nodeType":"YulExpressionStatement","src":"4314:27:17"}]},"name":"copy_calldata_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4226:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"4231:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4236:6:17","type":""}],"src":"4193:154:17"},{"body":{"nodeType":"YulBlock","src":"4437:328:17","statements":[{"nodeType":"YulAssignment","src":"4447:75:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"4514:6:17"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"4472:41:17"},"nodeType":"YulFunctionCall","src":"4472:49:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"4456:15:17"},"nodeType":"YulFunctionCall","src":"4456:66:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"4447:5:17"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4538:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"4545:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"4531:6:17"},"nodeType":"YulFunctionCall","src":"4531:21:17"},"nodeType":"YulExpressionStatement","src":"4531:21:17"},{"nodeType":"YulVariableDeclaration","src":"4561:27:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"4576:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"4583:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4572:3:17"},"nodeType":"YulFunctionCall","src":"4572:16:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"4565:3:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"4626:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"4628:77:17"},"nodeType":"YulFunctionCall","src":"4628:79:17"},"nodeType":"YulExpressionStatement","src":"4628:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4607:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4612:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4603:3:17"},"nodeType":"YulFunctionCall","src":"4603:16:17"},{"name":"end","nodeType":"YulIdentifier","src":"4621:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"4600:2:17"},"nodeType":"YulFunctionCall","src":"4600:25:17"},"nodeType":"YulIf","src":"4597:112:17"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"4742:3:17"},{"name":"dst","nodeType":"YulIdentifier","src":"4747:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"4752:6:17"}],"functionName":{"name":"copy_calldata_to_memory","nodeType":"YulIdentifier","src":"4718:23:17"},"nodeType":"YulFunctionCall","src":"4718:41:17"},"nodeType":"YulExpressionStatement","src":"4718:41:17"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"4410:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"4415:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4423:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4431:5:17","type":""}],"src":"4353:412:17"},{"body":{"nodeType":"YulBlock","src":"4847:278:17","statements":[{"body":{"nodeType":"YulBlock","src":"4896:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"4898:77:17"},"nodeType":"YulFunctionCall","src":"4898:79:17"},"nodeType":"YulExpressionStatement","src":"4898:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"4875:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"4883:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4871:3:17"},"nodeType":"YulFunctionCall","src":"4871:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"4890:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"4867:3:17"},"nodeType":"YulFunctionCall","src":"4867:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"4860:6:17"},"nodeType":"YulFunctionCall","src":"4860:35:17"},"nodeType":"YulIf","src":"4857:122:17"},{"nodeType":"YulVariableDeclaration","src":"4988:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5015:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5002:12:17"},"nodeType":"YulFunctionCall","src":"5002:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"4992:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5031:88:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5092:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5100:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5088:3:17"},"nodeType":"YulFunctionCall","src":"5088:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"5107:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"5115:3:17"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5040:47:17"},"nodeType":"YulFunctionCall","src":"5040:79:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"5031:5:17"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"4825:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"4833:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"4841:5:17","type":""}],"src":"4785:340:17"},{"body":{"nodeType":"YulBlock","src":"5224:561:17","statements":[{"body":{"nodeType":"YulBlock","src":"5270:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"5272:77:17"},"nodeType":"YulFunctionCall","src":"5272:79:17"},"nodeType":"YulExpressionStatement","src":"5272:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"5245:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"5254:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5241:3:17"},"nodeType":"YulFunctionCall","src":"5241:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"5266:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"5237:3:17"},"nodeType":"YulFunctionCall","src":"5237:32:17"},"nodeType":"YulIf","src":"5234:119:17"},{"nodeType":"YulBlock","src":"5363:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5378:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"5392:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5382:6:17","type":""}]},{"nodeType":"YulAssignment","src":"5407:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5442:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5453:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5438:3:17"},"nodeType":"YulFunctionCall","src":"5438:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5462:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"5417:20:17"},"nodeType":"YulFunctionCall","src":"5417:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"5407:6:17"}]}]},{"nodeType":"YulBlock","src":"5490:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"5505:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5536:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"5547:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5532:3:17"},"nodeType":"YulFunctionCall","src":"5532:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"5519:12:17"},"nodeType":"YulFunctionCall","src":"5519:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"5509:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"5598:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"5600:77:17"},"nodeType":"YulFunctionCall","src":"5600:79:17"},"nodeType":"YulExpressionStatement","src":"5600:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"5570:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"5578:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"5567:2:17"},"nodeType":"YulFunctionCall","src":"5567:30:17"},"nodeType":"YulIf","src":"5564:117:17"},{"nodeType":"YulAssignment","src":"5695:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"5740:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"5751:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5736:3:17"},"nodeType":"YulFunctionCall","src":"5736:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"5760:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5705:30:17"},"nodeType":"YulFunctionCall","src":"5705:63:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"5695:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"5186:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"5197:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"5209:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"5217:6:17","type":""}],"src":"5131:654:17"},{"body":{"nodeType":"YulBlock","src":"5836:81:17","statements":[{"nodeType":"YulAssignment","src":"5846:65:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5861:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"5868:42:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"5857:3:17"},"nodeType":"YulFunctionCall","src":"5857:54:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5846:7:17"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5818:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5828:7:17","type":""}],"src":"5791:126:17"},{"body":{"nodeType":"YulBlock","src":"5968:51:17","statements":[{"nodeType":"YulAssignment","src":"5978:35:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6007:5:17"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"5989:17:17"},"nodeType":"YulFunctionCall","src":"5989:24:17"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"5978:7:17"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"5950:5:17","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"5960:7:17","type":""}],"src":"5923:96:17"},{"body":{"nodeType":"YulBlock","src":"6068:79:17","statements":[{"body":{"nodeType":"YulBlock","src":"6125:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"6134:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"6137:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"6127:6:17"},"nodeType":"YulFunctionCall","src":"6127:12:17"},"nodeType":"YulExpressionStatement","src":"6127:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6091:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6116:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"6098:17:17"},"nodeType":"YulFunctionCall","src":"6098:24:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"6088:2:17"},"nodeType":"YulFunctionCall","src":"6088:35:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"6081:6:17"},"nodeType":"YulFunctionCall","src":"6081:43:17"},"nodeType":"YulIf","src":"6078:63:17"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"6061:5:17","type":""}],"src":"6025:122:17"},{"body":{"nodeType":"YulBlock","src":"6205:87:17","statements":[{"nodeType":"YulAssignment","src":"6215:29:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"6237:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"6224:12:17"},"nodeType":"YulFunctionCall","src":"6224:20:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"6215:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6280:5:17"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"6253:26:17"},"nodeType":"YulFunctionCall","src":"6253:33:17"},"nodeType":"YulExpressionStatement","src":"6253:33:17"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"6183:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"6191:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"6199:5:17","type":""}],"src":"6153:139:17"},{"body":{"nodeType":"YulBlock","src":"6381:391:17","statements":[{"body":{"nodeType":"YulBlock","src":"6427:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6429:77:17"},"nodeType":"YulFunctionCall","src":"6429:79:17"},"nodeType":"YulExpressionStatement","src":"6429:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6402:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6411:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6398:3:17"},"nodeType":"YulFunctionCall","src":"6398:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6423:2:17","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6394:3:17"},"nodeType":"YulFunctionCall","src":"6394:32:17"},"nodeType":"YulIf","src":"6391:119:17"},{"nodeType":"YulBlock","src":"6520:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6535:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6549:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6539:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6564:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6599:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6610:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6595:3:17"},"nodeType":"YulFunctionCall","src":"6595:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6619:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"6574:20:17"},"nodeType":"YulFunctionCall","src":"6574:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6564:6:17"}]}]},{"nodeType":"YulBlock","src":"6647:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"6662:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"6676:2:17","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6666:6:17","type":""}]},{"nodeType":"YulAssignment","src":"6692:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6727:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"6738:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6723:3:17"},"nodeType":"YulFunctionCall","src":"6723:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"6747:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6702:20:17"},"nodeType":"YulFunctionCall","src":"6702:53:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"6692:6:17"}]}]}]},"name":"abi_decode_tuple_t_bytes32t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6343:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6354:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6366:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6374:6:17","type":""}],"src":"6298:474:17"},{"body":{"nodeType":"YulBlock","src":"6854:433:17","statements":[{"body":{"nodeType":"YulBlock","src":"6900:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6902:77:17"},"nodeType":"YulFunctionCall","src":"6902:79:17"},"nodeType":"YulExpressionStatement","src":"6902:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6875:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"6884:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6871:3:17"},"nodeType":"YulFunctionCall","src":"6871:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"6896:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6867:3:17"},"nodeType":"YulFunctionCall","src":"6867:32:17"},"nodeType":"YulIf","src":"6864:119:17"},{"nodeType":"YulBlock","src":"6993:287:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7008:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7039:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7050:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7035:3:17"},"nodeType":"YulFunctionCall","src":"7035:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"7022:12:17"},"nodeType":"YulFunctionCall","src":"7022:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7012:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"7100:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"7102:77:17"},"nodeType":"YulFunctionCall","src":"7102:79:17"},"nodeType":"YulExpressionStatement","src":"7102:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"7072:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"7080:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"7069:2:17"},"nodeType":"YulFunctionCall","src":"7069:30:17"},"nodeType":"YulIf","src":"7066:117:17"},{"nodeType":"YulAssignment","src":"7197:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7242:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7253:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7238:3:17"},"nodeType":"YulFunctionCall","src":"7238:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7262:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"7207:30:17"},"nodeType":"YulFunctionCall","src":"7207:63:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7197:6:17"}]}]}]},"name":"abi_decode_tuple_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6824:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6835:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6847:6:17","type":""}],"src":"6778:509:17"},{"body":{"nodeType":"YulBlock","src":"7359:263:17","statements":[{"body":{"nodeType":"YulBlock","src":"7405:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7407:77:17"},"nodeType":"YulFunctionCall","src":"7407:79:17"},"nodeType":"YulExpressionStatement","src":"7407:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7380:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"7389:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7376:3:17"},"nodeType":"YulFunctionCall","src":"7376:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"7401:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7372:3:17"},"nodeType":"YulFunctionCall","src":"7372:32:17"},"nodeType":"YulIf","src":"7369:119:17"},{"nodeType":"YulBlock","src":"7498:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"7513:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"7527:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7517:6:17","type":""}]},{"nodeType":"YulAssignment","src":"7542:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7577:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"7588:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7573:3:17"},"nodeType":"YulFunctionCall","src":"7573:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7597:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7552:20:17"},"nodeType":"YulFunctionCall","src":"7552:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7542:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7329:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7340:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7352:6:17","type":""}],"src":"7293:329:17"},{"body":{"nodeType":"YulBlock","src":"7693:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7710:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7733:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"7715:17:17"},"nodeType":"YulFunctionCall","src":"7715:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7703:6:17"},"nodeType":"YulFunctionCall","src":"7703:37:17"},"nodeType":"YulExpressionStatement","src":"7703:37:17"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7681:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7688:3:17","type":""}],"src":"7628:118:17"},{"body":{"nodeType":"YulBlock","src":"7850:124:17","statements":[{"nodeType":"YulAssignment","src":"7860:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7872:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7883:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7868:3:17"},"nodeType":"YulFunctionCall","src":"7868:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7860:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7940:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7953:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"7964:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7949:3:17"},"nodeType":"YulFunctionCall","src":"7949:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"7896:43:17"},"nodeType":"YulFunctionCall","src":"7896:71:17"},"nodeType":"YulExpressionStatement","src":"7896:71:17"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7822:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7834:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7845:4:17","type":""}],"src":"7752:222:17"},{"body":{"nodeType":"YulBlock","src":"8062:229:17","statements":[{"body":{"nodeType":"YulBlock","src":"8167:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"8169:16:17"},"nodeType":"YulFunctionCall","src":"8169:18:17"},"nodeType":"YulExpressionStatement","src":"8169:18:17"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8139:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8147:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8136:2:17"},"nodeType":"YulFunctionCall","src":"8136:30:17"},"nodeType":"YulIf","src":"8133:56:17"},{"nodeType":"YulAssignment","src":"8199:25:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8211:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8219:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8207:3:17"},"nodeType":"YulFunctionCall","src":"8207:17:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8199:4:17"}]},{"nodeType":"YulAssignment","src":"8261:23:17","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"8273:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"8279:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8269:3:17"},"nodeType":"YulFunctionCall","src":"8269:15:17"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"8261:4:17"}]}]},"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"8046:6:17","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"8057:4:17","type":""}],"src":"7980:311:17"},{"body":{"nodeType":"YulBlock","src":"8386:28:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"8403:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"8406:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"8396:6:17"},"nodeType":"YulFunctionCall","src":"8396:12:17"},"nodeType":"YulExpressionStatement","src":"8396:12:17"}]},"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulFunctionDefinition","src":"8297:117:17"},{"body":{"nodeType":"YulBlock","src":"8539:608:17","statements":[{"nodeType":"YulAssignment","src":"8549:90:17","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8631:6:17"}],"functionName":{"name":"array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"8574:56:17"},"nodeType":"YulFunctionCall","src":"8574:64:17"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"8558:15:17"},"nodeType":"YulFunctionCall","src":"8558:81:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"8549:5:17"}]},{"nodeType":"YulVariableDeclaration","src":"8648:16:17","value":{"name":"array","nodeType":"YulIdentifier","src":"8659:5:17"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"8652:3:17","type":""}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8681:5:17"},{"name":"length","nodeType":"YulIdentifier","src":"8688:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8674:6:17"},"nodeType":"YulFunctionCall","src":"8674:21:17"},"nodeType":"YulExpressionStatement","src":"8674:21:17"},{"nodeType":"YulAssignment","src":"8704:23:17","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"8715:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"8722:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8711:3:17"},"nodeType":"YulFunctionCall","src":"8711:16:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"8704:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"8737:44:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"8755:6:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"8767:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"8775:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"8763:3:17"},"nodeType":"YulFunctionCall","src":"8763:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8751:3:17"},"nodeType":"YulFunctionCall","src":"8751:30:17"},"variables":[{"name":"srcEnd","nodeType":"YulTypedName","src":"8741:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"8809:103:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef","nodeType":"YulIdentifier","src":"8823:77:17"},"nodeType":"YulFunctionCall","src":"8823:79:17"},"nodeType":"YulExpressionStatement","src":"8823:79:17"}]},"condition":{"arguments":[{"name":"srcEnd","nodeType":"YulIdentifier","src":"8796:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"8804:3:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"8793:2:17"},"nodeType":"YulFunctionCall","src":"8793:15:17"},"nodeType":"YulIf","src":"8790:122:17"},{"body":{"nodeType":"YulBlock","src":"8997:144:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9012:21:17","value":{"name":"src","nodeType":"YulIdentifier","src":"9030:3:17"},"variables":[{"name":"elementPos","nodeType":"YulTypedName","src":"9016:10:17","type":""}]},{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9054:3:17"},{"arguments":[{"name":"elementPos","nodeType":"YulIdentifier","src":"9080:10:17"},{"name":"end","nodeType":"YulIdentifier","src":"9092:3:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"9059:20:17"},"nodeType":"YulFunctionCall","src":"9059:37:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9047:6:17"},"nodeType":"YulFunctionCall","src":"9047:50:17"},"nodeType":"YulExpressionStatement","src":"9047:50:17"},{"nodeType":"YulAssignment","src":"9110:21:17","value":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"9121:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"9126:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9117:3:17"},"nodeType":"YulFunctionCall","src":"9117:14:17"},"variableNames":[{"name":"dst","nodeType":"YulIdentifier","src":"9110:3:17"}]}]},"condition":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8950:3:17"},{"name":"srcEnd","nodeType":"YulIdentifier","src":"8955:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"8947:2:17"},"nodeType":"YulFunctionCall","src":"8947:15:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"8963:25:17","statements":[{"nodeType":"YulAssignment","src":"8965:21:17","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"8976:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"8981:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8972:3:17"},"nodeType":"YulFunctionCall","src":"8972:14:17"},"variableNames":[{"name":"src","nodeType":"YulIdentifier","src":"8965:3:17"}]}]},"pre":{"nodeType":"YulBlock","src":"8925:21:17","statements":[{"nodeType":"YulVariableDeclaration","src":"8927:17:17","value":{"name":"offset","nodeType":"YulIdentifier","src":"8938:6:17"},"variables":[{"name":"src","nodeType":"YulTypedName","src":"8931:3:17","type":""}]}]},"src":"8921:220:17"}]},"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"8509:6:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"8517:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"8525:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"8533:5:17","type":""}],"src":"8437:710:17"},{"body":{"nodeType":"YulBlock","src":"9247:293:17","statements":[{"body":{"nodeType":"YulBlock","src":"9296:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"9298:77:17"},"nodeType":"YulFunctionCall","src":"9298:79:17"},"nodeType":"YulExpressionStatement","src":"9298:79:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9275:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9283:4:17","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9271:3:17"},"nodeType":"YulFunctionCall","src":"9271:17:17"},{"name":"end","nodeType":"YulIdentifier","src":"9290:3:17"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9267:3:17"},"nodeType":"YulFunctionCall","src":"9267:27:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"9260:6:17"},"nodeType":"YulFunctionCall","src":"9260:35:17"},"nodeType":"YulIf","src":"9257:122:17"},{"nodeType":"YulVariableDeclaration","src":"9388:34:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9415:6:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9402:12:17"},"nodeType":"YulFunctionCall","src":"9402:20:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"9392:6:17","type":""}]},{"nodeType":"YulAssignment","src":"9431:103:17","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9507:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9515:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9503:3:17"},"nodeType":"YulFunctionCall","src":"9503:17:17"},{"name":"length","nodeType":"YulIdentifier","src":"9522:6:17"},{"name":"end","nodeType":"YulIdentifier","src":"9530:3:17"}],"functionName":{"name":"abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9440:62:17"},"nodeType":"YulFunctionCall","src":"9440:94:17"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"9431:5:17"}]}]},"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"9225:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"9233:3:17","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"9241:5:17","type":""}],"src":"9170:370:17"},{"body":{"nodeType":"YulBlock","src":"9637:448:17","statements":[{"body":{"nodeType":"YulBlock","src":"9683:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"9685:77:17"},"nodeType":"YulFunctionCall","src":"9685:79:17"},"nodeType":"YulExpressionStatement","src":"9685:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"9658:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"9667:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9654:3:17"},"nodeType":"YulFunctionCall","src":"9654:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"9679:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"9650:3:17"},"nodeType":"YulFunctionCall","src":"9650:32:17"},"nodeType":"YulIf","src":"9647:119:17"},{"nodeType":"YulBlock","src":"9776:302:17","statements":[{"nodeType":"YulVariableDeclaration","src":"9791:45:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"9822:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"9833:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9818:3:17"},"nodeType":"YulFunctionCall","src":"9818:17:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"9805:12:17"},"nodeType":"YulFunctionCall","src":"9805:31:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"9795:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"9883:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"9885:77:17"},"nodeType":"YulFunctionCall","src":"9885:79:17"},"nodeType":"YulExpressionStatement","src":"9885:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"9855:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"9863:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"9852:2:17"},"nodeType":"YulFunctionCall","src":"9852:30:17"},"nodeType":"YulIf","src":"9849:117:17"},{"nodeType":"YulAssignment","src":"9980:88:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"10040:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"10051:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10036:3:17"},"nodeType":"YulFunctionCall","src":"10036:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"10060:7:17"}],"functionName":{"name":"abi_decode_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"9990:45:17"},"nodeType":"YulFunctionCall","src":"9990:78:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"9980:6:17"}]}]}]},"name":"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"9607:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"9618:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"9630:6:17","type":""}],"src":"9546:539:17"},{"body":{"nodeType":"YulBlock","src":"10190:40:17","statements":[{"nodeType":"YulAssignment","src":"10201:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10217:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10211:5:17"},"nodeType":"YulFunctionCall","src":"10211:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10201:6:17"}]}]},"name":"array_length_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10173:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10183:6:17","type":""}],"src":"10091:139:17"},{"body":{"nodeType":"YulBlock","src":"10372:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10389:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"10394:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10382:6:17"},"nodeType":"YulFunctionCall","src":"10382:19:17"},"nodeType":"YulExpressionStatement","src":"10382:19:17"},{"nodeType":"YulAssignment","src":"10410:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10429:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10434:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10425:3:17"},"nodeType":"YulFunctionCall","src":"10425:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10410:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10344:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"10349:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10360:11:17","type":""}],"src":"10236:209:17"},{"body":{"nodeType":"YulBlock","src":"10548:60:17","statements":[{"nodeType":"YulAssignment","src":"10558:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"10566:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10558:4:17"}]},{"nodeType":"YulAssignment","src":"10579:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10591:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10596:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10587:3:17"},"nodeType":"YulFunctionCall","src":"10587:14:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"10579:4:17"}]}]},"name":"array_dataslot_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10535:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"10543:4:17","type":""}],"src":"10451:157:17"},{"body":{"nodeType":"YulBlock","src":"10669:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10686:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10709:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"10691:17:17"},"nodeType":"YulFunctionCall","src":"10691:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10679:6:17"},"nodeType":"YulFunctionCall","src":"10679:37:17"},"nodeType":"YulExpressionStatement","src":"10679:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10657:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10664:3:17","type":""}],"src":"10614:108:17"},{"body":{"nodeType":"YulBlock","src":"10787:40:17","statements":[{"nodeType":"YulAssignment","src":"10798:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10814:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"10808:5:17"},"nodeType":"YulFunctionCall","src":"10808:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"10798:6:17"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10770:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"10780:6:17","type":""}],"src":"10728:99:17"},{"body":{"nodeType":"YulBlock","src":"10919:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10936:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"10941:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"10929:6:17"},"nodeType":"YulFunctionCall","src":"10929:19:17"},"nodeType":"YulExpressionStatement","src":"10929:19:17"},{"nodeType":"YulAssignment","src":"10957:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10976:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"10981:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10972:3:17"},"nodeType":"YulFunctionCall","src":"10972:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"10957:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"10891:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"10896:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"10907:11:17","type":""}],"src":"10833:159:17"},{"body":{"nodeType":"YulBlock","src":"11047:258:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11057:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"11066:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11061:1:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"11126:63:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11151:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"11156:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11147:3:17"},"nodeType":"YulFunctionCall","src":"11147:11:17"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"11170:3:17"},{"name":"i","nodeType":"YulIdentifier","src":"11175:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11166:3:17"},"nodeType":"YulFunctionCall","src":"11166:11:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11160:5:17"},"nodeType":"YulFunctionCall","src":"11160:18:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11140:6:17"},"nodeType":"YulFunctionCall","src":"11140:39:17"},"nodeType":"YulExpressionStatement","src":"11140:39:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11087:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"11090:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11084:2:17"},"nodeType":"YulFunctionCall","src":"11084:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11098:19:17","statements":[{"nodeType":"YulAssignment","src":"11100:15:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11109:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"11112:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11105:3:17"},"nodeType":"YulFunctionCall","src":"11105:10:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11100:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"11080:3:17","statements":[]},"src":"11076:113:17"},{"body":{"nodeType":"YulBlock","src":"11223:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"11273:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"11278:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11269:3:17"},"nodeType":"YulFunctionCall","src":"11269:16:17"},{"kind":"number","nodeType":"YulLiteral","src":"11287:1:17","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11262:6:17"},"nodeType":"YulFunctionCall","src":"11262:27:17"},"nodeType":"YulExpressionStatement","src":"11262:27:17"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11204:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"11207:6:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"11201:2:17"},"nodeType":"YulFunctionCall","src":"11201:13:17"},"nodeType":"YulIf","src":"11198:101:17"}]},"name":"copy_memory_to_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"11029:3:17","type":""},{"name":"dst","nodeType":"YulTypedName","src":"11034:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"11039:6:17","type":""}],"src":"10998:307:17"},{"body":{"nodeType":"YulBlock","src":"11393:262:17","statements":[{"nodeType":"YulVariableDeclaration","src":"11403:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11450:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11417:32:17"},"nodeType":"YulFunctionCall","src":"11417:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"11407:6:17","type":""}]},{"nodeType":"YulAssignment","src":"11465:68:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11521:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"11526:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"11472:48:17"},"nodeType":"YulFunctionCall","src":"11472:61:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11465:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11568:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"11575:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11564:3:17"},"nodeType":"YulFunctionCall","src":"11564:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"11582:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"11587:6:17"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"11542:21:17"},"nodeType":"YulFunctionCall","src":"11542:52:17"},"nodeType":"YulExpressionStatement","src":"11542:52:17"},{"nodeType":"YulAssignment","src":"11603:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11614:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11641:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"11619:21:17"},"nodeType":"YulFunctionCall","src":"11619:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11610:3:17"},"nodeType":"YulFunctionCall","src":"11610:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11603:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11374:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11381:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"11389:3:17","type":""}],"src":"11311:344:17"},{"body":{"nodeType":"YulBlock","src":"11716:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11733:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11756:5:17"}],"functionName":{"name":"cleanup_t_bytes32","nodeType":"YulIdentifier","src":"11738:17:17"},"nodeType":"YulFunctionCall","src":"11738:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11726:6:17"},"nodeType":"YulFunctionCall","src":"11726:37:17"},"nodeType":"YulExpressionStatement","src":"11726:37:17"}]},"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11704:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11711:3:17","type":""}],"src":"11661:108:17"},{"body":{"nodeType":"YulBlock","src":"11830:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11847:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11870:5:17"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"11852:17:17"},"nodeType":"YulFunctionCall","src":"11852:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11840:6:17"},"nodeType":"YulFunctionCall","src":"11840:37:17"},"nodeType":"YulExpressionStatement","src":"11840:37:17"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11818:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11825:3:17","type":""}],"src":"11775:108:17"},{"body":{"nodeType":"YulBlock","src":"11938:50:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11955:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11975:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"11960:14:17"},"nodeType":"YulFunctionCall","src":"11960:21:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11948:6:17"},"nodeType":"YulFunctionCall","src":"11948:34:17"},"nodeType":"YulExpressionStatement","src":"11948:34:17"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"11926:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"11933:3:17","type":""}],"src":"11889:99:17"},{"body":{"nodeType":"YulBlock","src":"12194:1996:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12204:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12220:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12225:6:17","type":"","value":"0x0140"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12216:3:17"},"nodeType":"YulFunctionCall","src":"12216:16:17"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"12208:4:17","type":""}]},{"nodeType":"YulBlock","src":"12242:171:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12284:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12314:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12321:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12310:3:17"},"nodeType":"YulFunctionCall","src":"12310:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12304:5:17"},"nodeType":"YulFunctionCall","src":"12304:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12288:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12374:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12392:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12397:4:17","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12388:3:17"},"nodeType":"YulFunctionCall","src":"12388:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"12340:33:17"},"nodeType":"YulFunctionCall","src":"12340:63:17"},"nodeType":"YulExpressionStatement","src":"12340:63:17"}]},{"nodeType":"YulBlock","src":"12423:240:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12463:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12493:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12500:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12489:3:17"},"nodeType":"YulFunctionCall","src":"12489:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12483:5:17"},"nodeType":"YulFunctionCall","src":"12483:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12467:12:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12531:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12536:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12527:3:17"},"nodeType":"YulFunctionCall","src":"12527:14:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12547:4:17"},{"name":"pos","nodeType":"YulIdentifier","src":"12553:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12543:3:17"},"nodeType":"YulFunctionCall","src":"12543:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12520:6:17"},"nodeType":"YulFunctionCall","src":"12520:38:17"},"nodeType":"YulExpressionStatement","src":"12520:38:17"},{"nodeType":"YulAssignment","src":"12571:81:17","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12633:12:17"},{"name":"tail","nodeType":"YulIdentifier","src":"12647:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"12579:53:17"},"nodeType":"YulFunctionCall","src":"12579:73:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12571:4:17"}]}]},{"nodeType":"YulBlock","src":"12673:168:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12712:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12742:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12749:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12738:3:17"},"nodeType":"YulFunctionCall","src":"12738:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12732:5:17"},"nodeType":"YulFunctionCall","src":"12732:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12716:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12802:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"12820:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"12825:4:17","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12816:3:17"},"nodeType":"YulFunctionCall","src":"12816:14:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"12768:33:17"},"nodeType":"YulFunctionCall","src":"12768:63:17"},"nodeType":"YulExpressionStatement","src":"12768:63:17"}]},{"nodeType":"YulBlock","src":"12851:171:17","statements":[{"nodeType":"YulVariableDeclaration","src":"12893:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12923:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"12930:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12919:3:17"},"nodeType":"YulFunctionCall","src":"12919:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12913:5:17"},"nodeType":"YulFunctionCall","src":"12913:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"12897:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"12983:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13001:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13006:4:17","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12997:3:17"},"nodeType":"YulFunctionCall","src":"12997:14:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"12949:33:17"},"nodeType":"YulFunctionCall","src":"12949:63:17"},"nodeType":"YulExpressionStatement","src":"12949:63:17"}]},{"nodeType":"YulBlock","src":"13032:169:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13072:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13102:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13109:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13098:3:17"},"nodeType":"YulFunctionCall","src":"13098:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13092:5:17"},"nodeType":"YulFunctionCall","src":"13092:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13076:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13162:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13180:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13185:4:17","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13176:3:17"},"nodeType":"YulFunctionCall","src":"13176:14:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"13128:33:17"},"nodeType":"YulFunctionCall","src":"13128:63:17"},"nodeType":"YulExpressionStatement","src":"13128:63:17"}]},{"nodeType":"YulBlock","src":"13211:171:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13253:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13283:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13290:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13279:3:17"},"nodeType":"YulFunctionCall","src":"13279:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13273:5:17"},"nodeType":"YulFunctionCall","src":"13273:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13257:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13343:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13361:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13366:4:17","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13357:3:17"},"nodeType":"YulFunctionCall","src":"13357:14:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13309:33:17"},"nodeType":"YulFunctionCall","src":"13309:63:17"},"nodeType":"YulExpressionStatement","src":"13309:63:17"}]},{"nodeType":"YulBlock","src":"13392:237:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13429:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13459:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13466:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13455:3:17"},"nodeType":"YulFunctionCall","src":"13455:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13449:5:17"},"nodeType":"YulFunctionCall","src":"13449:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13433:12:17","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13497:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13502:4:17","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13493:3:17"},"nodeType":"YulFunctionCall","src":"13493:14:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"13513:4:17"},{"name":"pos","nodeType":"YulIdentifier","src":"13519:3:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"13509:3:17"},"nodeType":"YulFunctionCall","src":"13509:14:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13486:6:17"},"nodeType":"YulFunctionCall","src":"13486:38:17"},"nodeType":"YulExpressionStatement","src":"13486:38:17"},{"nodeType":"YulAssignment","src":"13537:81:17","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13599:12:17"},{"name":"tail","nodeType":"YulIdentifier","src":"13613:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"13545:53:17"},"nodeType":"YulFunctionCall","src":"13545:73:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"13537:4:17"}]}]},{"nodeType":"YulBlock","src":"13639:165:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13681:43:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13711:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13718:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13707:3:17"},"nodeType":"YulFunctionCall","src":"13707:16:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13701:5:17"},"nodeType":"YulFunctionCall","src":"13701:23:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13685:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13765:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13783:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13788:4:17","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13779:3:17"},"nodeType":"YulFunctionCall","src":"13779:14:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"13737:27:17"},"nodeType":"YulFunctionCall","src":"13737:57:17"},"nodeType":"YulExpressionStatement","src":"13737:57:17"}]},{"nodeType":"YulBlock","src":"13814:166:17","statements":[{"nodeType":"YulVariableDeclaration","src":"13853:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13883:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"13890:6:17","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13879:3:17"},"nodeType":"YulFunctionCall","src":"13879:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13873:5:17"},"nodeType":"YulFunctionCall","src":"13873:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13857:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13939:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13957:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"13962:6:17","type":"","value":"0x0100"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13953:3:17"},"nodeType":"YulFunctionCall","src":"13953:16:17"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"13911:27:17"},"nodeType":"YulFunctionCall","src":"13911:59:17"},"nodeType":"YulExpressionStatement","src":"13911:59:17"}]},{"nodeType":"YulBlock","src":"13990:173:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14030:45:17","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14060:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"14067:6:17","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14056:3:17"},"nodeType":"YulFunctionCall","src":"14056:18:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14050:5:17"},"nodeType":"YulFunctionCall","src":"14050:25:17"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14034:12:17","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14122:12:17"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14140:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14145:6:17","type":"","value":"0x0120"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14136:3:17"},"nodeType":"YulFunctionCall","src":"14136:16:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"14088:33:17"},"nodeType":"YulFunctionCall","src":"14088:65:17"},"nodeType":"YulExpressionStatement","src":"14088:65:17"}]},{"nodeType":"YulAssignment","src":"14173:11:17","value":{"name":"tail","nodeType":"YulIdentifier","src":"14180:4:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14173:3:17"}]}]},"name":"abi_encode_t_struct$_trading_$4028_memory_ptr_to_t_struct$_trading_$4028_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12173:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"12180:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"12189:3:17","type":""}],"src":"12080:2110:17"},{"body":{"nodeType":"YulBlock","src":"14326:126:17","statements":[{"nodeType":"YulAssignment","src":"14336:110:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14434:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"14442:3:17"}],"functionName":{"name":"abi_encode_t_struct$_trading_$4028_memory_ptr_to_t_struct$_trading_$4028_memory_ptr","nodeType":"YulIdentifier","src":"14350:83:17"},"nodeType":"YulFunctionCall","src":"14350:96:17"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"14336:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_trading_$4028_memory_ptr_to_t_struct$_trading_$4028_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"14299:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14307:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"14315:10:17","type":""}],"src":"14196:256:17"},{"body":{"nodeType":"YulBlock","src":"14558:38:17","statements":[{"nodeType":"YulAssignment","src":"14568:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14580:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"14585:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14576:3:17"},"nodeType":"YulFunctionCall","src":"14576:14:17"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"14568:4:17"}]}]},"name":"array_nextElement_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14545:3:17","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"14553:4:17","type":""}],"src":"14458:138:17"},{"body":{"nodeType":"YulBlock","src":"14866:937:17","statements":[{"nodeType":"YulVariableDeclaration","src":"14876:93:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14963:5:17"}],"functionName":{"name":"array_length_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"14890:72:17"},"nodeType":"YulFunctionCall","src":"14890:79:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"14880:6:17","type":""}]},{"nodeType":"YulAssignment","src":"14978:118:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15084:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"15089:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"14985:98:17"},"nodeType":"YulFunctionCall","src":"14985:111:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"14978:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"15105:20:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"15122:3:17"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"15109:9:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15134:39:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15150:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15159:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"15167:4:17","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15155:3:17"},"nodeType":"YulFunctionCall","src":"15155:17:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15146:3:17"},"nodeType":"YulFunctionCall","src":"15146:27:17"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"15138:4:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15182:96:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15272:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15197:74:17"},"nodeType":"YulFunctionCall","src":"15197:81:17"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"15186:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15287:21:17","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"15301:7:17"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"15291:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"15377:381:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15398:3:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15407:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"15413:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15403:3:17"},"nodeType":"YulFunctionCall","src":"15403:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15391:6:17"},"nodeType":"YulFunctionCall","src":"15391:33:17"},"nodeType":"YulExpressionStatement","src":"15391:33:17"},{"nodeType":"YulVariableDeclaration","src":"15437:34:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15464:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15458:5:17"},"nodeType":"YulFunctionCall","src":"15458:13:17"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"15441:13:17","type":""}]},{"nodeType":"YulAssignment","src":"15484:122:17","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"15586:13:17"},{"name":"tail","nodeType":"YulIdentifier","src":"15601:4:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_trading_$4028_memory_ptr_to_t_struct$_trading_$4028_memory_ptr","nodeType":"YulIdentifier","src":"15492:93:17"},"nodeType":"YulFunctionCall","src":"15492:114:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15484:4:17"}]},{"nodeType":"YulAssignment","src":"15619:95:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15707:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15629:77:17"},"nodeType":"YulFunctionCall","src":"15629:85:17"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15619:6:17"}]},{"nodeType":"YulAssignment","src":"15727:21:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15738:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"15743:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15734:3:17"},"nodeType":"YulFunctionCall","src":"15734:14:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15727:3:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15339:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"15342:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15336:2:17"},"nodeType":"YulFunctionCall","src":"15336:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15350:18:17","statements":[{"nodeType":"YulAssignment","src":"15352:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15361:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"15364:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15357:3:17"},"nodeType":"YulFunctionCall","src":"15357:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15352:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"15321:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"15323:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"15332:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15327:1:17","type":""}]}]},"src":"15317:441:17"},{"nodeType":"YulAssignment","src":"15767:11:17","value":{"name":"tail","nodeType":"YulIdentifier","src":"15774:4:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15767:3:17"}]},{"nodeType":"YulAssignment","src":"15787:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"15794:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"15787:3:17"}]}]},"name":"abi_encode_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"14845:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14852:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"14861:3:17","type":""}],"src":"14692:1111:17"},{"body":{"nodeType":"YulBlock","src":"16007:275:17","statements":[{"nodeType":"YulAssignment","src":"16017:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16029:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16040:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16025:3:17"},"nodeType":"YulFunctionCall","src":"16025:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16017:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16064:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16075:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16060:3:17"},"nodeType":"YulFunctionCall","src":"16060:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16083:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"16089:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16079:3:17"},"nodeType":"YulFunctionCall","src":"16079:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16053:6:17"},"nodeType":"YulFunctionCall","src":"16053:47:17"},"nodeType":"YulExpressionStatement","src":"16053:47:17"},{"nodeType":"YulAssignment","src":"16109:166:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16261:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"16270:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16117:143:17"},"nodeType":"YulFunctionCall","src":"16117:158:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16109:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"15979:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"15991:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16002:4:17","type":""}],"src":"15809:473:17"},{"body":{"nodeType":"YulBlock","src":"16384:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16401:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"16406:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16394:6:17"},"nodeType":"YulFunctionCall","src":"16394:19:17"},"nodeType":"YulExpressionStatement","src":"16394:19:17"},{"nodeType":"YulAssignment","src":"16422:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16441:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"16446:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16437:3:17"},"nodeType":"YulFunctionCall","src":"16437:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"16422:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"16356:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"16361:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"16372:11:17","type":""}],"src":"16288:169:17"},{"body":{"nodeType":"YulBlock","src":"16555:272:17","statements":[{"nodeType":"YulVariableDeclaration","src":"16565:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16612:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"16579:32:17"},"nodeType":"YulFunctionCall","src":"16579:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"16569:6:17","type":""}]},{"nodeType":"YulAssignment","src":"16627:78:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16693:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"16698:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16634:58:17"},"nodeType":"YulFunctionCall","src":"16634:71:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16627:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"16740:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"16747:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16736:3:17"},"nodeType":"YulFunctionCall","src":"16736:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"16754:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"16759:6:17"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"16714:21:17"},"nodeType":"YulFunctionCall","src":"16714:52:17"},"nodeType":"YulExpressionStatement","src":"16714:52:17"},{"nodeType":"YulAssignment","src":"16775:46:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"16786:3:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"16813:6:17"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"16791:21:17"},"nodeType":"YulFunctionCall","src":"16791:29:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16782:3:17"},"nodeType":"YulFunctionCall","src":"16782:39:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16775:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"16536:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"16543:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"16551:3:17","type":""}],"src":"16463:364:17"},{"body":{"nodeType":"YulBlock","src":"16951:195:17","statements":[{"nodeType":"YulAssignment","src":"16961:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16973:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"16984:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16969:3:17"},"nodeType":"YulFunctionCall","src":"16969:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16961:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17008:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17019:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17004:3:17"},"nodeType":"YulFunctionCall","src":"17004:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"17027:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"17033:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"17023:3:17"},"nodeType":"YulFunctionCall","src":"17023:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16997:6:17"},"nodeType":"YulFunctionCall","src":"16997:47:17"},"nodeType":"YulExpressionStatement","src":"16997:47:17"},{"nodeType":"YulAssignment","src":"17053:86:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17125:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"17134:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"17061:63:17"},"nodeType":"YulFunctionCall","src":"17061:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17053:4:17"}]}]},"name":"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16923:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16935:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16946:4:17","type":""}],"src":"16833:313:17"},{"body":{"nodeType":"YulBlock","src":"17217:53:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17234:3:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17257:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"17239:17:17"},"nodeType":"YulFunctionCall","src":"17239:24:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17227:6:17"},"nodeType":"YulFunctionCall","src":"17227:37:17"},"nodeType":"YulExpressionStatement","src":"17227:37:17"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17205:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"17212:3:17","type":""}],"src":"17152:118:17"},{"body":{"nodeType":"YulBlock","src":"17374:124:17","statements":[{"nodeType":"YulAssignment","src":"17384:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17396:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17407:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17392:3:17"},"nodeType":"YulFunctionCall","src":"17392:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"17384:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"17464:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"17477:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"17488:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17473:3:17"},"nodeType":"YulFunctionCall","src":"17473:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"17420:43:17"},"nodeType":"YulFunctionCall","src":"17420:71:17"},"nodeType":"YulExpressionStatement","src":"17420:71:17"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"17346:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"17358:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"17369:4:17","type":""}],"src":"17276:222:17"},{"body":{"nodeType":"YulBlock","src":"17578:40:17","statements":[{"nodeType":"YulAssignment","src":"17589:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"17605:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"17599:5:17"},"nodeType":"YulFunctionCall","src":"17599:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"17589:6:17"}]}]},"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"17561:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"17571:6:17","type":""}],"src":"17504:114:17"},{"body":{"nodeType":"YulBlock","src":"17735:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17752:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"17757:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17745:6:17"},"nodeType":"YulFunctionCall","src":"17745:19:17"},"nodeType":"YulExpressionStatement","src":"17745:19:17"},{"nodeType":"YulAssignment","src":"17773:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"17792:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17797:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17788:3:17"},"nodeType":"YulFunctionCall","src":"17788:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"17773:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"17707:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"17712:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"17723:11:17","type":""}],"src":"17624:184:17"},{"body":{"nodeType":"YulBlock","src":"17886:60:17","statements":[{"nodeType":"YulAssignment","src":"17896:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"17904:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17896:4:17"}]},{"nodeType":"YulAssignment","src":"17917:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"17929:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"17934:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17925:3:17"},"nodeType":"YulFunctionCall","src":"17925:14:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"17917:4:17"}]}]},"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"17873:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"17881:4:17","type":""}],"src":"17814:132:17"},{"body":{"nodeType":"YulBlock","src":"18032:99:17","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"18076:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"18084:3:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"18042:33:17"},"nodeType":"YulFunctionCall","src":"18042:46:17"},"nodeType":"YulExpressionStatement","src":"18042:46:17"},{"nodeType":"YulAssignment","src":"18097:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18115:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18120:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18111:3:17"},"nodeType":"YulFunctionCall","src":"18111:14:17"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"18097:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"18005:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18013:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"18021:10:17","type":""}],"src":"17952:179:17"},{"body":{"nodeType":"YulBlock","src":"18212:38:17","statements":[{"nodeType":"YulAssignment","src":"18222:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"18234:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"18239:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18230:3:17"},"nodeType":"YulFunctionCall","src":"18230:14:17"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"18222:4:17"}]}]},"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"18199:3:17","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"18207:4:17","type":""}],"src":"18137:113:17"},{"body":{"nodeType":"YulBlock","src":"18410:608:17","statements":[{"nodeType":"YulVariableDeclaration","src":"18420:68:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18482:5:17"}],"functionName":{"name":"array_length_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18434:47:17"},"nodeType":"YulFunctionCall","src":"18434:54:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18424:6:17","type":""}]},{"nodeType":"YulAssignment","src":"18497:93:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"18578:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"18583:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"18504:73:17"},"nodeType":"YulFunctionCall","src":"18504:86:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18497:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"18599:71:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"18664:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18614:49:17"},"nodeType":"YulFunctionCall","src":"18614:56:17"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"18603:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"18679:21:17","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"18693:7:17"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"18683:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"18769:224:17","statements":[{"nodeType":"YulVariableDeclaration","src":"18783:34:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"18810:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"18804:5:17"},"nodeType":"YulFunctionCall","src":"18804:13:17"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"18787:13:17","type":""}]},{"nodeType":"YulAssignment","src":"18830:70:17","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"18881:13:17"},{"name":"pos","nodeType":"YulIdentifier","src":"18896:3:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_bytes32_to_t_bytes32","nodeType":"YulIdentifier","src":"18837:43:17"},"nodeType":"YulFunctionCall","src":"18837:63:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"18830:3:17"}]},{"nodeType":"YulAssignment","src":"18913:70:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"18976:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"18923:52:17"},"nodeType":"YulFunctionCall","src":"18923:60:17"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"18913:6:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18731:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"18734:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"18728:2:17"},"nodeType":"YulFunctionCall","src":"18728:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"18742:18:17","statements":[{"nodeType":"YulAssignment","src":"18744:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"18753:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"18756:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18749:3:17"},"nodeType":"YulFunctionCall","src":"18749:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"18744:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"18713:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"18715:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"18724:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"18719:1:17","type":""}]}]},"src":"18709:284:17"},{"nodeType":"YulAssignment","src":"19002:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"19009:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"19002:3:17"}]}]},"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"18389:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"18396:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"18405:3:17","type":""}],"src":"18286:732:17"},{"body":{"nodeType":"YulBlock","src":"19172:225:17","statements":[{"nodeType":"YulAssignment","src":"19182:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19194:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19205:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19190:3:17"},"nodeType":"YulFunctionCall","src":"19190:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19182:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19229:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19240:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19225:3:17"},"nodeType":"YulFunctionCall","src":"19225:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19248:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"19254:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19244:3:17"},"nodeType":"YulFunctionCall","src":"19244:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19218:6:17"},"nodeType":"YulFunctionCall","src":"19218:47:17"},"nodeType":"YulExpressionStatement","src":"19218:47:17"},{"nodeType":"YulAssignment","src":"19274:116:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19376:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"19385:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19282:93:17"},"nodeType":"YulFunctionCall","src":"19282:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19274:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19144:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19156:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19167:4:17","type":""}],"src":"19024:373:17"},{"body":{"nodeType":"YulBlock","src":"19709:762:17","statements":[{"nodeType":"YulAssignment","src":"19719:27:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19731:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19742:3:17","type":"","value":"224"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19727:3:17"},"nodeType":"YulFunctionCall","src":"19727:19:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19719:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19800:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19813:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19824:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19809:3:17"},"nodeType":"YulFunctionCall","src":"19809:17:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"19756:43:17"},"nodeType":"YulFunctionCall","src":"19756:71:17"},"nodeType":"YulExpressionStatement","src":"19756:71:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19848:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"19859:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19844:3:17"},"nodeType":"YulFunctionCall","src":"19844:18:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"19868:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"19874:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"19864:3:17"},"nodeType":"YulFunctionCall","src":"19864:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19837:6:17"},"nodeType":"YulFunctionCall","src":"19837:48:17"},"nodeType":"YulExpressionStatement","src":"19837:48:17"},{"nodeType":"YulAssignment","src":"19894:86:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"19966:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"19975:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"19902:63:17"},"nodeType":"YulFunctionCall","src":"19902:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19894:4:17"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"20034:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20047:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20058:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20043:3:17"},"nodeType":"YulFunctionCall","src":"20043:18:17"}],"functionName":{"name":"abi_encode_t_bytes32_to_t_bytes32_fromStack","nodeType":"YulIdentifier","src":"19990:43:17"},"nodeType":"YulFunctionCall","src":"19990:72:17"},"nodeType":"YulExpressionStatement","src":"19990:72:17"},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"20116:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20129:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20140:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20125:3:17"},"nodeType":"YulFunctionCall","src":"20125:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20072:43:17"},"nodeType":"YulFunctionCall","src":"20072:72:17"},"nodeType":"YulExpressionStatement","src":"20072:72:17"},{"expression":{"arguments":[{"name":"value4","nodeType":"YulIdentifier","src":"20198:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20211:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20222:3:17","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20207:3:17"},"nodeType":"YulFunctionCall","src":"20207:19:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"20154:43:17"},"nodeType":"YulFunctionCall","src":"20154:73:17"},"nodeType":"YulExpressionStatement","src":"20154:73:17"},{"expression":{"arguments":[{"name":"value5","nodeType":"YulIdentifier","src":"20281:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20294:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20305:3:17","type":"","value":"160"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20290:3:17"},"nodeType":"YulFunctionCall","src":"20290:19:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"20237:43:17"},"nodeType":"YulFunctionCall","src":"20237:73:17"},"nodeType":"YulExpressionStatement","src":"20237:73:17"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20331:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20342:3:17","type":"","value":"192"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20327:3:17"},"nodeType":"YulFunctionCall","src":"20327:19:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"20352:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"20358:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20348:3:17"},"nodeType":"YulFunctionCall","src":"20348:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20320:6:17"},"nodeType":"YulFunctionCall","src":"20320:49:17"},"nodeType":"YulExpressionStatement","src":"20320:49:17"},{"nodeType":"YulAssignment","src":"20378:86:17","value":{"arguments":[{"name":"value6","nodeType":"YulIdentifier","src":"20450:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"20459:4:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"20386:63:17"},"nodeType":"YulFunctionCall","src":"20386:78:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"20378:4:17"}]}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_bytes32_t_address_t_address_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_bytes32_t_address_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19633:9:17","type":""},{"name":"value6","nodeType":"YulTypedName","src":"19645:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"19653:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"19661:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"19669:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"19677:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"19685:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19693:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19704:4:17","type":""}],"src":"19403:1068:17"},{"body":{"nodeType":"YulBlock","src":"20638:1076:17","statements":[{"body":{"nodeType":"YulBlock","src":"20685:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"20687:77:17"},"nodeType":"YulFunctionCall","src":"20687:79:17"},"nodeType":"YulExpressionStatement","src":"20687:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"20659:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"20668:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"20655:3:17"},"nodeType":"YulFunctionCall","src":"20655:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"20680:3:17","type":"","value":"192"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"20651:3:17"},"nodeType":"YulFunctionCall","src":"20651:33:17"},"nodeType":"YulIf","src":"20648:120:17"},{"nodeType":"YulBlock","src":"20778:117:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20793:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"20807:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20797:6:17","type":""}]},{"nodeType":"YulAssignment","src":"20822:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20857:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"20868:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20853:3:17"},"nodeType":"YulFunctionCall","src":"20853:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"20877:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"20832:20:17"},"nodeType":"YulFunctionCall","src":"20832:53:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"20822:6:17"}]}]},{"nodeType":"YulBlock","src":"20905:288:17","statements":[{"nodeType":"YulVariableDeclaration","src":"20920:46:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"20951:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"20962:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20947:3:17"},"nodeType":"YulFunctionCall","src":"20947:18:17"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"20934:12:17"},"nodeType":"YulFunctionCall","src":"20934:32:17"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"20924:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"21013:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"21015:77:17"},"nodeType":"YulFunctionCall","src":"21015:79:17"},"nodeType":"YulExpressionStatement","src":"21015:79:17"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"20985:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"20993:18:17","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"20982:2:17"},"nodeType":"YulFunctionCall","src":"20982:30:17"},"nodeType":"YulIf","src":"20979:117:17"},{"nodeType":"YulAssignment","src":"21110:73:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21155:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"21166:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21151:3:17"},"nodeType":"YulFunctionCall","src":"21151:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21175:7:17"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"21120:30:17"},"nodeType":"YulFunctionCall","src":"21120:63:17"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"21110:6:17"}]}]},{"nodeType":"YulBlock","src":"21203:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21218:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"21232:2:17","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21222:6:17","type":""}]},{"nodeType":"YulAssignment","src":"21248:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21283:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"21294:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21279:3:17"},"nodeType":"YulFunctionCall","src":"21279:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21303:7:17"}],"functionName":{"name":"abi_decode_t_bytes32","nodeType":"YulIdentifier","src":"21258:20:17"},"nodeType":"YulFunctionCall","src":"21258:53:17"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"21248:6:17"}]}]},{"nodeType":"YulBlock","src":"21331:118:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21346:16:17","value":{"kind":"number","nodeType":"YulLiteral","src":"21360:2:17","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21350:6:17","type":""}]},{"nodeType":"YulAssignment","src":"21376:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21411:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"21422:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21407:3:17"},"nodeType":"YulFunctionCall","src":"21407:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21431:7:17"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"21386:20:17"},"nodeType":"YulFunctionCall","src":"21386:53:17"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"21376:6:17"}]}]},{"nodeType":"YulBlock","src":"21459:119:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21474:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"21488:3:17","type":"","value":"128"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21478:6:17","type":""}]},{"nodeType":"YulAssignment","src":"21505:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21540:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"21551:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21536:3:17"},"nodeType":"YulFunctionCall","src":"21536:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21560:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21515:20:17"},"nodeType":"YulFunctionCall","src":"21515:53:17"},"variableNames":[{"name":"value4","nodeType":"YulIdentifier","src":"21505:6:17"}]}]},{"nodeType":"YulBlock","src":"21588:119:17","statements":[{"nodeType":"YulVariableDeclaration","src":"21603:17:17","value":{"kind":"number","nodeType":"YulLiteral","src":"21617:3:17","type":"","value":"160"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"21607:6:17","type":""}]},{"nodeType":"YulAssignment","src":"21634:63:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"21669:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"21680:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21665:3:17"},"nodeType":"YulFunctionCall","src":"21665:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"21689:7:17"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"21644:20:17"},"nodeType":"YulFunctionCall","src":"21644:53:17"},"variableNames":[{"name":"value5","nodeType":"YulIdentifier","src":"21634:6:17"}]}]}]},"name":"abi_decode_tuple_t_uint256t_string_memory_ptrt_bytes32t_addresst_uint256t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"20568:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"20579:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"20591:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"20599:6:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"20607:6:17","type":""},{"name":"value3","nodeType":"YulTypedName","src":"20615:6:17","type":""},{"name":"value4","nodeType":"YulTypedName","src":"20623:6:17","type":""},{"name":"value5","nodeType":"YulTypedName","src":"20631:6:17","type":""}],"src":"20477:1237:17"},{"body":{"nodeType":"YulBlock","src":"21794:40:17","statements":[{"nodeType":"YulAssignment","src":"21805:22:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21821:5:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21815:5:17"},"nodeType":"YulFunctionCall","src":"21815:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"21805:6:17"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21777:5:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"21787:6:17","type":""}],"src":"21720:114:17"},{"body":{"nodeType":"YulBlock","src":"21951:73:17","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21968:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"21973:6:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"21961:6:17"},"nodeType":"YulFunctionCall","src":"21961:19:17"},"nodeType":"YulExpressionStatement","src":"21961:19:17"},{"nodeType":"YulAssignment","src":"21989:29:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22008:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22013:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22004:3:17"},"nodeType":"YulFunctionCall","src":"22004:14:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"21989:11:17"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"21923:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"21928:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"21939:11:17","type":""}],"src":"21840:184:17"},{"body":{"nodeType":"YulBlock","src":"22102:60:17","statements":[{"nodeType":"YulAssignment","src":"22112:11:17","value":{"name":"ptr","nodeType":"YulIdentifier","src":"22120:3:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"22112:4:17"}]},{"nodeType":"YulAssignment","src":"22133:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"22145:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22150:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22141:3:17"},"nodeType":"YulFunctionCall","src":"22141:14:17"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"22133:4:17"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"22089:3:17","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"22097:4:17","type":""}],"src":"22030:132:17"},{"body":{"nodeType":"YulBlock","src":"22248:99:17","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"22292:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"22300:3:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"22258:33:17"},"nodeType":"YulFunctionCall","src":"22258:46:17"},"nodeType":"YulExpressionStatement","src":"22258:46:17"},{"nodeType":"YulAssignment","src":"22313:28:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22331:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22336:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22327:3:17"},"nodeType":"YulFunctionCall","src":"22327:14:17"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"22313:10:17"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"22221:6:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22229:3:17","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"22237:10:17","type":""}],"src":"22168:179:17"},{"body":{"nodeType":"YulBlock","src":"22428:38:17","statements":[{"nodeType":"YulAssignment","src":"22438:22:17","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"22450:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"22455:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22446:3:17"},"nodeType":"YulFunctionCall","src":"22446:14:17"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"22438:4:17"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"22415:3:17","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"22423:4:17","type":""}],"src":"22353:113:17"},{"body":{"nodeType":"YulBlock","src":"22626:608:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22636:68:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22698:5:17"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22650:47:17"},"nodeType":"YulFunctionCall","src":"22650:54:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"22640:6:17","type":""}]},{"nodeType":"YulAssignment","src":"22713:93:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22794:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"22799:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22720:73:17"},"nodeType":"YulFunctionCall","src":"22720:86:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22713:3:17"}]},{"nodeType":"YulVariableDeclaration","src":"22815:71:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22880:5:17"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22830:49:17"},"nodeType":"YulFunctionCall","src":"22830:56:17"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"22819:7:17","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22895:21:17","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"22909:7:17"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"22899:6:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"22985:224:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22999:34:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"23026:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"23020:5:17"},"nodeType":"YulFunctionCall","src":"23020:13:17"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"23003:13:17","type":""}]},{"nodeType":"YulAssignment","src":"23046:70:17","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"23097:13:17"},{"name":"pos","nodeType":"YulIdentifier","src":"23112:3:17"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"23053:43:17"},"nodeType":"YulFunctionCall","src":"23053:63:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"23046:3:17"}]},{"nodeType":"YulAssignment","src":"23129:70:17","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"23192:6:17"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"23139:52:17"},"nodeType":"YulFunctionCall","src":"23139:60:17"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"23129:6:17"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22947:1:17"},{"name":"length","nodeType":"YulIdentifier","src":"22950:6:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22944:2:17"},"nodeType":"YulFunctionCall","src":"22944:13:17"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22958:18:17","statements":[{"nodeType":"YulAssignment","src":"22960:14:17","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22969:1:17"},{"kind":"number","nodeType":"YulLiteral","src":"22972:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22965:3:17"},"nodeType":"YulFunctionCall","src":"22965:9:17"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22960:1:17"}]}]},"pre":{"nodeType":"YulBlock","src":"22929:14:17","statements":[{"nodeType":"YulVariableDeclaration","src":"22931:10:17","value":{"kind":"number","nodeType":"YulLiteral","src":"22940:1:17","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22935:1:17","type":""}]}]},"src":"22925:284:17"},{"nodeType":"YulAssignment","src":"23218:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"23225:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"23218:3:17"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"22605:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"22612:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"22621:3:17","type":""}],"src":"22502:732:17"},{"body":{"nodeType":"YulBlock","src":"23388:225:17","statements":[{"nodeType":"YulAssignment","src":"23398:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23410:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23421:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23406:3:17"},"nodeType":"YulFunctionCall","src":"23406:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23398:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23445:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"23456:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23441:3:17"},"nodeType":"YulFunctionCall","src":"23441:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23464:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"23470:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23460:3:17"},"nodeType":"YulFunctionCall","src":"23460:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23434:6:17"},"nodeType":"YulFunctionCall","src":"23434:47:17"},"nodeType":"YulExpressionStatement","src":"23434:47:17"},{"nodeType":"YulAssignment","src":"23490:116:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23592:6:17"},{"name":"tail","nodeType":"YulIdentifier","src":"23601:4:17"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23498:93:17"},"nodeType":"YulFunctionCall","src":"23498:108:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23490:4:17"}]}]},"name":"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23360:9:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"23372:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"23383:4:17","type":""}],"src":"23240:373:17"},{"body":{"nodeType":"YulBlock","src":"23725:128:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23747:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"23755:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23743:3:17"},"nodeType":"YulFunctionCall","src":"23743:14:17"},{"hexValue":"416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e6365","kind":"string","nodeType":"YulLiteral","src":"23759:34:17","type":"","value":"AccessControl: can only renounce"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23736:6:17"},"nodeType":"YulFunctionCall","src":"23736:58:17"},"nodeType":"YulExpressionStatement","src":"23736:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"23815:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"23823:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23811:3:17"},"nodeType":"YulFunctionCall","src":"23811:15:17"},{"hexValue":"20726f6c657320666f722073656c66","kind":"string","nodeType":"YulLiteral","src":"23828:17:17","type":"","value":" roles for self"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23804:6:17"},"nodeType":"YulFunctionCall","src":"23804:42:17"},"nodeType":"YulExpressionStatement","src":"23804:42:17"}]},"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"23717:6:17","type":""}],"src":"23619:234:17"},{"body":{"nodeType":"YulBlock","src":"24005:220:17","statements":[{"nodeType":"YulAssignment","src":"24015:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24081:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"24086:2:17","type":"","value":"47"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24022:58:17"},"nodeType":"YulFunctionCall","src":"24022:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"24015:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24187:3:17"}],"functionName":{"name":"store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b","nodeType":"YulIdentifier","src":"24098:88:17"},"nodeType":"YulFunctionCall","src":"24098:93:17"},"nodeType":"YulExpressionStatement","src":"24098:93:17"},{"nodeType":"YulAssignment","src":"24200:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"24211:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"24216:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24207:3:17"},"nodeType":"YulFunctionCall","src":"24207:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"24200:3:17"}]}]},"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"23993:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"24001:3:17","type":""}],"src":"23859:366:17"},{"body":{"nodeType":"YulBlock","src":"24402:248:17","statements":[{"nodeType":"YulAssignment","src":"24412:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24424:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24435:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24420:3:17"},"nodeType":"YulFunctionCall","src":"24420:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24412:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24459:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24470:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24455:3:17"},"nodeType":"YulFunctionCall","src":"24455:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24478:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"24484:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24474:3:17"},"nodeType":"YulFunctionCall","src":"24474:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"24448:6:17"},"nodeType":"YulFunctionCall","src":"24448:47:17"},"nodeType":"YulExpressionStatement","src":"24448:47:17"},{"nodeType":"YulAssignment","src":"24504:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"24638:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"24512:124:17"},"nodeType":"YulFunctionCall","src":"24512:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24504:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24382:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24397:4:17","type":""}],"src":"24231:419:17"},{"body":{"nodeType":"YulBlock","src":"24810:288:17","statements":[{"nodeType":"YulAssignment","src":"24820:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24832:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24843:2:17","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24828:3:17"},"nodeType":"YulFunctionCall","src":"24828:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"24820:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"24900:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24913:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"24924:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24909:3:17"},"nodeType":"YulFunctionCall","src":"24909:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24856:43:17"},"nodeType":"YulFunctionCall","src":"24856:71:17"},"nodeType":"YulExpressionStatement","src":"24856:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"24981:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24994:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25005:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24990:3:17"},"nodeType":"YulFunctionCall","src":"24990:18:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"24937:43:17"},"nodeType":"YulFunctionCall","src":"24937:72:17"},"nodeType":"YulExpressionStatement","src":"24937:72:17"},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"25063:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25076:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25087:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25072:3:17"},"nodeType":"YulFunctionCall","src":"25072:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25019:43:17"},"nodeType":"YulFunctionCall","src":"25019:72:17"},"nodeType":"YulExpressionStatement","src":"25019:72:17"}]},"name":"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24766:9:17","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24778:6:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24786:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"24794:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"24805:4:17","type":""}],"src":"24656:442:17"},{"body":{"nodeType":"YulBlock","src":"25144:76:17","statements":[{"body":{"nodeType":"YulBlock","src":"25198:16:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"25207:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"25210:1:17","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"25200:6:17"},"nodeType":"YulFunctionCall","src":"25200:12:17"},"nodeType":"YulExpressionStatement","src":"25200:12:17"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25167:5:17"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25189:5:17"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"25174:14:17"},"nodeType":"YulFunctionCall","src":"25174:21:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"25164:2:17"},"nodeType":"YulFunctionCall","src":"25164:32:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"25157:6:17"},"nodeType":"YulFunctionCall","src":"25157:40:17"},"nodeType":"YulIf","src":"25154:60:17"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"25137:5:17","type":""}],"src":"25104:116:17"},{"body":{"nodeType":"YulBlock","src":"25286:77:17","statements":[{"nodeType":"YulAssignment","src":"25296:22:17","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"25311:6:17"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"25305:5:17"},"nodeType":"YulFunctionCall","src":"25305:13:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"25296:5:17"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"25351:5:17"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"25327:23:17"},"nodeType":"YulFunctionCall","src":"25327:30:17"},"nodeType":"YulExpressionStatement","src":"25327:30:17"}]},"name":"abi_decode_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"25264:6:17","type":""},{"name":"end","nodeType":"YulTypedName","src":"25272:3:17","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"25280:5:17","type":""}],"src":"25226:137:17"},{"body":{"nodeType":"YulBlock","src":"25443:271:17","statements":[{"body":{"nodeType":"YulBlock","src":"25489:83:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"25491:77:17"},"nodeType":"YulFunctionCall","src":"25491:79:17"},"nodeType":"YulExpressionStatement","src":"25491:79:17"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"25464:7:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"25473:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"25460:3:17"},"nodeType":"YulFunctionCall","src":"25460:23:17"},{"kind":"number","nodeType":"YulLiteral","src":"25485:2:17","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"25456:3:17"},"nodeType":"YulFunctionCall","src":"25456:32:17"},"nodeType":"YulIf","src":"25453:119:17"},{"nodeType":"YulBlock","src":"25582:125:17","statements":[{"nodeType":"YulVariableDeclaration","src":"25597:15:17","value":{"kind":"number","nodeType":"YulLiteral","src":"25611:1:17","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25601:6:17","type":""}]},{"nodeType":"YulAssignment","src":"25626:71:17","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25669:9:17"},{"name":"offset","nodeType":"YulIdentifier","src":"25680:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25665:3:17"},"nodeType":"YulFunctionCall","src":"25665:22:17"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25689:7:17"}],"functionName":{"name":"abi_decode_t_bool_fromMemory","nodeType":"YulIdentifier","src":"25636:28:17"},"nodeType":"YulFunctionCall","src":"25636:61:17"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"25626:6:17"}]}]}]},"name":"abi_decode_tuple_t_bool_fromMemory","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25413:9:17","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"25424:7:17","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"25436:6:17","type":""}],"src":"25369:345:17"},{"body":{"nodeType":"YulBlock","src":"25846:206:17","statements":[{"nodeType":"YulAssignment","src":"25856:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25868:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25879:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25864:3:17"},"nodeType":"YulFunctionCall","src":"25864:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"25856:4:17"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"25936:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25949:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"25960:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25945:3:17"},"nodeType":"YulFunctionCall","src":"25945:17:17"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"25892:43:17"},"nodeType":"YulFunctionCall","src":"25892:71:17"},"nodeType":"YulExpressionStatement","src":"25892:71:17"},{"expression":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"26017:6:17"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26030:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"26041:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26026:3:17"},"nodeType":"YulFunctionCall","src":"26026:18:17"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"25973:43:17"},"nodeType":"YulFunctionCall","src":"25973:72:17"},"nodeType":"YulExpressionStatement","src":"25973:72:17"}]},"name":"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"25810:9:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"25822:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"25830:6:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"25841:4:17","type":""}],"src":"25720:332:17"},{"body":{"nodeType":"YulBlock","src":"26086:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26103:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26106:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26096:6:17"},"nodeType":"YulFunctionCall","src":"26096:88:17"},"nodeType":"YulExpressionStatement","src":"26096:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26200:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26203:4:17","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26193:6:17"},"nodeType":"YulFunctionCall","src":"26193:15:17"},"nodeType":"YulExpressionStatement","src":"26193:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26224:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26227:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26217:6:17"},"nodeType":"YulFunctionCall","src":"26217:15:17"},"nodeType":"YulExpressionStatement","src":"26217:15:17"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"26058:180:17"},{"body":{"nodeType":"YulBlock","src":"26272:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26289:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26292:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26282:6:17"},"nodeType":"YulFunctionCall","src":"26282:88:17"},"nodeType":"YulExpressionStatement","src":"26282:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26386:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26389:4:17","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26379:6:17"},"nodeType":"YulFunctionCall","src":"26379:15:17"},"nodeType":"YulExpressionStatement","src":"26379:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26410:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26413:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26403:6:17"},"nodeType":"YulFunctionCall","src":"26403:15:17"},"nodeType":"YulExpressionStatement","src":"26403:15:17"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"26244:180:17"},{"body":{"nodeType":"YulBlock","src":"26481:269:17","statements":[{"nodeType":"YulAssignment","src":"26491:22:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"26505:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"26511:1:17","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"26501:3:17"},"nodeType":"YulFunctionCall","src":"26501:12:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"26491:6:17"}]},{"nodeType":"YulVariableDeclaration","src":"26522:38:17","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"26552:4:17"},{"kind":"number","nodeType":"YulLiteral","src":"26558:1:17","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26548:3:17"},"nodeType":"YulFunctionCall","src":"26548:12:17"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"26526:18:17","type":""}]},{"body":{"nodeType":"YulBlock","src":"26599:51:17","statements":[{"nodeType":"YulAssignment","src":"26613:27:17","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26627:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"26635:4:17","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"26623:3:17"},"nodeType":"YulFunctionCall","src":"26623:17:17"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"26613:6:17"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"26579:18:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"26572:6:17"},"nodeType":"YulFunctionCall","src":"26572:26:17"},"nodeType":"YulIf","src":"26569:81:17"},{"body":{"nodeType":"YulBlock","src":"26702:42:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"26716:16:17"},"nodeType":"YulFunctionCall","src":"26716:18:17"},"nodeType":"YulExpressionStatement","src":"26716:18:17"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"26666:18:17"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"26689:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"26697:2:17","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"26686:2:17"},"nodeType":"YulFunctionCall","src":"26686:14:17"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"26663:2:17"},"nodeType":"YulFunctionCall","src":"26663:38:17"},"nodeType":"YulIf","src":"26660:84:17"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"26465:4:17","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"26474:6:17","type":""}],"src":"26430:320:17"},{"body":{"nodeType":"YulBlock","src":"26784:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26801:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26804:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26794:6:17"},"nodeType":"YulFunctionCall","src":"26794:88:17"},"nodeType":"YulExpressionStatement","src":"26794:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26898:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"26901:4:17","type":"","value":"0x11"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26891:6:17"},"nodeType":"YulFunctionCall","src":"26891:15:17"},"nodeType":"YulExpressionStatement","src":"26891:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"26922:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"26925:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"26915:6:17"},"nodeType":"YulFunctionCall","src":"26915:15:17"},"nodeType":"YulExpressionStatement","src":"26915:15:17"}]},"name":"panic_error_0x11","nodeType":"YulFunctionDefinition","src":"26756:180:17"},{"body":{"nodeType":"YulBlock","src":"26985:190:17","statements":[{"nodeType":"YulAssignment","src":"26995:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27022:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"27004:17:17"},"nodeType":"YulFunctionCall","src":"27004:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"26995:5:17"}]},{"body":{"nodeType":"YulBlock","src":"27118:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"27120:16:17"},"nodeType":"YulFunctionCall","src":"27120:18:17"},"nodeType":"YulExpressionStatement","src":"27120:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27043:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"27050:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27040:2:17"},"nodeType":"YulFunctionCall","src":"27040:77:17"},"nodeType":"YulIf","src":"27037:103:17"},{"nodeType":"YulAssignment","src":"27149:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27160:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"27167:1:17","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27156:3:17"},"nodeType":"YulFunctionCall","src":"27156:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"27149:3:17"}]}]},"name":"increment_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"26971:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"26981:3:17","type":""}],"src":"26942:233:17"},{"body":{"nodeType":"YulBlock","src":"27295:34:17","statements":[{"nodeType":"YulAssignment","src":"27305:18:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"27320:3:17"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"27305:11:17"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27267:3:17","type":""},{"name":"length","nodeType":"YulTypedName","src":"27272:6:17","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"27283:11:17","type":""}],"src":"27181:148:17"},{"body":{"nodeType":"YulBlock","src":"27445:267:17","statements":[{"nodeType":"YulVariableDeclaration","src":"27455:53:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27502:5:17"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"27469:32:17"},"nodeType":"YulFunctionCall","src":"27469:39:17"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"27459:6:17","type":""}]},{"nodeType":"YulAssignment","src":"27517:96:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27601:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"27606:6:17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27524:76:17"},"nodeType":"YulFunctionCall","src":"27524:89:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27517:3:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"27648:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"27655:4:17","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27644:3:17"},"nodeType":"YulFunctionCall","src":"27644:16:17"},{"name":"pos","nodeType":"YulIdentifier","src":"27662:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"27667:6:17"}],"functionName":{"name":"copy_memory_to_memory","nodeType":"YulIdentifier","src":"27622:21:17"},"nodeType":"YulFunctionCall","src":"27622:52:17"},"nodeType":"YulExpressionStatement","src":"27622:52:17"},{"nodeType":"YulAssignment","src":"27683:23:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"27694:3:17"},{"name":"length","nodeType":"YulIdentifier","src":"27699:6:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27690:3:17"},"nodeType":"YulFunctionCall","src":"27690:16:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"27683:3:17"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"27426:5:17","type":""},{"name":"pos","nodeType":"YulTypedName","src":"27433:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27441:3:17","type":""}],"src":"27335:377:17"},{"body":{"nodeType":"YulBlock","src":"27902:251:17","statements":[{"nodeType":"YulAssignment","src":"27913:102:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"28002:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"28011:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"27920:81:17"},"nodeType":"YulFunctionCall","src":"27920:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"27913:3:17"}]},{"nodeType":"YulAssignment","src":"28025:102:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"28114:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"28123:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"28032:81:17"},"nodeType":"YulFunctionCall","src":"28032:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28025:3:17"}]},{"nodeType":"YulAssignment","src":"28137:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"28144:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28137:3:17"}]}]},"name":"abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"27873:3:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"27879:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"27887:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"27898:3:17","type":""}],"src":"27718:435:17"},{"body":{"nodeType":"YulBlock","src":"28265:124:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28287:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"28295:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28283:3:17"},"nodeType":"YulFunctionCall","src":"28283:14:17"},{"hexValue":"416c6c6f77616e6365733a20546865205a65726f204164647265737320697320","kind":"string","nodeType":"YulLiteral","src":"28299:34:17","type":"","value":"Allowances: The Zero Address is "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28276:6:17"},"nodeType":"YulFunctionCall","src":"28276:58:17"},"nodeType":"YulExpressionStatement","src":"28276:58:17"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28355:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"28363:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28351:3:17"},"nodeType":"YulFunctionCall","src":"28351:15:17"},{"hexValue":"6e6f7420616c6c6f776564","kind":"string","nodeType":"YulLiteral","src":"28368:13:17","type":"","value":"not allowed"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28344:6:17"},"nodeType":"YulFunctionCall","src":"28344:38:17"},"nodeType":"YulExpressionStatement","src":"28344:38:17"}]},"name":"store_literal_in_memory_5da3a95acc8e6d5ca7b18b60537d16a9f25cf79235d81231c4e562d800763437","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28257:6:17","type":""}],"src":"28159:230:17"},{"body":{"nodeType":"YulBlock","src":"28541:220:17","statements":[{"nodeType":"YulAssignment","src":"28551:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28617:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"28622:2:17","type":"","value":"43"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28558:58:17"},"nodeType":"YulFunctionCall","src":"28558:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28551:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28723:3:17"}],"functionName":{"name":"store_literal_in_memory_5da3a95acc8e6d5ca7b18b60537d16a9f25cf79235d81231c4e562d800763437","nodeType":"YulIdentifier","src":"28634:88:17"},"nodeType":"YulFunctionCall","src":"28634:93:17"},"nodeType":"YulExpressionStatement","src":"28634:93:17"},{"nodeType":"YulAssignment","src":"28736:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28747:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"28752:2:17","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28743:3:17"},"nodeType":"YulFunctionCall","src":"28743:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28736:3:17"}]}]},"name":"abi_encode_t_stringliteral_5da3a95acc8e6d5ca7b18b60537d16a9f25cf79235d81231c4e562d800763437_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28529:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28537:3:17","type":""}],"src":"28395:366:17"},{"body":{"nodeType":"YulBlock","src":"28938:248:17","statements":[{"nodeType":"YulAssignment","src":"28948:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28960:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"28971:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28956:3:17"},"nodeType":"YulFunctionCall","src":"28956:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28948:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28995:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"29006:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28991:3:17"},"nodeType":"YulFunctionCall","src":"28991:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29014:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"29020:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29010:3:17"},"nodeType":"YulFunctionCall","src":"29010:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28984:6:17"},"nodeType":"YulFunctionCall","src":"28984:47:17"},"nodeType":"YulExpressionStatement","src":"28984:47:17"},{"nodeType":"YulAssignment","src":"29040:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29174:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_5da3a95acc8e6d5ca7b18b60537d16a9f25cf79235d81231c4e562d800763437_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29048:124:17"},"nodeType":"YulFunctionCall","src":"29048:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29040:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_5da3a95acc8e6d5ca7b18b60537d16a9f25cf79235d81231c4e562d800763437__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28918:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28933:4:17","type":""}],"src":"28767:419:17"},{"body":{"nodeType":"YulBlock","src":"29298:67:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29320:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"29328:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29316:3:17"},"nodeType":"YulFunctionCall","src":"29316:14:17"},{"hexValue":"416363657373436f6e74726f6c3a206163636f756e7420","kind":"string","nodeType":"YulLiteral","src":"29332:25:17","type":"","value":"AccessControl: account "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29309:6:17"},"nodeType":"YulFunctionCall","src":"29309:49:17"},"nodeType":"YulExpressionStatement","src":"29309:49:17"}]},"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29290:6:17","type":""}],"src":"29192:173:17"},{"body":{"nodeType":"YulBlock","src":"29535:238:17","statements":[{"nodeType":"YulAssignment","src":"29545:92:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29629:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"29634:2:17","type":"","value":"23"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"29552:76:17"},"nodeType":"YulFunctionCall","src":"29552:85:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29545:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29735:3:17"}],"functionName":{"name":"store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874","nodeType":"YulIdentifier","src":"29646:88:17"},"nodeType":"YulFunctionCall","src":"29646:93:17"},"nodeType":"YulExpressionStatement","src":"29646:93:17"},{"nodeType":"YulAssignment","src":"29748:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29759:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"29764:2:17","type":"","value":"23"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29755:3:17"},"nodeType":"YulFunctionCall","src":"29755:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29748:3:17"}]}]},"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29523:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29531:3:17","type":""}],"src":"29371:402:17"},{"body":{"nodeType":"YulBlock","src":"29885:61:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29907:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"29915:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29903:3:17"},"nodeType":"YulFunctionCall","src":"29903:14:17"},{"hexValue":"206973206d697373696e6720726f6c6520","kind":"string","nodeType":"YulLiteral","src":"29919:19:17","type":"","value":" is missing role "}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29896:6:17"},"nodeType":"YulFunctionCall","src":"29896:43:17"},"nodeType":"YulExpressionStatement","src":"29896:43:17"}]},"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29877:6:17","type":""}],"src":"29779:167:17"},{"body":{"nodeType":"YulBlock","src":"30116:238:17","statements":[{"nodeType":"YulAssignment","src":"30126:92:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30210:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"30215:2:17","type":"","value":"17"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30133:76:17"},"nodeType":"YulFunctionCall","src":"30133:85:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30126:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30316:3:17"}],"functionName":{"name":"store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69","nodeType":"YulIdentifier","src":"30227:88:17"},"nodeType":"YulFunctionCall","src":"30227:93:17"},"nodeType":"YulExpressionStatement","src":"30227:93:17"},{"nodeType":"YulAssignment","src":"30329:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30340:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"30345:2:17","type":"","value":"17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30336:3:17"},"nodeType":"YulFunctionCall","src":"30336:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30329:3:17"}]}]},"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30104:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30112:3:17","type":""}],"src":"29952:402:17"},{"body":{"nodeType":"YulBlock","src":"30746:581:17","statements":[{"nodeType":"YulAssignment","src":"30757:155:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30908:3:17"}],"functionName":{"name":"abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30764:142:17"},"nodeType":"YulFunctionCall","src":"30764:148:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30757:3:17"}]},{"nodeType":"YulAssignment","src":"30922:102:17","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"31011:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"31020:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"30929:81:17"},"nodeType":"YulFunctionCall","src":"30929:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30922:3:17"}]},{"nodeType":"YulAssignment","src":"31034:155:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31185:3:17"}],"functionName":{"name":"abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31041:142:17"},"nodeType":"YulFunctionCall","src":"31041:148:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31034:3:17"}]},{"nodeType":"YulAssignment","src":"31199:102:17","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"31288:6:17"},{"name":"pos","nodeType":"YulIdentifier","src":"31297:3:17"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack","nodeType":"YulIdentifier","src":"31206:81:17"},"nodeType":"YulFunctionCall","src":"31206:95:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31199:3:17"}]},{"nodeType":"YulAssignment","src":"31311:10:17","value":{"name":"pos","nodeType":"YulIdentifier","src":"31318:3:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31311:3:17"}]}]},"name":"abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30717:3:17","type":""},{"name":"value1","nodeType":"YulTypedName","src":"30723:6:17","type":""},{"name":"value0","nodeType":"YulTypedName","src":"30731:6:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30742:3:17","type":""}],"src":"30360:967:17"},{"body":{"nodeType":"YulBlock","src":"31381:300:17","statements":[{"nodeType":"YulAssignment","src":"31391:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"31414:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31396:17:17"},"nodeType":"YulFunctionCall","src":"31396:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"31391:1:17"}]},{"nodeType":"YulAssignment","src":"31425:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"31448:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31430:17:17"},"nodeType":"YulFunctionCall","src":"31430:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"31425:1:17"}]},{"body":{"nodeType":"YulBlock","src":"31623:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"31625:16:17"},"nodeType":"YulFunctionCall","src":"31625:18:17"},"nodeType":"YulExpressionStatement","src":"31625:18:17"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"31535:1:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31528:6:17"},"nodeType":"YulFunctionCall","src":"31528:9:17"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"31521:6:17"},"nodeType":"YulFunctionCall","src":"31521:17:17"},{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"31543:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31550:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"x","nodeType":"YulIdentifier","src":"31618:1:17"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"31546:3:17"},"nodeType":"YulFunctionCall","src":"31546:74:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31540:2:17"},"nodeType":"YulFunctionCall","src":"31540:81:17"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"31517:3:17"},"nodeType":"YulFunctionCall","src":"31517:105:17"},"nodeType":"YulIf","src":"31514:131:17"},{"nodeType":"YulAssignment","src":"31655:20:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"31670:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"31673:1:17"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"31666:3:17"},"nodeType":"YulFunctionCall","src":"31666:9:17"},"variableNames":[{"name":"product","nodeType":"YulIdentifier","src":"31655:7:17"}]}]},"name":"checked_mul_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"31364:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"31367:1:17","type":""}],"returnVariables":[{"name":"product","nodeType":"YulTypedName","src":"31373:7:17","type":""}],"src":"31333:348:17"},{"body":{"nodeType":"YulBlock","src":"31731:261:17","statements":[{"nodeType":"YulAssignment","src":"31741:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"31764:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31746:17:17"},"nodeType":"YulFunctionCall","src":"31746:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"31741:1:17"}]},{"nodeType":"YulAssignment","src":"31775:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"31798:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"31780:17:17"},"nodeType":"YulFunctionCall","src":"31780:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"31775:1:17"}]},{"body":{"nodeType":"YulBlock","src":"31938:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"31940:16:17"},"nodeType":"YulFunctionCall","src":"31940:18:17"},"nodeType":"YulExpressionStatement","src":"31940:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"31859:1:17"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"31866:66:17","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"},{"name":"y","nodeType":"YulIdentifier","src":"31934:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31862:3:17"},"nodeType":"YulFunctionCall","src":"31862:74:17"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"31856:2:17"},"nodeType":"YulFunctionCall","src":"31856:81:17"},"nodeType":"YulIf","src":"31853:107:17"},{"nodeType":"YulAssignment","src":"31970:16:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"31981:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"31984:1:17"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31977:3:17"},"nodeType":"YulFunctionCall","src":"31977:9:17"},"variableNames":[{"name":"sum","nodeType":"YulIdentifier","src":"31970:3:17"}]}]},"name":"checked_add_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"31718:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"31721:1:17","type":""}],"returnVariables":[{"name":"sum","nodeType":"YulTypedName","src":"31727:3:17","type":""}],"src":"31687:305:17"},{"body":{"nodeType":"YulBlock","src":"32041:128:17","statements":[{"nodeType":"YulAssignment","src":"32051:33:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32078:5:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32060:17:17"},"nodeType":"YulFunctionCall","src":"32060:24:17"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32051:5:17"}]},{"body":{"nodeType":"YulBlock","src":"32112:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"32114:16:17"},"nodeType":"YulFunctionCall","src":"32114:18:17"},"nodeType":"YulExpressionStatement","src":"32114:18:17"}]},"condition":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32099:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"32106:4:17","type":"","value":"0x00"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"32096:2:17"},"nodeType":"YulFunctionCall","src":"32096:15:17"},"nodeType":"YulIf","src":"32093:41:17"},{"nodeType":"YulAssignment","src":"32143:20:17","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32154:5:17"},{"kind":"number","nodeType":"YulLiteral","src":"32161:1:17","type":"","value":"1"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32150:3:17"},"nodeType":"YulFunctionCall","src":"32150:13:17"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32143:3:17"}]}]},"name":"decrement_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32027:5:17","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32037:3:17","type":""}],"src":"31998:171:17"},{"body":{"nodeType":"YulBlock","src":"32281:76:17","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"32303:6:17"},{"kind":"number","nodeType":"YulLiteral","src":"32311:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32299:3:17"},"nodeType":"YulFunctionCall","src":"32299:14:17"},{"hexValue":"537472696e67733a20686578206c656e67746820696e73756666696369656e74","kind":"string","nodeType":"YulLiteral","src":"32315:34:17","type":"","value":"Strings: hex length insufficient"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32292:6:17"},"nodeType":"YulFunctionCall","src":"32292:58:17"},"nodeType":"YulExpressionStatement","src":"32292:58:17"}]},"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"32273:6:17","type":""}],"src":"32175:182:17"},{"body":{"nodeType":"YulBlock","src":"32509:220:17","statements":[{"nodeType":"YulAssignment","src":"32519:74:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32585:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"32590:2:17","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"32526:58:17"},"nodeType":"YulFunctionCall","src":"32526:67:17"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"32519:3:17"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32691:3:17"}],"functionName":{"name":"store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2","nodeType":"YulIdentifier","src":"32602:88:17"},"nodeType":"YulFunctionCall","src":"32602:93:17"},"nodeType":"YulExpressionStatement","src":"32602:93:17"},{"nodeType":"YulAssignment","src":"32704:19:17","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"32715:3:17"},{"kind":"number","nodeType":"YulLiteral","src":"32720:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32711:3:17"},"nodeType":"YulFunctionCall","src":"32711:12:17"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"32704:3:17"}]}]},"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"32497:3:17","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"32505:3:17","type":""}],"src":"32363:366:17"},{"body":{"nodeType":"YulBlock","src":"32906:248:17","statements":[{"nodeType":"YulAssignment","src":"32916:26:17","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32928:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32939:2:17","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32924:3:17"},"nodeType":"YulFunctionCall","src":"32924:18:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"32916:4:17"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"32963:9:17"},{"kind":"number","nodeType":"YulLiteral","src":"32974:1:17","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32959:3:17"},"nodeType":"YulFunctionCall","src":"32959:17:17"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"32982:4:17"},{"name":"headStart","nodeType":"YulIdentifier","src":"32988:9:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"32978:3:17"},"nodeType":"YulFunctionCall","src":"32978:20:17"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32952:6:17"},"nodeType":"YulFunctionCall","src":"32952:47:17"},"nodeType":"YulExpressionStatement","src":"32952:47:17"},{"nodeType":"YulAssignment","src":"33008:139:17","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"33142:4:17"}],"functionName":{"name":"abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"33016:124:17"},"nodeType":"YulFunctionCall","src":"33016:131:17"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"33008:4:17"}]}]},"name":"abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"32886:9:17","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"32901:4:17","type":""}],"src":"32735:419:17"},{"body":{"nodeType":"YulBlock","src":"33205:146:17","statements":[{"nodeType":"YulAssignment","src":"33215:25:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33238:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33220:17:17"},"nodeType":"YulFunctionCall","src":"33220:20:17"},"variableNames":[{"name":"x","nodeType":"YulIdentifier","src":"33215:1:17"}]},{"nodeType":"YulAssignment","src":"33249:25:17","value":{"arguments":[{"name":"y","nodeType":"YulIdentifier","src":"33272:1:17"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"33254:17:17"},"nodeType":"YulFunctionCall","src":"33254:20:17"},"variableNames":[{"name":"y","nodeType":"YulIdentifier","src":"33249:1:17"}]},{"body":{"nodeType":"YulBlock","src":"33296:22:17","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x11","nodeType":"YulIdentifier","src":"33298:16:17"},"nodeType":"YulFunctionCall","src":"33298:18:17"},"nodeType":"YulExpressionStatement","src":"33298:18:17"}]},"condition":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33290:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"33293:1:17"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33287:2:17"},"nodeType":"YulFunctionCall","src":"33287:8:17"},"nodeType":"YulIf","src":"33284:34:17"},{"nodeType":"YulAssignment","src":"33328:17:17","value":{"arguments":[{"name":"x","nodeType":"YulIdentifier","src":"33340:1:17"},{"name":"y","nodeType":"YulIdentifier","src":"33343:1:17"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"33336:3:17"},"nodeType":"YulFunctionCall","src":"33336:9:17"},"variableNames":[{"name":"diff","nodeType":"YulIdentifier","src":"33328:4:17"}]}]},"name":"checked_sub_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"x","nodeType":"YulTypedName","src":"33191:1:17","type":""},{"name":"y","nodeType":"YulTypedName","src":"33194:1:17","type":""}],"returnVariables":[{"name":"diff","nodeType":"YulTypedName","src":"33200:4:17","type":""}],"src":"33160:191:17"},{"body":{"nodeType":"YulBlock","src":"33385:152:17","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33402:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33405:77:17","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33395:6:17"},"nodeType":"YulFunctionCall","src":"33395:88:17"},"nodeType":"YulExpressionStatement","src":"33395:88:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33499:1:17","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"33502:4:17","type":"","value":"0x31"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"33492:6:17"},"nodeType":"YulFunctionCall","src":"33492:15:17"},"nodeType":"YulExpressionStatement","src":"33492:15:17"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"33523:1:17","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"33526:4:17","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"33516:6:17"},"nodeType":"YulFunctionCall","src":"33516:15:17"},"nodeType":"YulExpressionStatement","src":"33516:15:17"}]},"name":"panic_error_0x31","nodeType":"YulFunctionDefinition","src":"33357:180:17"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := mul(length, 0x20)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef() {\n        revert(0, 0)\n    }\n\n    // uint256[]\n    function abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(offset, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_array$_t_uint256_$dyn_memory_ptr(length))\n        let dst := array\n\n        mstore(array, length)\n        dst := add(array, 0x20)\n\n        let srcEnd := add(offset, mul(length, 0x20))\n        if gt(srcEnd, end) {\n            revert_error_81385d8c0b31fffe14be1da910c8bd3a80be4cfa248e04f42ec0faea3132a8ef()\n        }\n        for { let src := offset } lt(src, srcEnd) { src := add(src, 0x20) }\n        {\n\n            let elementPos := src\n\n            mstore(dst, abi_decode_t_uint256(elementPos, end))\n            dst := add(dst, 0x20)\n        }\n    }\n\n    // uint256[]\n    function abi_decode_t_array$_t_uint256_$dyn_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_array$_t_uint256_$dyn_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := calldataload(add(headStart, 0))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value0 := abi_decode_t_array$_t_uint256_$dyn_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length)\n        {\n            // clear end\n            mstore(add(dst, length), 0)\n        }\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    // struct tradingInCryptoStorage.trading -> struct tradingInCryptoStorage.trading\n    function abi_encode_t_struct$_trading_$4028_memory_ptr_to_t_struct$_trading_$4028_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x0140)\n\n        {\n            // tradeNumber\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // assetName\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // currency\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // fromAddress\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // toAddress\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // totalAmount\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // blHash\n\n            let memberValue0 := mload(add(value, 0xc0))\n\n            mstore(add(pos, 0xc0), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // acceptTrade\n\n            let memberValue0 := mload(add(value, 0xe0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xe0))\n        }\n\n        {\n            // verifyBl\n\n            let memberValue0 := mload(add(value, 0x0100))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x0100))\n        }\n\n        {\n            // tradeType\n\n            let memberValue0 := mload(add(value, 0x0120))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x0120))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_trading_$4028_memory_ptr_to_t_struct$_trading_$4028_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_trading_$4028_memory_ptr_to_t_struct$_trading_$4028_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct tradingInCryptoStorage.trading[] -> struct tradingInCryptoStorage.trading[]\n    function abi_encode_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_trading_$4028_memory_ptr_to_t_struct$_trading_$4028_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_trading_$4028_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_bytes32_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(value0, pos) -> updatedPos {\n        abi_encode_t_bytes32_to_t_bytes32(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // bytes32[] -> bytes32[]\n    function abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_bytes32_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_bytes32_to_t_bytes32(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_bytes32_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_bytes32_$dyn_memory_ptr__to_t_array$_t_bytes32_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_bytes32_$dyn_memory_ptr_to_t_array$_t_bytes32_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_bytes32_t_address_t_address_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr_t_bytes32_t_address_t_address_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart , value6, value5, value4, value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_address_to_t_address_fromStack(value3,  add(headStart, 96))\n\n        abi_encode_t_address_to_t_address_fromStack(value4,  add(headStart, 128))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value5,  add(headStart, 160))\n\n        mstore(add(headStart, 192), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value6,  tail)\n\n    }\n\n    function abi_decode_tuple_t_uint256t_string_memory_ptrt_bytes32t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5 {\n        if slt(sub(dataEnd, headStart), 192) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 32))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value1 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 160\n\n            value5 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: can only renounce\")\n\n        mstore(add(memPtr, 32), \" roles for self\")\n\n    }\n\n    function abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 47)\n        store_literal_in_memory_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fb06fa8ff2141e8ed74502f6792273793f25f0e9d3cf15344f3f5a0d4948fd4b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function store_literal_in_memory_5da3a95acc8e6d5ca7b18b60537d16a9f25cf79235d81231c4e562d800763437(memPtr) {\n\n        mstore(add(memPtr, 0), \"Allowances: The Zero Address is \")\n\n        mstore(add(memPtr, 32), \"not allowed\")\n\n    }\n\n    function abi_encode_t_stringliteral_5da3a95acc8e6d5ca7b18b60537d16a9f25cf79235d81231c4e562d800763437_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 43)\n        store_literal_in_memory_5da3a95acc8e6d5ca7b18b60537d16a9f25cf79235d81231c4e562d800763437(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_5da3a95acc8e6d5ca7b18b60537d16a9f25cf79235d81231c4e562d800763437__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_5da3a95acc8e6d5ca7b18b60537d16a9f25cf79235d81231c4e562d800763437_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(memPtr) {\n\n        mstore(add(memPtr, 0), \"AccessControl: account \")\n\n    }\n\n    function abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 23)\n        store_literal_in_memory_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874(pos)\n        end := add(pos, 23)\n    }\n\n    function store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(memPtr) {\n\n        mstore(add(memPtr, 0), \" is missing role \")\n\n    }\n\n    function abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_nonPadded_inplace_fromStack(pos, 17)\n        store_literal_in_memory_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69(pos)\n        end := add(pos, 17)\n    }\n\n    function abi_encode_tuple_packed_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_t_string_memory_ptr_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value1, value0) -> end {\n\n        pos := abi_encode_t_stringliteral_da0d07ce4a2849fbfc4cb9d6f939e9bd93016c372ca4a5ff14fe06caf3d67874_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        pos := abi_encode_t_stringliteral_f986ce851518a691bccd44ea42a5a185d1b866ef6cb07984a09b81694d20ab69_to_t_string_memory_ptr_nonPadded_inplace_fromStack( pos)\n\n        pos := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_nonPadded_inplace_fromStack(value1,  pos)\n\n        end := pos\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function decrement_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0x00) { panic_error_0x11() }\n        ret := sub(value, 1)\n    }\n\n    function store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(memPtr) {\n\n        mstore(add(memPtr, 0), \"Strings: hex length insufficient\")\n\n    }\n\n    function abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_04fc88320d7c9f639317c75102c103ff0044d3075a5c627e24e76e5bbb2733c2_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n}\n","id":17,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106101735760003560e01c8063954679da116100de578063c47d62bd11610097578063dbe4613d11610071578063dbe4613d14610472578063e275c99714610490578063efd4ad5a146104ae578063f0a56fc8146104ca57610173565b8063c47d62bd1461041c578063c7d63a131461043a578063d547741f1461045657610173565b8063954679da1461032e578063a217fddf1461035e578063a4a591b71461037c578063a8ca9f68146103ac578063af4a9fe5146103ca578063b4b83e931461040057610173565b80633d1d6a7f116101305780633d1d6a7f14610248578063437860141461026457806346da743e14610280578063770994d0146102b05780637a01a1da146102e057806391d14854146102fe57610173565b806301ffc9a714610178578063248a9ca3146101a85780632c535497146101d85780632f2ff15d146101f457806336568abe1461021057806339f7e37f1461022c575b600080fd5b610192600480360381019061018d919061287e565b6104e8565b60405161019f91906128c6565b60405180910390f35b6101c260048036038101906101bd9190612917565b610562565b6040516101cf9190612953565b60405180910390f35b6101f260048036038101906101ed9190612aea565b610581565b005b61020e60048036038101906102099190612ba4565b61071c565b005b61022a60048036038101906102259190612ba4565b61073d565b005b61024660048036038101906102419190612be4565b6107c0565b005b610262600480360381019061025d9190612c2d565b6107e8565b005b61027e60048036038101906102799190612c2d565b610b3b565b005b61029a60048036038101906102959190612917565b610db7565b6040516102a79190612c69565b60405180910390f35b6102ca60048036038101906102c59190612d4c565b610df4565b6040516102d79190612ffc565b60405180910390f35b6102e86110fb565b6040516102f59190612953565b60405180910390f35b61031860048036038101906103139190612ba4565b61111f565b60405161032591906128c6565b60405180910390f35b61034860048036038101906103439190612c2d565b611189565b6040516103559190613068565b60405180910390f35b610366611251565b6040516103739190612953565b60405180910390f35b61039660048036038101906103919190612c2d565b611258565b6040516103a39190613099565b60405180910390f35b6103b4611275565b6040516103c19190613163565b60405180910390f35b6103e460048036038101906103df9190612c2d565b611330565b6040516103f79796959493929190613185565b60405180910390f35b61041a60048036038101906104159190613202565b611370565b005b610424611712565b604051610431919061335a565b60405180910390f35b610454600480360381019061044f9190612ba4565b6117c0565b005b610470600480360381019061046b9190612ba4565b6117dc565b005b61047a6117fd565b6040516104879190612953565b60405180910390f35b610498611821565b6040516104a59190613099565b60405180910390f35b6104c860048036038101906104c39190612917565b611832565b005b6104d261184c565b6040516104df9190612953565b60405180910390f35b60007f7965db0b000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916148061055b575061055a82611870565b5b9050919050565b6000806000838152602001908152602001600020600101549050919050565b61059c600860008481526020019081526020016000206118da565b6105d2576040517f18fec92a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6105ed600860008481526020019081526020016000206118fa565b610623576040517f36f9f28200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61063e60086000848152602001908152602001600020611915565b610674576040517fd9d0f22f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166106a660086000858152602001908152602001600020611931565b73ffffffffffffffffffffffffffffffffffffffff16146106f3576040517fc7e21ef000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610718816008600085815260200190815260200160002061195f90919063ffffffff16565b5050565b61072582610562565b61072e8161197c565b6107388383611990565b505050565b610745611a70565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16146107b2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107a9906133ee565b60405180910390fd5b6107bc8282611a78565b5050565b6000801b6107cd8161197c565b81600790805190602001906107e39291906126e9565b505050565b610803600860008381526020019081526020016000206118da565b610839576040517f18fec92a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610854600860008381526020019081526020016000206118fa565b1561088b576040517fe5f4e72100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016108a860086000848152602001908152602001600020611b59565b14806108ce575060026108cc60086000848152602001908152602001600020611b59565b145b15610957573373ffffffffffffffffffffffffffffffffffffffff1661090560086000848152602001908152602001600020611b67565b73ffffffffffffffffffffffffffffffffffffffff1614610952576040517fc7e21ef000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a31565b600361097460086000848152602001908152602001600020611b59565b14156109fe573373ffffffffffffffffffffffffffffffffffffffff166109ac60086000848152602001908152602001600020611931565b73ffffffffffffffffffffffffffffffffffffffff16146109f9576040517fc7e21ef000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610a30565b6040517f89c4be2c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b6000610a56610a5160086000858152602001908152602001600020611b95565b610db7565b9050610a7360086000848152602001908152602001600020611ba3565b8073ffffffffffffffffffffffffffffffffffffffff166323b872dd610aaa60086000868152602001908152602001600020611b67565b30610ac660086000888152602001908152602001600020611bc3565b6040518463ffffffff1660e01b8152600401610ae49392919061340e565b602060405180830381600087803b158015610afe57600080fd5b505af1158015610b12573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b369190613471565b505050565b610b56600860008381526020019081526020016000206118da565b610b8c576040517f18fec92a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610ba760086000838152602001908152602001600020611bd1565b15610bde576040517f15c9cc7700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610bf960086000838152602001908152602001600020611915565b15610c30576040517f3d50195100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff16610c6260086000848152602001908152602001600020611b67565b73ffffffffffffffffffffffffffffffffffffffff1614610caf576040517fc7e21ef000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b610cca60086000838152602001908152602001600020611bec565b6000610cef610cea60086000858152602001908152602001600020611b95565b610db7565b90508073ffffffffffffffffffffffffffffffffffffffff1663a9059cbb610d2860086000868152602001908152602001600020611931565b610d4360086000878152602001908152602001600020611bc3565b6040518363ffffffff1660e01b8152600401610d6092919061349e565b602060405180830381600087803b158015610d7a57600080fd5b505af1158015610d8e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db29190613471565b505050565b60006001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b60606000825167ffffffffffffffff811115610e1357610e126129bf565b5b604051908082528060200260200182016040528015610e4c57816020015b610e3961276f565b815260200190600190039081610e315790505b50905060005b83518110156110f15760086000858381518110610e7257610e716134c7565b5b602002602001015181526020019081526020016000206040518061014001604052908160008201548152602001600182018054610eae90613525565b80601f0160208091040260200160405190810160405280929190818152602001828054610eda90613525565b8015610f275780601f10610efc57610100808354040283529160200191610f27565b820191906000526020600020905b815481529060010190602001808311610f0a57829003601f168201915b50505050508152602001600282015481526020016003820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016004820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016005820154815260200160068201805461100090613525565b80601f016020809104026020016040519081016040528092919081815260200182805461102c90613525565b80156110795780601f1061104e57610100808354040283529160200191611079565b820191906000526020600020905b81548152906001019060200180831161105c57829003601f168201915b505050505081526020016007820160009054906101000a900460ff161515151581526020016007820160019054906101000a900460ff161515151581526020016008820154815250508282815181106110d5576110d46134c7565b5b6020026020010181905250806110ea90613586565b9050610e52565b5080915050919050565b7ff8cd32ed93fc2f9fc78152a14807c9609af3d99c5fe4dc6b106a801aaddfe90e81565b600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b60606111a6600860008481526020019081526020016000206118da565b6111dc576040517f18fec92a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006111e6611c0c565b9050600061120560086000868152602001908152602001600020611c9e565b905060008251116112255760405180602001604052806000815250611248565b818160405160200161123892919061360b565b6040516020818303038152906040525b92505050919050565b6000801b81565b600061126e826005611d3490919063ffffffff16565b9050919050565b606060006112836002611d4e565b905060008167ffffffffffffffff8111156112a1576112a06129bf565b5b6040519080825280602002602001820160405280156112cf5781602001602082028036833780820191505090505b50905060005b828110156113275760006112f3826002611d6390919063ffffffff16565b905080838381518110611309576113086134c7565b5b602002602001018181525050508061132090613586565b90506112d5565b50809250505090565b600060606000806000806060611357600860008a8152602001908152602001600020611d7a565b9650965096509650965096509650919395979092949650565b60008061138e600860008a81526020019081526020016000206118da565b156113c5576040517f18fec92a00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166113e687610db7565b73ffffffffffffffffffffffffffffffffffffffff161415611434576040517f25f2f2ff00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001831415611508576114677f43f25613eb2f15fb17222a5d424ca2655743e71265d98e4b93c05e5fb589ecde3361111f565b61149d576040517fbab7ca3500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6114c77ffacaf2747a7486cf5730e9265973fb54447d3ace6e7e4711f6360826b07319418661111f565b6114fd576040517ffb7595a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3391508490506116e4565b60028314156115dc5761153b7ffacaf2747a7486cf5730e9265973fb54447d3ace6e7e4711f6360826b07319413361111f565b611571576040517ffb7595a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61159b7ff8cd32ed93fc2f9fc78152a14807c9609af3d99c5fe4dc6b106a801aaddfe90e8661111f565b6115d1576040517fb1df0e0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b3391508490506116e3565b60038314156116b05761160f7ff8cd32ed93fc2f9fc78152a14807c9609af3d99c5fe4dc6b106a801aaddfe90e3361111f565b611645576040517fb1df0e0600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61166f7ffacaf2747a7486cf5730e9265973fb54447d3ace6e7e4711f6360826b07319418661111f565b6116a5576040517ffb7595a200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8491503390506116e2565b6040517f89c4be2c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5b5b6116f388888885858989611f18565b611707886005611f5890919063ffffffff16565b505050505050505050565b6060600061171e611821565b905060008167ffffffffffffffff81111561173c5761173b6129bf565b5b60405190808252806020026020018201604052801561176a5781602001602082028036833780820191505090505b50905060005b828110156117b757600061178382611258565b905080838381518110611799576117986134c7565b5b60200260200101818152505050806117b090613586565b9050611770565b50809250505090565b6000801b6117cd8161197c565b6117d78383611f72565b505050565b6117e582610562565b6117ee8161197c565b6117f88383611a78565b505050565b7f43f25613eb2f15fb17222a5d424ca2655743e71265d98e4b93c05e5fb589ecde81565b600061182d600561204d565b905090565b6000801b61183f8161197c565b61184882612062565b5050565b7ffacaf2747a7486cf5730e9265973fb54447d3ace6e7e4711f6360826b073194181565b60007f01ffc9a7000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916827bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916149050919050565b6000808260000154146118f057600190506118f5565b600090505b919050565b60008160070160009054906101000a900460ff169050919050565b60008082600601805461192790613525565b9050149050919050565b60008160030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b808260060190805190602001906119779291906126e9565b505050565b61198d81611988611a70565b61211d565b50565b61199a828261111f565b611a6c57600160008084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611a11611a70565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b600033905090565b611a82828261111f565b15611b5557600080600084815260200190815260200160002060000160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550611afa611a70565b73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45b5050565b600081600801549050919050565b60008160040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600081600201549050919050565b60018160070160006101000a81548160ff02191690831515021790555050565b600081600501549050919050565b60008160070160019054906101000a900460ff169050919050565b60018160070160016101000a81548160ff02191690831515021790555050565b606060078054611c1b90613525565b80601f0160208091040260200160405190810160405280929190818152602001828054611c4790613525565b8015611c945780601f10611c6957610100808354040283529160200191611c94565b820191906000526020600020905b815481529060010190602001808311611c7757829003601f168201915b5050505050905090565b6060816006018054611caf90613525565b80601f0160208091040260200160405190810160405280929190818152602001828054611cdb90613525565b8015611d285780601f10611cfd57610100808354040283529160200191611d28565b820191906000526020600020905b815481529060010190602001808311611d0b57829003601f168201915b50505050509050919050565b6000611d4383600001836121a2565b60001c905092915050565b6000611d5c826000016121cd565b9050919050565b6000611d7283600001836121a2565b905092915050565b60006060600080600080606087600001548860010189600201548a60030160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168b60040160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff168c600501548d600601858054611df390613525565b80601f0160208091040260200160405190810160405280929190818152602001828054611e1f90613525565b8015611e6c5780601f10611e4157610100808354040283529160200191611e6c565b820191906000526020600020905b815481529060010190602001808311611e4f57829003601f168201915b50505050509550808054611e7f90613525565b80601f0160208091040260200160405190810160405280929190818152602001828054611eab90613525565b8015611ef85780601f10611ecd57610100808354040283529160200191611ef8565b820191906000526020600020905b815481529060010190602001808311611edb57829003601f168201915b505050505090509650965096509650965096509650919395979092949650565b6000879050611f4e88888888888888600860008a81526020019081526020016000206121de90979695949392919063ffffffff16565b5050505050505050565b6000611f6a836000018360001b6122ab565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415611fe2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd9906136a1565b60405180910390fd5b806001600084815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061204882600261231b90919063ffffffff16565b505050565b600061205b826000016121cd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff166001600083815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614156120cf57600080fd5b6120e381600261233290919063ffffffff16565b506001600082815260200190815260200160002060006101000a81549073ffffffffffffffffffffffffffffffffffffffff021916905550565b612127828261111f565b61219e5761213481612349565b6121428360001c6020612376565b604051602001612153929190613759565b6040516020818303038152906040526040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016121959190613068565b60405180910390fd5b5050565b60008260000182815481106121ba576121b96134c7565b5b9060005260206000200154905092915050565b600081600001805490509050919050565b868860000181905550858860010190805190602001906121ff9291906126e9565b50848860020181905550838860030160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550828860040160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508188600501819055508088600801819055505050505050505050565b60006122b783836125b2565b612310578260000182908060018154018082558091505060019003906000526020600020016000909190919091505582600001805490508360010160008481526020019081526020016000208190555060019050612315565b600090505b92915050565b600061232a83600001836122ab565b905092915050565b600061234183600001836125d5565b905092915050565b606061236f8273ffffffffffffffffffffffffffffffffffffffff16601460ff16612376565b9050919050565b6060600060028360026123899190613793565b61239391906137ed565b67ffffffffffffffff8111156123ac576123ab6129bf565b5b6040519080825280601f01601f1916602001820160405280156123de5781602001600182028036833780820191505090505b5090507f300000000000000000000000000000000000000000000000000000000000000081600081518110612416576124156134c7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061247a576124796134c7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600060018460026124ba9190613793565b6124c491906137ed565b90505b6001811115612564577f3031323334353637383961626364656600000000000000000000000000000000600f861660108110612506576125056134c7565b5b1a60f81b82828151811061251d5761251c6134c7565b5b60200101907effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916908160001a905350600485901c94508061255d90613843565b90506124c7565b50600084146125a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161259f906138b9565b60405180910390fd5b8091505092915050565b600080836001016000848152602001908152602001600020541415905092915050565b600080836001016000848152602001908152602001600020549050600081146126dd57600060018261260791906138d9565b905060006001866000018054905061261f91906138d9565b905081811461268e5760008660000182815481106126405761263f6134c7565b5b9060005260206000200154905080876000018481548110612664576126636134c7565b5b90600052602060002001819055508387600101600083815260200190815260200160002081905550505b856000018054806126a2576126a161390d565b5b6001900381819060005260206000200160009055905585600101600086815260200190815260200160002060009055600193505050506126e3565b60009150505b92915050565b8280546126f590613525565b90600052602060002090601f016020900481019282612717576000855561275e565b82601f1061273057805160ff191683800117855561275e565b8280016001018555821561275e579182015b8281111561275d578251825591602001919060010190612742565b5b50905061276b91906127f5565b5090565b604051806101400160405280600081526020016060815260200160008019168152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016000815260200160608152602001600015158152602001600015158152602001600081525090565b5b8082111561280e5760008160009055506001016127f6565b5090565b6000604051905090565b600080fd5b600080fd5b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b61285b81612826565b811461286657600080fd5b50565b60008135905061287881612852565b92915050565b6000602082840312156128945761289361281c565b5b60006128a284828501612869565b91505092915050565b60008115159050919050565b6128c0816128ab565b82525050565b60006020820190506128db60008301846128b7565b92915050565b6000819050919050565b6128f4816128e1565b81146128ff57600080fd5b50565b600081359050612911816128eb565b92915050565b60006020828403121561292d5761292c61281c565b5b600061293b84828501612902565b91505092915050565b61294d816128e1565b82525050565b60006020820190506129686000830184612944565b92915050565b6000819050919050565b6129818161296e565b811461298c57600080fd5b50565b60008135905061299e81612978565b92915050565b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6129f7826129ae565b810181811067ffffffffffffffff82111715612a1657612a156129bf565b5b80604052505050565b6000612a29612812565b9050612a3582826129ee565b919050565b600067ffffffffffffffff821115612a5557612a546129bf565b5b612a5e826129ae565b9050602081019050919050565b82818337600083830152505050565b6000612a8d612a8884612a3a565b612a1f565b905082815260208101848484011115612aa957612aa86129a9565b5b612ab4848285612a6b565b509392505050565b600082601f830112612ad157612ad06129a4565b5b8135612ae1848260208601612a7a565b91505092915050565b60008060408385031215612b0157612b0061281c565b5b6000612b0f8582860161298f565b925050602083013567ffffffffffffffff811115612b3057612b2f612821565b5b612b3c85828601612abc565b9150509250929050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612b7182612b46565b9050919050565b612b8181612b66565b8114612b8c57600080fd5b50565b600081359050612b9e81612b78565b92915050565b60008060408385031215612bbb57612bba61281c565b5b6000612bc985828601612902565b9250506020612bda85828601612b8f565b9150509250929050565b600060208284031215612bfa57612bf961281c565b5b600082013567ffffffffffffffff811115612c1857612c17612821565b5b612c2484828501612abc565b91505092915050565b600060208284031215612c4357612c4261281c565b5b6000612c518482850161298f565b91505092915050565b612c6381612b66565b82525050565b6000602082019050612c7e6000830184612c5a565b92915050565b600067ffffffffffffffff821115612c9f57612c9e6129bf565b5b602082029050602081019050919050565b600080fd5b6000612cc8612cc384612c84565b612a1f565b90508083825260208201905060208402830185811115612ceb57612cea612cb0565b5b835b81811015612d145780612d00888261298f565b845260208401935050602081019050612ced565b5050509392505050565b600082601f830112612d3357612d326129a4565b5b8135612d43848260208601612cb5565b91505092915050565b600060208284031215612d6257612d6161281c565b5b600082013567ffffffffffffffff811115612d8057612d7f612821565b5b612d8c84828501612d1e565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612dca8161296e565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015612e0a578082015181840152602081019050612def565b83811115612e19576000848401525b50505050565b6000612e2a82612dd0565b612e348185612ddb565b9350612e44818560208601612dec565b612e4d816129ae565b840191505092915050565b612e61816128e1565b82525050565b612e7081612b66565b82525050565b612e7f816128ab565b82525050565b600061014083016000830151612e9e6000860182612dc1565b5060208301518482036020860152612eb68282612e1f565b9150506040830151612ecb6040860182612e58565b506060830151612ede6060860182612e67565b506080830151612ef16080860182612e67565b5060a0830151612f0460a0860182612dc1565b5060c083015184820360c0860152612f1c8282612e1f565b91505060e0830151612f3160e0860182612e76565b50610100830151612f46610100860182612e76565b50610120830151612f5b610120860182612dc1565b508091505092915050565b6000612f728383612e85565b905092915050565b6000602082019050919050565b6000612f9282612d95565b612f9c8185612da0565b935083602082028501612fae85612db1565b8060005b85811015612fea5784840389528151612fcb8582612f66565b9450612fd683612f7a565b925060208a01995050600181019050612fb2565b50829750879550505050505092915050565b600060208201905081810360008301526130168184612f87565b905092915050565b600082825260208201905092915050565b600061303a82612dd0565b613044818561301e565b9350613054818560208601612dec565b61305d816129ae565b840191505092915050565b60006020820190508181036000830152613082818461302f565b905092915050565b6130938161296e565b82525050565b60006020820190506130ae600083018461308a565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006130ec8383612e58565b60208301905092915050565b6000602082019050919050565b6000613110826130b4565b61311a81856130bf565b9350613125836130d0565b8060005b8381101561315657815161313d88826130e0565b9750613148836130f8565b925050600181019050613129565b5085935050505092915050565b6000602082019050818103600083015261317d8184613105565b905092915050565b600060e08201905061319a600083018a61308a565b81810360208301526131ac818961302f565b90506131bb6040830188612944565b6131c86060830187612c5a565b6131d56080830186612c5a565b6131e260a083018561308a565b81810360c08301526131f4818461302f565b905098975050505050505050565b60008060008060008060c0878903121561321f5761321e61281c565b5b600061322d89828a0161298f565b965050602087013567ffffffffffffffff81111561324e5761324d612821565b5b61325a89828a01612abc565b955050604061326b89828a01612902565b945050606061327c89828a01612b8f565b935050608061328d89828a0161298f565b92505060a061329e89828a0161298f565b9150509295509295509295565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006132e38383612dc1565b60208301905092915050565b6000602082019050919050565b6000613307826132ab565b61331181856132b6565b935061331c836132c7565b8060005b8381101561334d57815161333488826132d7565b975061333f836132ef565b925050600181019050613320565b5085935050505092915050565b6000602082019050818103600083015261337481846132fc565b905092915050565b7f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560008201527f20726f6c657320666f722073656c660000000000000000000000000000000000602082015250565b60006133d8602f8361301e565b91506133e38261337c565b604082019050919050565b60006020820190508181036000830152613407816133cb565b9050919050565b60006060820190506134236000830186612c5a565b6134306020830185612c5a565b61343d604083018461308a565b949350505050565b61344e816128ab565b811461345957600080fd5b50565b60008151905061346b81613445565b92915050565b6000602082840312156134875761348661281c565b5b60006134958482850161345c565b91505092915050565b60006040820190506134b36000830185612c5a565b6134c0602083018461308a565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061353d57607f821691505b60208210811415613551576135506134f6565b5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006135918261296e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156135c4576135c3613557565b5b600182019050919050565b600081905092915050565b60006135e582612dd0565b6135ef81856135cf565b93506135ff818560208601612dec565b80840191505092915050565b600061361782856135da565b915061362382846135da565b91508190509392505050565b7f416c6c6f77616e6365733a20546865205a65726f20416464726573732069732060008201527f6e6f7420616c6c6f776564000000000000000000000000000000000000000000602082015250565b600061368b602b8361301e565b91506136968261362f565b604082019050919050565b600060208201905081810360008301526136ba8161367e565b9050919050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000600082015250565b60006136f76017836135cf565b9150613702826136c1565b601782019050919050565b7f206973206d697373696e6720726f6c6520000000000000000000000000000000600082015250565b60006137436011836135cf565b915061374e8261370d565b601182019050919050565b6000613764826136ea565b915061377082856135da565b915061377b82613736565b915061378782846135da565b91508190509392505050565b600061379e8261296e565b91506137a98361296e565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156137e2576137e1613557565b5b828202905092915050565b60006137f88261296e565b91506138038361296e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561383857613837613557565b5b828201905092915050565b600061384e8261296e565b9150600082141561386257613861613557565b5b600182039050919050565b7f537472696e67733a20686578206c656e67746820696e73756666696369656e74600082015250565b60006138a360208361301e565b91506138ae8261386d565b602082019050919050565b600060208201905081810360008301526138d281613896565b9050919050565b60006138e48261296e565b91506138ef8361296e565b92508282101561390257613901613557565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea2646970667358221220d404478b574365c6509869d7cc0a156aba958775f4b14819ffe45da34553803e64736f6c63430008090033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x173 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x954679DA GT PUSH2 0xDE JUMPI DUP1 PUSH4 0xC47D62BD GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xDBE4613D GT PUSH2 0x71 JUMPI DUP1 PUSH4 0xDBE4613D EQ PUSH2 0x472 JUMPI DUP1 PUSH4 0xE275C997 EQ PUSH2 0x490 JUMPI DUP1 PUSH4 0xEFD4AD5A EQ PUSH2 0x4AE JUMPI DUP1 PUSH4 0xF0A56FC8 EQ PUSH2 0x4CA JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0xC47D62BD EQ PUSH2 0x41C JUMPI DUP1 PUSH4 0xC7D63A13 EQ PUSH2 0x43A JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x456 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x954679DA EQ PUSH2 0x32E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x35E JUMPI DUP1 PUSH4 0xA4A591B7 EQ PUSH2 0x37C JUMPI DUP1 PUSH4 0xA8CA9F68 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0xAF4A9FE5 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xB4B83E93 EQ PUSH2 0x400 JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x3D1D6A7F GT PUSH2 0x130 JUMPI DUP1 PUSH4 0x3D1D6A7F EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x43786014 EQ PUSH2 0x264 JUMPI DUP1 PUSH4 0x46DA743E EQ PUSH2 0x280 JUMPI DUP1 PUSH4 0x770994D0 EQ PUSH2 0x2B0 JUMPI DUP1 PUSH4 0x7A01A1DA EQ PUSH2 0x2E0 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x2FE JUMPI PUSH2 0x173 JUMP JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x1A8 JUMPI DUP1 PUSH4 0x2C535497 EQ PUSH2 0x1D8 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x1F4 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x210 JUMPI DUP1 PUSH4 0x39F7E37F EQ PUSH2 0x22C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x192 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18D SWAP2 SWAP1 PUSH2 0x287E JUMP JUMPDEST PUSH2 0x4E8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19F SWAP2 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BD SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH2 0x562 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CF SWAP2 SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1F2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1ED SWAP2 SWAP1 PUSH2 0x2AEA JUMP JUMPDEST PUSH2 0x581 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x209 SWAP2 SWAP1 PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0x71C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x22A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x225 SWAP2 SWAP1 PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0x73D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x246 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x241 SWAP2 SWAP1 PUSH2 0x2BE4 JUMP JUMPDEST PUSH2 0x7C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x262 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x7E8 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x27E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x279 SWAP2 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0xB3B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x29A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x295 SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2A7 SWAP2 SWAP1 PUSH2 0x2C69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2CA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2C5 SWAP2 SWAP1 PUSH2 0x2D4C JUMP JUMPDEST PUSH2 0xDF4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x2FFC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2E8 PUSH2 0x10FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2F5 SWAP2 SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x318 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x313 SWAP2 SWAP1 PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0x111F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x325 SWAP2 SWAP1 PUSH2 0x28C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x343 SWAP2 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x1189 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x355 SWAP2 SWAP1 PUSH2 0x3068 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x366 PUSH2 0x1251 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x373 SWAP2 SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x396 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x391 SWAP2 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3A3 SWAP2 SWAP1 PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3B4 PUSH2 0x1275 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3C1 SWAP2 SWAP1 PUSH2 0x3163 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3E4 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DF SWAP2 SWAP1 PUSH2 0x2C2D JUMP JUMPDEST PUSH2 0x1330 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3F7 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x3185 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x41A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x415 SWAP2 SWAP1 PUSH2 0x3202 JUMP JUMPDEST PUSH2 0x1370 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x424 PUSH2 0x1712 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x431 SWAP2 SWAP1 PUSH2 0x335A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x454 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x44F SWAP2 SWAP1 PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0x17C0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x470 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x46B SWAP2 SWAP1 PUSH2 0x2BA4 JUMP JUMPDEST PUSH2 0x17DC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x47A PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x487 SWAP2 SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x498 PUSH2 0x1821 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A5 SWAP2 SWAP1 PUSH2 0x3099 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4C8 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4C3 SWAP2 SWAP1 PUSH2 0x2917 JUMP JUMPDEST PUSH2 0x1832 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x4D2 PUSH2 0x184C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DF SWAP2 SWAP1 PUSH2 0x2953 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH32 0x7965DB0B00000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ DUP1 PUSH2 0x55B JUMPI POP PUSH2 0x55A DUP3 PUSH2 0x1870 JUMP JUMPDEST JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x59C PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x5D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x18FEC92A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x5ED PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x18FA JUMP JUMPDEST PUSH2 0x623 JUMPI PUSH1 0x40 MLOAD PUSH32 0x36F9F28200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x63E PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1915 JUMP JUMPDEST PUSH2 0x674 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD9D0F22F00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6A6 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1931 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6F3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC7E21EF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x718 DUP2 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x195F SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x725 DUP3 PUSH2 0x562 JUMP JUMPDEST PUSH2 0x72E DUP2 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x738 DUP4 DUP4 PUSH2 0x1990 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x745 PUSH2 0x1A70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x7B2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7A9 SWAP1 PUSH2 0x33EE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7BC DUP3 DUP3 PUSH2 0x1A78 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x7CD DUP2 PUSH2 0x197C JUMP JUMPDEST DUP2 PUSH1 0x7 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x7E3 SWAP3 SWAP2 SWAP1 PUSH2 0x26E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x803 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x839 JUMPI PUSH1 0x40 MLOAD PUSH32 0x18FEC92A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x854 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x18FA JUMP JUMPDEST ISZERO PUSH2 0x88B JUMPI PUSH1 0x40 MLOAD PUSH32 0xE5F4E72100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH2 0x8A8 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B59 JUMP JUMPDEST EQ DUP1 PUSH2 0x8CE JUMPI POP PUSH1 0x2 PUSH2 0x8CC PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B59 JUMP JUMPDEST EQ JUMPDEST ISZERO PUSH2 0x957 JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x905 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x952 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC7E21EF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA31 JUMP JUMPDEST PUSH1 0x3 PUSH2 0x974 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B59 JUMP JUMPDEST EQ ISZERO PUSH2 0x9FE JUMPI CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x9AC PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1931 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xC7E21EF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA30 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x89C4BE2C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xA56 PUSH2 0xA51 PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST SWAP1 POP PUSH2 0xA73 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1BA3 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD PUSH2 0xAAA PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B67 JUMP JUMPDEST ADDRESS PUSH2 0xAC6 PUSH1 0x8 PUSH1 0x0 DUP9 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAE4 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x340E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xAFE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB12 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB36 SWAP2 SWAP1 PUSH2 0x3471 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0xB56 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0xB8C JUMPI PUSH1 0x40 MLOAD PUSH32 0x18FEC92A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBA7 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1BD1 JUMP JUMPDEST ISZERO PUSH2 0xBDE JUMPI PUSH1 0x40 MLOAD PUSH32 0x15C9CC7700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xBF9 PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1915 JUMP JUMPDEST ISZERO PUSH2 0xC30 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3D50195100000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xC62 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B67 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCAF JUMPI PUSH1 0x40 MLOAD PUSH32 0xC7E21EF000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xCCA PUSH1 0x8 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1BEC JUMP JUMPDEST PUSH1 0x0 PUSH2 0xCEF PUSH2 0xCEA PUSH1 0x8 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1B95 JUMP JUMPDEST PUSH2 0xDB7 JUMP JUMPDEST SWAP1 POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0xD28 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1931 JUMP JUMPDEST PUSH2 0xD43 PUSH1 0x8 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1BC3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD60 SWAP3 SWAP2 SWAP1 PUSH2 0x349E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD7A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD8E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xDB2 SWAP2 SWAP1 PUSH2 0x3471 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP3 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0xE13 JUMPI PUSH2 0xE12 PUSH2 0x29BF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xE4C JUMPI DUP2 PUSH1 0x20 ADD JUMPDEST PUSH2 0xE39 PUSH2 0x276F JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0xE31 JUMPI SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP4 MLOAD DUP2 LT ISZERO PUSH2 0x10F1 JUMPI PUSH1 0x8 PUSH1 0x0 DUP6 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xE72 JUMPI PUSH2 0xE71 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD DUP1 SLOAD PUSH2 0xEAE SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xEDA SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xF27 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xEFC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xF27 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xF0A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD PUSH2 0x1000 SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x102C SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1079 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x104E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1079 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x105C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x7 DUP3 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x8 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x10D5 JUMPI PUSH2 0x10D4 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 SWAP1 MSTORE POP DUP1 PUSH2 0x10EA SWAP1 PUSH2 0x3586 JUMP JUMPDEST SWAP1 POP PUSH2 0xE52 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0xF8CD32ED93FC2F9FC78152A14807C9609AF3D99C5FE4DC6B106A801AADDFE90E DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11A6 PUSH1 0x8 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x18DA JUMP JUMPDEST PUSH2 0x11DC JUMPI PUSH1 0x40 MLOAD PUSH32 0x18FEC92A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x11E6 PUSH2 0x1C0C JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH2 0x1205 PUSH1 0x8 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1C9E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP3 MLOAD GT PUSH2 0x1225 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE POP PUSH2 0x1248 JUMP JUMPDEST DUP2 DUP2 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x1238 SWAP3 SWAP2 SWAP1 PUSH2 0x360B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE JUMPDEST SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SHL DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x126E DUP3 PUSH1 0x5 PUSH2 0x1D34 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x1283 PUSH1 0x2 PUSH2 0x1D4E JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x12A1 JUMPI PUSH2 0x12A0 PUSH2 0x29BF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x12CF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1327 JUMPI PUSH1 0x0 PUSH2 0x12F3 DUP3 PUSH1 0x2 PUSH2 0x1D63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1309 JUMPI PUSH2 0x1308 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP DUP1 PUSH2 0x1320 SWAP1 PUSH2 0x3586 JUMP JUMPDEST SWAP1 POP PUSH2 0x12D5 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 PUSH2 0x1357 PUSH1 0x8 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x1D7A JUMP JUMPDEST SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH2 0x138E PUSH1 0x8 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x18DA JUMP JUMPDEST ISZERO PUSH2 0x13C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x18FEC92A00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x13E6 DUP8 PUSH2 0xDB7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1434 JUMPI PUSH1 0x40 MLOAD PUSH32 0x25F2F2FF00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP4 EQ ISZERO PUSH2 0x1508 JUMPI PUSH2 0x1467 PUSH32 0x43F25613EB2F15FB17222A5D424CA2655743E71265D98E4B93C05E5FB589ECDE CALLER PUSH2 0x111F JUMP JUMPDEST PUSH2 0x149D JUMPI PUSH1 0x40 MLOAD PUSH32 0xBAB7CA3500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x14C7 PUSH32 0xFACAF2747A7486CF5730E9265973FB54447D3ACE6E7E4711F6360826B0731941 DUP7 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x14FD JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB7595A200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER SWAP2 POP DUP5 SWAP1 POP PUSH2 0x16E4 JUMP JUMPDEST PUSH1 0x2 DUP4 EQ ISZERO PUSH2 0x15DC JUMPI PUSH2 0x153B PUSH32 0xFACAF2747A7486CF5730E9265973FB54447D3ACE6E7E4711F6360826B0731941 CALLER PUSH2 0x111F JUMP JUMPDEST PUSH2 0x1571 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB7595A200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x159B PUSH32 0xF8CD32ED93FC2F9FC78152A14807C9609AF3D99C5FE4DC6B106A801AADDFE90E DUP7 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x15D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB1DF0E0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER SWAP2 POP DUP5 SWAP1 POP PUSH2 0x16E3 JUMP JUMPDEST PUSH1 0x3 DUP4 EQ ISZERO PUSH2 0x16B0 JUMPI PUSH2 0x160F PUSH32 0xF8CD32ED93FC2F9FC78152A14807C9609AF3D99C5FE4DC6B106A801AADDFE90E CALLER PUSH2 0x111F JUMP JUMPDEST PUSH2 0x1645 JUMPI PUSH1 0x40 MLOAD PUSH32 0xB1DF0E0600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x166F PUSH32 0xFACAF2747A7486CF5730E9265973FB54447D3ACE6E7E4711F6360826B0731941 DUP7 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x16A5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xFB7595A200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SWAP2 POP CALLER SWAP1 POP PUSH2 0x16E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x89C4BE2C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMPDEST JUMPDEST PUSH2 0x16F3 DUP9 DUP9 DUP9 DUP6 DUP6 DUP10 DUP10 PUSH2 0x1F18 JUMP JUMPDEST PUSH2 0x1707 DUP9 PUSH1 0x5 PUSH2 0x1F58 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH2 0x171E PUSH2 0x1821 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP2 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x173C JUMPI PUSH2 0x173B PUSH2 0x29BF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x176A JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x17B7 JUMPI PUSH1 0x0 PUSH2 0x1783 DUP3 PUSH2 0x1258 JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x1799 JUMPI PUSH2 0x1798 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD DUP2 DUP2 MSTORE POP POP POP DUP1 PUSH2 0x17B0 SWAP1 PUSH2 0x3586 JUMP JUMPDEST SWAP1 POP PUSH2 0x1770 JUMP JUMPDEST POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x17CD DUP2 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x17D7 DUP4 DUP4 PUSH2 0x1F72 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x17E5 DUP3 PUSH2 0x562 JUMP JUMPDEST PUSH2 0x17EE DUP2 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x17F8 DUP4 DUP4 PUSH2 0x1A78 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH32 0x43F25613EB2F15FB17222A5D424CA2655743E71265D98E4B93C05E5FB589ECDE DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x182D PUSH1 0x5 PUSH2 0x204D JUMP JUMPDEST SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 SHL PUSH2 0x183F DUP2 PUSH2 0x197C JUMP JUMPDEST PUSH2 0x1848 DUP3 PUSH2 0x2062 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH32 0xFACAF2747A7486CF5730E9265973FB54447D3ACE6E7E4711F6360826B0731941 DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH32 0x1FFC9A700000000000000000000000000000000000000000000000000000000 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP3 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x0 ADD SLOAD EQ PUSH2 0x18F0 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0x18F5 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 PUSH1 0x6 ADD DUP1 SLOAD PUSH2 0x1927 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP1 POP EQ SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 PUSH1 0x6 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x1977 SWAP3 SWAP2 SWAP1 PUSH2 0x26E9 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x198D DUP2 PUSH2 0x1988 PUSH2 0x1A70 JUMP JUMPDEST PUSH2 0x211D JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x199A DUP3 DUP3 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x1A6C JUMPI PUSH1 0x1 PUSH1 0x0 DUP1 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1A11 PUSH2 0x1A70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1A82 DUP3 DUP3 PUSH2 0x111F JUMP JUMPDEST ISZERO PUSH2 0x1B55 JUMPI PUSH1 0x0 DUP1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x1AFA PUSH2 0x1A70 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x8 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x2 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x7 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x5 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x7 ADD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x7 ADD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x7 DUP1 SLOAD PUSH2 0x1C1B SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1C47 SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1C94 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1C69 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1C94 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1C77 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 DUP2 PUSH1 0x6 ADD DUP1 SLOAD PUSH2 0x1CAF SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1CDB SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1D28 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1CFD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1D28 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1D0B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D43 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x21A2 JUMP JUMPDEST PUSH1 0x0 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D5C DUP3 PUSH1 0x0 ADD PUSH2 0x21CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1D72 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x21A2 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x60 DUP8 PUSH1 0x0 ADD SLOAD DUP9 PUSH1 0x1 ADD DUP10 PUSH1 0x2 ADD SLOAD DUP11 PUSH1 0x3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP12 PUSH1 0x4 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP13 PUSH1 0x5 ADD SLOAD DUP14 PUSH1 0x6 ADD DUP6 DUP1 SLOAD PUSH2 0x1DF3 SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1E1F SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1E6C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1E41 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1E6C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1E4F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP6 POP DUP1 DUP1 SLOAD PUSH2 0x1E7F SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1EAB SWAP1 PUSH2 0x3525 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1EF8 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1ECD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1EF8 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1EDB JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP7 POP SWAP2 SWAP4 SWAP6 SWAP8 SWAP1 SWAP3 SWAP5 SWAP7 POP JUMP JUMPDEST PUSH1 0x0 DUP8 SWAP1 POP PUSH2 0x1F4E DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 DUP9 PUSH1 0x8 PUSH1 0x0 DUP11 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH2 0x21DE SWAP1 SWAP8 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1F6A DUP4 PUSH1 0x0 ADD DUP4 PUSH1 0x0 SHL PUSH2 0x22AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x1FE2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD9 SWAP1 PUSH2 0x36A1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x2048 DUP3 PUSH1 0x2 PUSH2 0x231B SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x205B DUP3 PUSH1 0x0 ADD PUSH2 0x21CD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x1 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x20CF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x20E3 DUP2 PUSH1 0x2 PUSH2 0x2332 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD SWAP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x2127 DUP3 DUP3 PUSH2 0x111F JUMP JUMPDEST PUSH2 0x219E JUMPI PUSH2 0x2134 DUP2 PUSH2 0x2349 JUMP JUMPDEST PUSH2 0x2142 DUP4 PUSH1 0x0 SHR PUSH1 0x20 PUSH2 0x2376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x2153 SWAP3 SWAP2 SWAP1 PUSH2 0x3759 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2195 SWAP2 SWAP1 PUSH2 0x3068 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x21BA JUMPI PUSH2 0x21B9 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP7 DUP9 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP6 DUP9 PUSH1 0x1 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x21FF SWAP3 SWAP2 SWAP1 PUSH2 0x26E9 JUMP JUMPDEST POP DUP5 DUP9 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP9 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP3 DUP9 PUSH1 0x4 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 DUP9 PUSH1 0x5 ADD DUP2 SWAP1 SSTORE POP DUP1 DUP9 PUSH1 0x8 ADD DUP2 SWAP1 SSTORE POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x22B7 DUP4 DUP4 PUSH2 0x25B2 JUMP JUMPDEST PUSH2 0x2310 JUMPI DUP3 PUSH1 0x0 ADD DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP3 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH1 0x1 SWAP1 POP PUSH2 0x2315 JUMP JUMPDEST PUSH1 0x0 SWAP1 POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x232A DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x22AB JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2341 DUP4 PUSH1 0x0 ADD DUP4 PUSH2 0x25D5 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x236F DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x14 PUSH1 0xFF AND PUSH2 0x2376 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 PUSH1 0x2 DUP4 PUSH1 0x2 PUSH2 0x2389 SWAP2 SWAP1 PUSH2 0x3793 JUMP JUMPDEST PUSH2 0x2393 SWAP2 SWAP1 PUSH2 0x37ED JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x23AC JUMPI PUSH2 0x23AB PUSH2 0x29BF JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x1F ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x23DE JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x1 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP SWAP1 POP PUSH32 0x3000000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x0 DUP2 MLOAD DUP2 LT PUSH2 0x2416 JUMPI PUSH2 0x2415 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH32 0x7800000000000000000000000000000000000000000000000000000000000000 DUP2 PUSH1 0x1 DUP2 MLOAD DUP2 LT PUSH2 0x247A JUMPI PUSH2 0x2479 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x0 PUSH1 0x1 DUP5 PUSH1 0x2 PUSH2 0x24BA SWAP2 SWAP1 PUSH2 0x3793 JUMP JUMPDEST PUSH2 0x24C4 SWAP2 SWAP1 PUSH2 0x37ED JUMP JUMPDEST SWAP1 POP JUMPDEST PUSH1 0x1 DUP2 GT ISZERO PUSH2 0x2564 JUMPI PUSH32 0x3031323334353637383961626364656600000000000000000000000000000000 PUSH1 0xF DUP7 AND PUSH1 0x10 DUP2 LT PUSH2 0x2506 JUMPI PUSH2 0x2505 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST BYTE PUSH1 0xF8 SHL DUP3 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0x251D JUMPI PUSH2 0x251C PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST PUSH1 0x20 ADD ADD SWAP1 PUSH31 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 DUP2 PUSH1 0x0 BYTE SWAP1 MSTORE8 POP PUSH1 0x4 DUP6 SWAP1 SHR SWAP5 POP DUP1 PUSH2 0x255D SWAP1 PUSH2 0x3843 JUMP JUMPDEST SWAP1 POP PUSH2 0x24C7 JUMP JUMPDEST POP PUSH1 0x0 DUP5 EQ PUSH2 0x25A8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x259F SWAP1 PUSH2 0x38B9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD EQ ISZERO SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP4 PUSH1 0x1 ADD PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x26DD JUMPI PUSH1 0x0 PUSH1 0x1 DUP3 PUSH2 0x2607 SWAP2 SWAP1 PUSH2 0x38D9 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x1 DUP7 PUSH1 0x0 ADD DUP1 SLOAD SWAP1 POP PUSH2 0x261F SWAP2 SWAP1 PUSH2 0x38D9 JUMP JUMPDEST SWAP1 POP DUP2 DUP2 EQ PUSH2 0x268E JUMPI PUSH1 0x0 DUP7 PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2640 JUMPI PUSH2 0x263F PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD SWAP1 POP DUP1 DUP8 PUSH1 0x0 ADD DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x2664 JUMPI PUSH2 0x2663 PUSH2 0x34C7 JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP DUP4 DUP8 PUSH1 0x1 ADD PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST DUP6 PUSH1 0x0 ADD DUP1 SLOAD DUP1 PUSH2 0x26A2 JUMPI PUSH2 0x26A1 PUSH2 0x390D JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP6 PUSH1 0x1 ADD PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SSTORE PUSH1 0x1 SWAP4 POP POP POP POP PUSH2 0x26E3 JUMP JUMPDEST PUSH1 0x0 SWAP2 POP POP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x26F5 SWAP1 PUSH2 0x3525 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2717 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x275E JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2730 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x275E JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x275E JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x275D JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2742 JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x276B SWAP2 SWAP1 PUSH2 0x27F5 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP1 NOT AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x280E JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x27F6 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x285B DUP2 PUSH2 0x2826 JUMP JUMPDEST DUP2 EQ PUSH2 0x2866 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2878 DUP2 PUSH2 0x2852 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2894 JUMPI PUSH2 0x2893 PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x28A2 DUP5 DUP3 DUP6 ADD PUSH2 0x2869 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28C0 DUP2 PUSH2 0x28AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x28DB PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x28B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x28F4 DUP2 PUSH2 0x28E1 JUMP JUMPDEST DUP2 EQ PUSH2 0x28FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2911 DUP2 PUSH2 0x28EB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x292D JUMPI PUSH2 0x292C PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x293B DUP5 DUP3 DUP6 ADD PUSH2 0x2902 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x294D DUP2 PUSH2 0x28E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2968 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2944 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2981 DUP2 PUSH2 0x296E JUMP JUMPDEST DUP2 EQ PUSH2 0x298C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x299E DUP2 PUSH2 0x2978 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x29F7 DUP3 PUSH2 0x29AE JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x2A16 JUMPI PUSH2 0x2A15 PUSH2 0x29BF JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A29 PUSH2 0x2812 JUMP JUMPDEST SWAP1 POP PUSH2 0x2A35 DUP3 DUP3 PUSH2 0x29EE JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2A55 JUMPI PUSH2 0x2A54 PUSH2 0x29BF JUMP JUMPDEST JUMPDEST PUSH2 0x2A5E DUP3 PUSH2 0x29AE JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2A8D PUSH2 0x2A88 DUP5 PUSH2 0x2A3A JUMP JUMPDEST PUSH2 0x2A1F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x2AA9 JUMPI PUSH2 0x2AA8 PUSH2 0x29A9 JUMP JUMPDEST JUMPDEST PUSH2 0x2AB4 DUP5 DUP3 DUP6 PUSH2 0x2A6B JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2AD1 JUMPI PUSH2 0x2AD0 PUSH2 0x29A4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2AE1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2A7A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2B01 JUMPI PUSH2 0x2B00 PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2B0F DUP6 DUP3 DUP7 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2B30 JUMPI PUSH2 0x2B2F PUSH2 0x2821 JUMP JUMPDEST JUMPDEST PUSH2 0x2B3C DUP6 DUP3 DUP7 ADD PUSH2 0x2ABC JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2B71 DUP3 PUSH2 0x2B46 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2B81 DUP2 PUSH2 0x2B66 JUMP JUMPDEST DUP2 EQ PUSH2 0x2B8C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2B9E DUP2 PUSH2 0x2B78 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2BBB JUMPI PUSH2 0x2BBA PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2BC9 DUP6 DUP3 DUP7 ADD PUSH2 0x2902 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2BDA DUP6 DUP3 DUP7 ADD PUSH2 0x2B8F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2BFA JUMPI PUSH2 0x2BF9 PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C18 JUMPI PUSH2 0x2C17 PUSH2 0x2821 JUMP JUMPDEST JUMPDEST PUSH2 0x2C24 DUP5 DUP3 DUP6 ADD PUSH2 0x2ABC JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2C43 JUMPI PUSH2 0x2C42 PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2C51 DUP5 DUP3 DUP6 ADD PUSH2 0x298F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2C63 DUP2 PUSH2 0x2B66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2C7E PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x2C5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x2C9F JUMPI PUSH2 0x2C9E PUSH2 0x29BF JUMP JUMPDEST JUMPDEST PUSH1 0x20 DUP3 MUL SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x2CC8 PUSH2 0x2CC3 DUP5 PUSH2 0x2C84 JUMP JUMPDEST PUSH2 0x2A1F JUMP JUMPDEST SWAP1 POP DUP1 DUP4 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH1 0x20 DUP5 MUL DUP4 ADD DUP6 DUP2 GT ISZERO PUSH2 0x2CEB JUMPI PUSH2 0x2CEA PUSH2 0x2CB0 JUMP JUMPDEST JUMPDEST DUP4 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2D14 JUMPI DUP1 PUSH2 0x2D00 DUP9 DUP3 PUSH2 0x298F JUMP JUMPDEST DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP4 POP POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2CED JUMP JUMPDEST POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D33 JUMPI PUSH2 0x2D32 PUSH2 0x29A4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D43 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x2CB5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2D62 JUMPI PUSH2 0x2D61 PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 DUP3 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2D80 JUMPI PUSH2 0x2D7F PUSH2 0x2821 JUMP JUMPDEST JUMPDEST PUSH2 0x2D8C DUP5 DUP3 DUP6 ADD PUSH2 0x2D1E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2DCA DUP2 PUSH2 0x296E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x2E0A JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x2DEF JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0x2E19 JUMPI PUSH1 0x0 DUP5 DUP5 ADD MSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2E2A DUP3 PUSH2 0x2DD0 JUMP JUMPDEST PUSH2 0x2E34 DUP2 DUP6 PUSH2 0x2DDB JUMP JUMPDEST SWAP4 POP PUSH2 0x2E44 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DEC JUMP JUMPDEST PUSH2 0x2E4D DUP2 PUSH2 0x29AE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2E61 DUP2 PUSH2 0x28E1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2E70 DUP2 PUSH2 0x2B66 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2E7F DUP2 PUSH2 0x28AB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x140 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x2E9E PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2DC1 JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x20 DUP7 ADD MSTORE PUSH2 0x2EB6 DUP3 DUP3 PUSH2 0x2E1F JUMP JUMPDEST SWAP2 POP POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x2ECB PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2E58 JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x2EDE PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x2E67 JUMP JUMPDEST POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x2EF1 PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2E67 JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x2F04 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x2DC1 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x2F1C DUP3 DUP3 PUSH2 0x2E1F JUMP JUMPDEST SWAP2 POP POP PUSH1 0xE0 DUP4 ADD MLOAD PUSH2 0x2F31 PUSH1 0xE0 DUP7 ADD DUP3 PUSH2 0x2E76 JUMP JUMPDEST POP PUSH2 0x100 DUP4 ADD MLOAD PUSH2 0x2F46 PUSH2 0x100 DUP7 ADD DUP3 PUSH2 0x2E76 JUMP JUMPDEST POP PUSH2 0x120 DUP4 ADD MLOAD PUSH2 0x2F5B PUSH2 0x120 DUP7 ADD DUP3 PUSH2 0x2DC1 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F72 DUP4 DUP4 PUSH2 0x2E85 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F92 DUP3 PUSH2 0x2D95 JUMP JUMPDEST PUSH2 0x2F9C DUP2 DUP6 PUSH2 0x2DA0 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x2FAE DUP6 PUSH2 0x2DB1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x2FEA JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x2FCB DUP6 DUP3 PUSH2 0x2F66 JUMP JUMPDEST SWAP5 POP PUSH2 0x2FD6 DUP4 PUSH2 0x2F7A JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x2FB2 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3016 DUP2 DUP5 PUSH2 0x2F87 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x303A DUP3 PUSH2 0x2DD0 JUMP JUMPDEST PUSH2 0x3044 DUP2 DUP6 PUSH2 0x301E JUMP JUMPDEST SWAP4 POP PUSH2 0x3054 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DEC JUMP JUMPDEST PUSH2 0x305D DUP2 PUSH2 0x29AE JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3082 DUP2 DUP5 PUSH2 0x302F JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3093 DUP2 PUSH2 0x296E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x30AE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x308A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30EC DUP4 DUP4 PUSH2 0x2E58 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3110 DUP3 PUSH2 0x30B4 JUMP JUMPDEST PUSH2 0x311A DUP2 DUP6 PUSH2 0x30BF JUMP JUMPDEST SWAP4 POP PUSH2 0x3125 DUP4 PUSH2 0x30D0 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3156 JUMPI DUP2 MLOAD PUSH2 0x313D DUP9 DUP3 PUSH2 0x30E0 JUMP JUMPDEST SWAP8 POP PUSH2 0x3148 DUP4 PUSH2 0x30F8 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3129 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x317D DUP2 DUP5 PUSH2 0x3105 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x319A PUSH1 0x0 DUP4 ADD DUP11 PUSH2 0x308A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x31AC DUP2 DUP10 PUSH2 0x302F JUMP JUMPDEST SWAP1 POP PUSH2 0x31BB PUSH1 0x40 DUP4 ADD DUP9 PUSH2 0x2944 JUMP JUMPDEST PUSH2 0x31C8 PUSH1 0x60 DUP4 ADD DUP8 PUSH2 0x2C5A JUMP JUMPDEST PUSH2 0x31D5 PUSH1 0x80 DUP4 ADD DUP7 PUSH2 0x2C5A JUMP JUMPDEST PUSH2 0x31E2 PUSH1 0xA0 DUP4 ADD DUP6 PUSH2 0x308A JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0xC0 DUP4 ADD MSTORE PUSH2 0x31F4 DUP2 DUP5 PUSH2 0x302F JUMP JUMPDEST SWAP1 POP SWAP9 SWAP8 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x321F JUMPI PUSH2 0x321E PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x322D DUP10 DUP3 DUP11 ADD PUSH2 0x298F JUMP JUMPDEST SWAP7 POP POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x324E JUMPI PUSH2 0x324D PUSH2 0x2821 JUMP JUMPDEST JUMPDEST PUSH2 0x325A DUP10 DUP3 DUP11 ADD PUSH2 0x2ABC JUMP JUMPDEST SWAP6 POP POP PUSH1 0x40 PUSH2 0x326B DUP10 DUP3 DUP11 ADD PUSH2 0x2902 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x60 PUSH2 0x327C DUP10 DUP3 DUP11 ADD PUSH2 0x2B8F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x80 PUSH2 0x328D DUP10 DUP3 DUP11 ADD PUSH2 0x298F JUMP JUMPDEST SWAP3 POP POP PUSH1 0xA0 PUSH2 0x329E DUP10 DUP3 DUP11 ADD PUSH2 0x298F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x32E3 DUP4 DUP4 PUSH2 0x2DC1 JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3307 DUP3 PUSH2 0x32AB JUMP JUMPDEST PUSH2 0x3311 DUP2 DUP6 PUSH2 0x32B6 JUMP JUMPDEST SWAP4 POP PUSH2 0x331C DUP4 PUSH2 0x32C7 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x334D JUMPI DUP2 MLOAD PUSH2 0x3334 DUP9 DUP3 PUSH2 0x32D7 JUMP JUMPDEST SWAP8 POP PUSH2 0x333F DUP4 PUSH2 0x32EF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3320 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3374 DUP2 DUP5 PUSH2 0x32FC JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A2063616E206F6E6C792072656E6F756E6365 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x20726F6C657320666F722073656C660000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33D8 PUSH1 0x2F DUP4 PUSH2 0x301E JUMP JUMPDEST SWAP2 POP PUSH2 0x33E3 DUP3 PUSH2 0x337C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3407 DUP2 PUSH2 0x33CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x3423 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x2C5A JUMP JUMPDEST PUSH2 0x3430 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2C5A JUMP JUMPDEST PUSH2 0x343D PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x308A JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH2 0x344E DUP2 PUSH2 0x28AB JUMP JUMPDEST DUP2 EQ PUSH2 0x3459 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x346B DUP2 PUSH2 0x3445 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x3487 JUMPI PUSH2 0x3486 PUSH2 0x281C JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3495 DUP5 DUP3 DUP6 ADD PUSH2 0x345C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x34B3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x2C5A JUMP JUMPDEST PUSH2 0x34C0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x308A JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x353D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x3551 JUMPI PUSH2 0x3550 PUSH2 0x34F6 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x3591 DUP3 PUSH2 0x296E JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x35C4 JUMPI PUSH2 0x35C3 PUSH2 0x3557 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x35E5 DUP3 PUSH2 0x2DD0 JUMP JUMPDEST PUSH2 0x35EF DUP2 DUP6 PUSH2 0x35CF JUMP JUMPDEST SWAP4 POP PUSH2 0x35FF DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x2DEC JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3617 DUP3 DUP6 PUSH2 0x35DA JUMP JUMPDEST SWAP2 POP PUSH2 0x3623 DUP3 DUP5 PUSH2 0x35DA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x416C6C6F77616E6365733A20546865205A65726F204164647265737320697320 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6F7420616C6C6F776564000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x368B PUSH1 0x2B DUP4 PUSH2 0x301E JUMP JUMPDEST SWAP2 POP PUSH2 0x3696 DUP3 PUSH2 0x362F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x36BA DUP2 PUSH2 0x367E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373436F6E74726F6C3A206163636F756E7420000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x36F7 PUSH1 0x17 DUP4 PUSH2 0x35CF JUMP JUMPDEST SWAP2 POP PUSH2 0x3702 DUP3 PUSH2 0x36C1 JUMP JUMPDEST PUSH1 0x17 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x206973206D697373696E6720726F6C6520000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3743 PUSH1 0x11 DUP4 PUSH2 0x35CF JUMP JUMPDEST SWAP2 POP PUSH2 0x374E DUP3 PUSH2 0x370D JUMP JUMPDEST PUSH1 0x11 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3764 DUP3 PUSH2 0x36EA JUMP JUMPDEST SWAP2 POP PUSH2 0x3770 DUP3 DUP6 PUSH2 0x35DA JUMP JUMPDEST SWAP2 POP PUSH2 0x377B DUP3 PUSH2 0x3736 JUMP JUMPDEST SWAP2 POP PUSH2 0x3787 DUP3 DUP5 PUSH2 0x35DA JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x379E DUP3 PUSH2 0x296E JUMP JUMPDEST SWAP2 POP PUSH2 0x37A9 DUP4 PUSH2 0x296E JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x37E2 JUMPI PUSH2 0x37E1 PUSH2 0x3557 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x37F8 DUP3 PUSH2 0x296E JUMP JUMPDEST SWAP2 POP PUSH2 0x3803 DUP4 PUSH2 0x296E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x3838 JUMPI PUSH2 0x3837 PUSH2 0x3557 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x384E DUP3 PUSH2 0x296E JUMP JUMPDEST SWAP2 POP PUSH1 0x0 DUP3 EQ ISZERO PUSH2 0x3862 JUMPI PUSH2 0x3861 PUSH2 0x3557 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 SUB SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x537472696E67733A20686578206C656E67746820696E73756666696369656E74 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38A3 PUSH1 0x20 DUP4 PUSH2 0x301E JUMP JUMPDEST SWAP2 POP PUSH2 0x38AE DUP3 PUSH2 0x386D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x38D2 DUP2 PUSH2 0x3896 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x38E4 DUP3 PUSH2 0x296E JUMP JUMPDEST SWAP2 POP PUSH2 0x38EF DUP4 PUSH2 0x296E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x3902 JUMPI PUSH2 0x3901 PUSH2 0x3557 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD4 DIV SELFBALANCE DUP12 JUMPI NUMBER PUSH6 0xC6509869D7CC EXP ISZERO PUSH11 0xBA958775F4B14819FFE45D LOG3 GASLIMIT MSTORE8 DUP1 RETURNDATACOPY PUSH5 0x736F6C6343 STOP ADDMOD MULMOD STOP CALLER ","sourceMap":"627:7489:15:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2606:202:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4378:129;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5304:456:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4803:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5912:214;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1466:103:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4392:904;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5768:645;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;892:124:14;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7664:441:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;825:60;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2895:145:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6818:393:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2027:49:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2085:133:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1279:401:14;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6448:335:15;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;2824:1556;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7249:407;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1673:160;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5228:147:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;687:62:15;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1973:106;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1841:124;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;756:62;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2606:202:0;2691:4;2729:32;2714:47;;;:11;:47;;;;:87;;;;2765:36;2789:11;2765:23;:36::i;:::-;2714:87;2707:94;;2606:202;;;:::o;4378:129::-;4452:7;4478:6;:12;4485:4;4478:12;;;;;;;;;;;:22;;;4471:29;;4378:129;;;:::o;5304:456:15:-;5380:38;:7;:20;5388:11;5380:20;;;;;;;;;;;:36;:38::i;:::-;5376:73;;5427:20;;;;;;;;;;;;;;5376:73;5461:38;:7;:20;5469:11;5461:20;;;;;;;;;;;:36;:38::i;:::-;5457:69;;5508:16;;;;;;;;;;;;;;5457:69;5538:43;:7;:20;5546:11;5538:20;;;;;;;;;;;:41;:43::i;:::-;5534:74;;5590:16;;;;;;;;;;;;;;5534:74;5662:10;5619:53;;:41;:7;:20;5627:11;5619:20;;;;;;;;;;;:39;:41::i;:::-;:53;;;5616:89;;5681:22;;;;;;;;;;;;;;5616:89;5713:39;5747:4;5713:7;:20;5721:11;5713:20;;;;;;;;;;;:33;;:39;;;;:::i;:::-;5304:456;;:::o;4803:145:0:-;4886:18;4899:4;4886:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;4916:25:::1;4927:4;4933:7;4916:10;:25::i;:::-;4803:145:::0;;;:::o;5912:214::-;6018:12;:10;:12::i;:::-;6007:23;;:7;:23;;;5999:83;;;;;;;;;;;;:::i;:::-;;;;;;;;;6093:26;6105:4;6111:7;6093:11;:26::i;:::-;5912:214;;:::o;1466:103:15:-;2072:4:0;1523:18:15;;2505:16:0;2516:4;2505:10;:16::i;:::-;1558:3:15::1;1550:7;:11;;;;;;;;;;;;:::i;:::-;;1466:103:::0;;:::o;4392:904::-;4454:38;:7;:20;4462:11;4454:20;;;;;;;;;;;:36;:38::i;:::-;4450:73;;4501:20;;;;;;;;;;;;;;4450:73;4534:38;:7;:20;4542:11;4534:20;;;;;;;;;;;:36;:38::i;:::-;4531:68;;;4581:16;;;;;;;;;;;;;;4531:68;4646:1;4610:34;:7;:20;4618:11;4610:20;;;;;;;;;;;:32;:34::i;:::-;:37;:78;;;;4687:1;4651:34;:7;:20;4659:11;4651:20;;;;;;;;;;;:32;:34::i;:::-;:37;4610:78;4607:395;;;4744:10;4703:51;;:39;:7;:20;4711:11;4703:20;;;;;;;;;;;:37;:39::i;:::-;:51;;;4700:87;;4763:22;;;;;;;;;;;;;;4700:87;4607:395;;;4840:1;4804:34;:7;:20;4812:11;4804:20;;;;;;;;;;;:32;:34::i;:::-;:37;4801:201;;;4899:10;4856:53;;:41;:7;:20;4864:11;4856:20;;;;;;;;;;;:39;:41::i;:::-;:53;;;4853:89;;4918:22;;;;;;;;;;;;;;4853:89;4801:201;;;4974:18;;;;;;;;;;;;;;4801:201;4607:395;5010:23;5036:55;5052:38;:7;:20;5060:11;5052:20;;;;;;;;;;;:36;:38::i;:::-;5036:15;:55::i;:::-;5010:81;;5100:39;:7;:20;5108:11;5100:20;;;;;;;;;;;:37;:39::i;:::-;5155:15;5148:36;;;5185:39;:7;:20;5193:11;5185:20;;;;;;;;;;;:37;:39::i;:::-;5233:4;5239:41;:7;:20;5247:11;5239:20;;;;;;;;;;;:39;:41::i;:::-;5148:133;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4441:855;4392:904;:::o;5768:645::-;5825:38;:7;:20;5833:11;5825:20;;;;;;;;;;;:36;:38::i;:::-;5821:73;;5872:20;;;;;;;;;;;;;;5821:73;5905:33;:7;:20;5913:11;5905:20;;;;;;;;;;;:31;:33::i;:::-;5902:63;;;5947:16;;;;;;;;;;;;;;5902:63;5976:43;:7;:20;5984:11;5976:20;;;;;;;;;;;:41;:43::i;:::-;5973:72;;;6028:15;;;;;;;;;;;;;;5973:72;6097:10;6056:51;;:39;:7;:20;6064:11;6056:20;;;;;;;;;;;:37;:39::i;:::-;:51;;;6053:87;;6116:22;;;;;;;;;;;;;;6053:87;6148:41;:7;:20;6156:11;6148:20;;;;;;;;;;;:39;:41::i;:::-;6198:23;6224:55;6240:38;:7;:20;6248:11;6240:20;;;;;;;;;;;:36;:38::i;:::-;6224:15;:55::i;:::-;6198:81;;6295:15;6288:32;;;6321:41;:7;:20;6329:11;6321:20;;;;;;;;;;;:39;:41::i;:::-;6363;:7;:20;6371:11;6363:20;;;;;;;;;;;:39;:41::i;:::-;6288:117;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5812:601;5768:645;:::o;892:124:14:-;955:7;982:16;:26;999:8;982:26;;;;;;;;;;;;;;;;;;;;;975:33;;892:124;;;:::o;7664:441:15:-;7745:39;7797:53;7890:14;:21;7853:59;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;7797:115;;7928:13;7923:144;7955:14;:21;7947:5;:29;7923:144;;;8025:7;:30;8033:14;8048:5;8033:21;;;;;;;;:::i;:::-;;;;;;;;8025:30;;;;;;;;;;;8002:53;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:13;8016:5;8002:20;;;;;;;;:::i;:::-;;;;;;;:53;;;;7978:7;;;;:::i;:::-;;;7923:144;;;;8084:13;8077:20;;;7664:441;;;:::o;825:60::-;862:23;825:60;:::o;2895:145:0:-;2981:4;3004:6;:12;3011:4;3004:12;;;;;;;;;;;:20;;:29;3025:7;3004:29;;;;;;;;;;;;;;;;;;;;;;;;;2997:36;;2895:145;;;;:::o;6818:393:15:-;6891:13;6917:38;:7;:20;6925:11;6917:20;;;;;;;;;;;:36;:38::i;:::-;6913:73;;6964:20;;;;;;;;;;;;;;6913:73;6992:21;7016:10;:8;:10::i;:::-;6992:34;;7033:18;7052:36;:7;:20;7060:11;7052:20;;;;;;;;;;;:34;:36::i;:::-;7033:55;;7135:1;7117:7;7111:21;:25;:89;;;;;;;;;;;;;;;;;7172:7;7180:4;7155:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;7111:89;7095:105;;;;6818:393;;;:::o;2027:49:0:-;2072:4;2027:49;;;:::o;2085:133:15:-;2154:7;2181:29;2204:5;2181:19;:22;;:29;;;;:::i;:::-;2174:36;;2085:133;;;:::o;1279:401:14:-;1331:16;1360;1379:25;:16;:23;:25::i;:::-;1360:44;;1415:27;1459:8;1445:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1415:53;;1484:13;1479:166;1511:8;1503:5;:16;1479:166;;;1545:16;1564:26;1584:5;1564:16;:19;;:26;;;;:::i;:::-;1545:45;;1625:8;1605:10;1616:5;1605:17;;;;;;;;:::i;:::-;;;;;;;:28;;;;;1530:115;1521:7;;;;:::i;:::-;;;1479:166;;;;1662:10;1655:17;;;;1279:401;:::o;6448:335:15:-;6512:19;6542:23;6576:16;6603:19;6633:17;6661:19;6691:22;6738:37;:7;:20;6746:11;6738:20;;;;;;;;;;;:35;:37::i;:::-;6731:44;;;;;;;;;;;;;;6448:335;;;;;;;;;:::o;2824:1556::-;3061:19;3091:17;3122:38;:7;:20;3130:11;3122:20;;;;;;;;;;;:36;:38::i;:::-;3119:72;;;3169:20;;;;;;;;;;;;;;3119:72;3237:1;3202:37;;:25;3218:8;3202:15;:25::i;:::-;:37;;;3199:71;;;3248:20;;;;;;;;;;;;;;3199:71;3294:1;3283:9;:12;3280:847;;;3330:31;725:24;3350:10;3330:7;:31::i;:::-;3326:61;;3370:15;;;;;;;;;;;;;;3326:61;3409:34;794:24;3429:13;3409:7;:34::i;:::-;3405:64;;3452:15;;;;;;;;;;;;;;3405:64;3493:10;3479:24;;3526:13;3514:25;;3280:847;;;3568:1;3557:9;:12;3554:573;;;3603:31;794:24;3623:10;3603:7;:31::i;:::-;3599:61;;3643:15;;;;;;;;;;;;;;3599:61;3674:33;862:23;3693:13;3674:7;:33::i;:::-;3670:62;;3716:14;;;;;;;;;;;;;;3670:62;3756:10;3742:24;;3789:13;3777:25;;3554:573;;;3831:1;3820:9;:12;3817:310;;;3866:30;862:23;3885:10;3866:7;:30::i;:::-;3862:59;;3905:14;;;;;;;;;;;;;;3862:59;3935:34;794:24;3955:13;3935:7;:34::i;:::-;3931:64;;3978:15;;;;;;;;;;;;;;3931:64;4019:13;4005:27;;4055:10;4043:22;;3817:310;;;4099:18;;;;;;;;;;;;;;3817:310;3554:573;3280:847;4139:186;4166:11;4192:9;4216:8;4239:11;4265:9;4289:11;4315:9;4139:12;:186::i;:::-;4336:36;4360:11;4336:19;:23;;:36;;;;:::i;:::-;;3050:1330;;2824:1556;;;;;;:::o;7249:407::-;7298:16;7327:22;7352:13;:11;:13::i;:::-;7327:38;;7376:23;7416:14;7402:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7376:55;;7447:13;7442:183;7474:14;7466:5;:22;7442:183;;;7514:21;7538:31;7563:5;7538:24;:31::i;:::-;7514:55;;7600:13;7584:6;7591:5;7584:13;;;;;;;;:::i;:::-;;;;;;;:29;;;;;7499:126;7490:7;;;;:::i;:::-;;;7442:183;;;;7642:6;7635:13;;;;7249:407;:::o;1673:160::-;2072:4:0;1755:18:15;;2505:16:0;2516:4;2505:10;:16::i;:::-;1786:39:15::1;1799:8;1809:15;1786:12;:39::i;:::-;1673:160:::0;;;:::o;5228:147:0:-;5312:18;5325:4;5312:12;:18::i;:::-;2505:16;2516:4;2505:10;:16::i;:::-;5342:26:::1;5354:4;5360:7;5342:11;:26::i;:::-;5228:147:::0;;;:::o;687:62:15:-;725:24;687:62;:::o;1973:106::-;2016:7;2043:28;:19;:26;:28::i;:::-;2036:35;;1973:106;:::o;1841:124::-;2072:4:0;1901:18:15;;2505:16:0;2516:4;2505:10;:16::i;:::-;1932:25:15::1;1948:8;1932:15;:25::i;:::-;1841:124:::0;;:::o;756:62::-;794:24;756:62;:::o;829:155:8:-;914:4;952:25;937:40;;;:11;:40;;;;930:47;;829:155;;;:::o;1795:206:16:-;1879:4;1922:1;1904:4;:16;;;:19;1901:70;;1955:4;1948:11;;;;1901:70;1988:5;1981:12;;1795:206;;;;:::o;2589:133::-;2669:4;2698;:16;;;;;;;;;;;;2691:23;;2589:133;;;:::o;2996:145::-;3081:4;3132:1;3109:4;:11;;3103:25;;;;;:::i;:::-;;;:30;3096:37;;2996:145;;;:::o;2301:140::-;2385:7;2417:4;:16;;;;;;;;;;;;2410:23;;2301:140;;;:::o;1096:135::-;1216:7;1204:4;:11;;:19;;;;;;;;;;;;:::i;:::-;;1096:135;;:::o;3334:103:0:-;3400:30;3411:4;3417:12;:10;:12::i;:::-;3400:10;:30::i;:::-;3334:103;:::o;7461:233::-;7544:22;7552:4;7558:7;7544;:22::i;:::-;7539:149;;7614:4;7582:6;:12;7589:4;7582:12;;;;;;;;;;;:20;;:29;7603:7;7582:29;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;7664:12;:10;:12::i;:::-;7637:40;;7655:7;7637:40;;7649:4;7637:40;;;;;;;;;;7539:149;7461:233;;:::o;640:96:6:-;693:7;719:10;712:17;;640:96;:::o;7865:234:0:-;7948:22;7956:4;7962:7;7948;:22::i;:::-;7944:149;;;8018:5;7986:6;:12;7993:4;7986:12;;;;;;;;;;;:20;;:29;8007:7;7986:29;;;;;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;8069:12;:10;:12::i;:::-;8042:40;;8060:7;8042:40;;8054:4;8042:40;;;;;;;;;;7944:149;7865:234;;:::o;3147:124:16:-;3223:7;3249:4;:14;;;3242:21;;3147:124;;;:::o;2447:136::-;2529:7;2561:4;:14;;;;;;;;;;;;2554:21;;2447:136;;;:::o;2728:127::-;2808:7;2834:4;:13;;;2827:20;;2728:127;;;:::o;977:113::-;1078:4;1061;:16;;;:21;;;;;;;;;;;;;;;;;;977:113;:::o;2155:140::-;2239:7;2271:4;:16;;;2264:23;;2155:140;;;:::o;3277:119::-;3352:4;3375;:13;;;;;;;;;;;;3368:20;;3277:119;;;:::o;1237:112::-;1337:4;1323;:13;;;:18;;;;;;;;;;;;;;;;;;1237:112;:::o;1577:88:15:-;1621:13;1650:7;1643:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1577:88;:::o;2862:128:16:-;2940:13;2971:4;:11;;2964:18;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2862:128;;;:::o;11977:135:11:-;12048:7;12082:22;12086:3;:10;;12098:5;12082:3;:22::i;:::-;12074:31;;12067:38;;11977:135;;;;:::o;6631:115::-;6694:7;6720:19;6728:3;:10;;6720:7;:19::i;:::-;6713:26;;6631:115;;;:::o;7088:129::-;7162:7;7188:22;7192:3;:10;;7204:5;7188:3;:22::i;:::-;7181:29;;7088:129;;;;:::o;1355:434:16:-;1439:7;1457:13;1481:7;1499;1517;1535;1553:13;1604:4;:16;;;1631:4;:14;;1656:4;:13;;;1680:4;:16;;;;;;;;;;;;1707:4;:14;;;;;;;;;;;;1732:4;:16;;;1759:4;:11;;1586:195;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1355:434;;;;;;;;;:::o;2232:533:15:-;2501:16;2518:14;2501:31;;2543:214;2579:14;2608:10;2633:9;2657:12;2684:10;2709:12;2736:10;2543:7;:17;2551:8;2543:17;;;;;;;;;;;:21;;:214;;;;;;;;;;:::i;:::-;2490:275;2232:533;;;;;;;:::o;10785:129:11:-;10852:4;10875:32;10880:3;:10;;10900:5;10892:14;;10875:4;:32::i;:::-;10868:39;;10785:129;;;;:::o;392:274:14:-;512:1;485:29;;:15;:29;;;;477:85;;;;;;;;;;;;:::i;:::-;;;;;;;;;602:15;573:16;:26;590:8;573:26;;;;;;;;;;;;:44;;;;;;;;;;;;;;;;;;628:30;649:8;628:16;:20;;:30;;;;:::i;:::-;;392:274;;:::o;11523:112:11:-;11583:7;11609:19;11617:3;:10;;11609:7;:19::i;:::-;11602:26;;11523:112;;;:::o;674:210:14:-;783:1;745:40;;:16;:26;762:8;745:26;;;;;;;;;;;;;;;;;;;;;:40;;;;737:49;;;;;;799:33;823:8;799:16;:23;;:33;;;;:::i;:::-;;850:16;:26;867:8;850:26;;;;;;;;;;;;843:33;;;;;;;;;;;674:210;:::o;3718:479:0:-;3806:22;3814:4;3820:7;3806;:22::i;:::-;3801:390;;3989:28;4009:7;3989:19;:28::i;:::-;4088:38;4116:4;4108:13;;4123:2;4088:19;:38::i;:::-;3896:252;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3844:336;;;;;;;;;;;:::i;:::-;;;;;;;;3801:390;3718:479;;:::o;4904:118:11:-;4971:7;4997:3;:11;;5009:5;4997:18;;;;;;;;:::i;:::-;;;;;;;;;;4990:25;;4904:118;;;;:::o;4455:107::-;4511:7;4537:3;:11;;:18;;;;4530:25;;4455:107;;;:::o;408:563:16:-;716:12;697:4;:16;;:31;;;;756:10;739:4;:14;;:27;;;;;;;;;;;;:::i;:::-;;792:9;777:4;:13;;:24;;;;831:12;812:4;:16;;;:31;;;;;;;;;;;;;;;;;;872:10;854:4;:14;;;:28;;;;;;;;;;;;;;;;;;913:12;894:4;:16;;:31;;;;953:10;936:4;:14;;:27;;;;408:563;;;;;;;;:::o;2206:404:11:-;2269:4;2290:21;2300:3;2305:5;2290:9;:21::i;:::-;2285:319;;2327:3;:11;;2344:5;2327:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2507:3;:11;;:18;;;;2485:3;:12;;:19;2498:5;2485:19;;;;;;;;;;;:40;;;;2546:4;2539:11;;;;2285:319;2588:5;2581:12;;2206:404;;;;;:::o;5911:123::-;5981:4;6004:23;6009:3;:10;;6021:5;6004:4;:23::i;:::-;5997:30;;5911:123;;;;:::o;6202:129::-;6275:4;6298:26;6306:3;:10;;6318:5;6298:7;:26::i;:::-;6291:33;;6202:129;;;;:::o;2102:149:7:-;2160:13;2192:52;2220:4;2204:22;;311:2;2192:52;;:11;:52::i;:::-;2185:59;;2102:149;;;:::o;1513:437::-;1588:13;1613:19;1658:1;1649:6;1645:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1635:25;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1613:47;;1670:15;:6;1677:1;1670:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1695;:6;1702:1;1695:9;;;;;;;;:::i;:::-;;;;;:15;;;;;;;;;;;1725:9;1750:1;1741:6;1737:1;:10;;;;:::i;:::-;:14;;;;:::i;:::-;1725:26;;1720:128;1757:1;1753;:5;1720:128;;;1791:8;1808:3;1800:5;:11;1791:21;;;;;;;:::i;:::-;;;;;1779:6;1786:1;1779:9;;;;;;;;:::i;:::-;;;;;:33;;;;;;;;;;;1836:1;1826:11;;;;;1760:3;;;;:::i;:::-;;;1720:128;;;;1874:1;1865:5;:10;1857:55;;;;;;;;;;;;:::i;:::-;;;;;;;;;1936:6;1922:21;;;1513:437;;;;:::o;4247:127:11:-;4320:4;4366:1;4343:3;:12;;:19;4356:5;4343:19;;;;;;;;;;;;:24;;4336:31;;4247:127;;;;:::o;2778:1388::-;2844:4;2960:18;2981:3;:12;;:19;2994:5;2981:19;;;;;;;;;;;;2960:40;;3029:1;3015:10;:15;3011:1149;;3384:21;3421:1;3408:10;:14;;;;:::i;:::-;3384:38;;3436:17;3477:1;3456:3;:11;;:18;;;;:22;;;;:::i;:::-;3436:42;;3510:13;3497:9;:26;3493:398;;3543:17;3563:3;:11;;3575:9;3563:22;;;;;;;;:::i;:::-;;;;;;;;;;3543:42;;3714:9;3685:3;:11;;3697:13;3685:26;;;;;;;;:::i;:::-;;;;;;;;;:38;;;;3823:10;3797:3;:12;;:23;3810:9;3797:23;;;;;;;;;;;:36;;;;3525:366;3493:398;3969:3;:11;;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4061:3;:12;;:19;4074:5;4061:19;;;;;;;;;;;4054:26;;;4102:4;4095:11;;;;;;;3011:1149;4144:5;4137:12;;;2778:1388;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:17:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o;1518:77::-;1555:7;1584:5;1573:16;;1518:77;;;:::o;1601:122::-;1674:24;1692:5;1674:24;:::i;:::-;1667:5;1664:35;1654:63;;1713:1;1710;1703:12;1654:63;1601:122;:::o;1729:139::-;1775:5;1813:6;1800:20;1791:29;;1829:33;1856:5;1829:33;:::i;:::-;1729:139;;;;:::o;1874:329::-;1933:6;1982:2;1970:9;1961:7;1957:23;1953:32;1950:119;;;1988:79;;:::i;:::-;1950:119;2108:1;2133:53;2178:7;2169:6;2158:9;2154:22;2133:53;:::i;:::-;2123:63;;2079:117;1874:329;;;;:::o;2209:118::-;2296:24;2314:5;2296:24;:::i;:::-;2291:3;2284:37;2209:118;;:::o;2333:222::-;2426:4;2464:2;2453:9;2449:18;2441:26;;2477:71;2545:1;2534:9;2530:17;2521:6;2477:71;:::i;:::-;2333:222;;;;:::o;2561:77::-;2598:7;2627:5;2616:16;;2561:77;;;:::o;2644:122::-;2717:24;2735:5;2717:24;:::i;:::-;2710:5;2707:35;2697:63;;2756:1;2753;2746:12;2697:63;2644:122;:::o;2772:139::-;2818:5;2856:6;2843:20;2834:29;;2872:33;2899:5;2872:33;:::i;:::-;2772:139;;;;:::o;2917:117::-;3026:1;3023;3016:12;3040:117;3149:1;3146;3139:12;3163:102;3204:6;3255:2;3251:7;3246:2;3239:5;3235:14;3231:28;3221:38;;3163:102;;;:::o;3271:180::-;3319:77;3316:1;3309:88;3416:4;3413:1;3406:15;3440:4;3437:1;3430:15;3457:281;3540:27;3562:4;3540:27;:::i;:::-;3532:6;3528:40;3670:6;3658:10;3655:22;3634:18;3622:10;3619:34;3616:62;3613:88;;;3681:18;;:::i;:::-;3613:88;3721:10;3717:2;3710:22;3500:238;3457:281;;:::o;3744:129::-;3778:6;3805:20;;:::i;:::-;3795:30;;3834:33;3862:4;3854:6;3834:33;:::i;:::-;3744:129;;;:::o;3879:308::-;3941:4;4031:18;4023:6;4020:30;4017:56;;;4053:18;;:::i;:::-;4017:56;4091:29;4113:6;4091:29;:::i;:::-;4083:37;;4175:4;4169;4165:15;4157:23;;3879:308;;;:::o;4193:154::-;4277:6;4272:3;4267;4254:30;4339:1;4330:6;4325:3;4321:16;4314:27;4193:154;;;:::o;4353:412::-;4431:5;4456:66;4472:49;4514:6;4472:49;:::i;:::-;4456:66;:::i;:::-;4447:75;;4545:6;4538:5;4531:21;4583:4;4576:5;4572:16;4621:3;4612:6;4607:3;4603:16;4600:25;4597:112;;;4628:79;;:::i;:::-;4597:112;4718:41;4752:6;4747:3;4742;4718:41;:::i;:::-;4437:328;4353:412;;;;;:::o;4785:340::-;4841:5;4890:3;4883:4;4875:6;4871:17;4867:27;4857:122;;4898:79;;:::i;:::-;4857:122;5015:6;5002:20;5040:79;5115:3;5107:6;5100:4;5092:6;5088:17;5040:79;:::i;:::-;5031:88;;4847:278;4785:340;;;;:::o;5131:654::-;5209:6;5217;5266:2;5254:9;5245:7;5241:23;5237:32;5234:119;;;5272:79;;:::i;:::-;5234:119;5392:1;5417:53;5462:7;5453:6;5442:9;5438:22;5417:53;:::i;:::-;5407:63;;5363:117;5547:2;5536:9;5532:18;5519:32;5578:18;5570:6;5567:30;5564:117;;;5600:79;;:::i;:::-;5564:117;5705:63;5760:7;5751:6;5740:9;5736:22;5705:63;:::i;:::-;5695:73;;5490:288;5131:654;;;;;:::o;5791:126::-;5828:7;5868:42;5861:5;5857:54;5846:65;;5791:126;;;:::o;5923:96::-;5960:7;5989:24;6007:5;5989:24;:::i;:::-;5978:35;;5923:96;;;:::o;6025:122::-;6098:24;6116:5;6098:24;:::i;:::-;6091:5;6088:35;6078:63;;6137:1;6134;6127:12;6078:63;6025:122;:::o;6153:139::-;6199:5;6237:6;6224:20;6215:29;;6253:33;6280:5;6253:33;:::i;:::-;6153:139;;;;:::o;6298:474::-;6366:6;6374;6423:2;6411:9;6402:7;6398:23;6394:32;6391:119;;;6429:79;;:::i;:::-;6391:119;6549:1;6574:53;6619:7;6610:6;6599:9;6595:22;6574:53;:::i;:::-;6564:63;;6520:117;6676:2;6702:53;6747:7;6738:6;6727:9;6723:22;6702:53;:::i;:::-;6692:63;;6647:118;6298:474;;;;;:::o;6778:509::-;6847:6;6896:2;6884:9;6875:7;6871:23;6867:32;6864:119;;;6902:79;;:::i;:::-;6864:119;7050:1;7039:9;7035:17;7022:31;7080:18;7072:6;7069:30;7066:117;;;7102:79;;:::i;:::-;7066:117;7207:63;7262:7;7253:6;7242:9;7238:22;7207:63;:::i;:::-;7197:73;;6993:287;6778:509;;;;:::o;7293:329::-;7352:6;7401:2;7389:9;7380:7;7376:23;7372:32;7369:119;;;7407:79;;:::i;:::-;7369:119;7527:1;7552:53;7597:7;7588:6;7577:9;7573:22;7552:53;:::i;:::-;7542:63;;7498:117;7293:329;;;;:::o;7628:118::-;7715:24;7733:5;7715:24;:::i;:::-;7710:3;7703:37;7628:118;;:::o;7752:222::-;7845:4;7883:2;7872:9;7868:18;7860:26;;7896:71;7964:1;7953:9;7949:17;7940:6;7896:71;:::i;:::-;7752:222;;;;:::o;7980:311::-;8057:4;8147:18;8139:6;8136:30;8133:56;;;8169:18;;:::i;:::-;8133:56;8219:4;8211:6;8207:17;8199:25;;8279:4;8273;8269:15;8261:23;;7980:311;;;:::o;8297:117::-;8406:1;8403;8396:12;8437:710;8533:5;8558:81;8574:64;8631:6;8574:64;:::i;:::-;8558:81;:::i;:::-;8549:90;;8659:5;8688:6;8681:5;8674:21;8722:4;8715:5;8711:16;8704:23;;8775:4;8767:6;8763:17;8755:6;8751:30;8804:3;8796:6;8793:15;8790:122;;;8823:79;;:::i;:::-;8790:122;8938:6;8921:220;8955:6;8950:3;8947:15;8921:220;;;9030:3;9059:37;9092:3;9080:10;9059:37;:::i;:::-;9054:3;9047:50;9126:4;9121:3;9117:14;9110:21;;8997:144;8981:4;8976:3;8972:14;8965:21;;8921:220;;;8925:21;8539:608;;8437:710;;;;;:::o;9170:370::-;9241:5;9290:3;9283:4;9275:6;9271:17;9267:27;9257:122;;9298:79;;:::i;:::-;9257:122;9415:6;9402:20;9440:94;9530:3;9522:6;9515:4;9507:6;9503:17;9440:94;:::i;:::-;9431:103;;9247:293;9170:370;;;;:::o;9546:539::-;9630:6;9679:2;9667:9;9658:7;9654:23;9650:32;9647:119;;;9685:79;;:::i;:::-;9647:119;9833:1;9822:9;9818:17;9805:31;9863:18;9855:6;9852:30;9849:117;;;9885:79;;:::i;:::-;9849:117;9990:78;10060:7;10051:6;10040:9;10036:22;9990:78;:::i;:::-;9980:88;;9776:302;9546:539;;;;:::o;10091:139::-;10183:6;10217:5;10211:12;10201:22;;10091:139;;;:::o;10236:209::-;10360:11;10394:6;10389:3;10382:19;10434:4;10429:3;10425:14;10410:29;;10236:209;;;;:::o;10451:157::-;10543:4;10566:3;10558:11;;10596:4;10591:3;10587:14;10579:22;;10451:157;;;:::o;10614:108::-;10691:24;10709:5;10691:24;:::i;:::-;10686:3;10679:37;10614:108;;:::o;10728:99::-;10780:6;10814:5;10808:12;10798:22;;10728:99;;;:::o;10833:159::-;10907:11;10941:6;10936:3;10929:19;10981:4;10976:3;10972:14;10957:29;;10833:159;;;;:::o;10998:307::-;11066:1;11076:113;11090:6;11087:1;11084:13;11076:113;;;11175:1;11170:3;11166:11;11160:18;11156:1;11151:3;11147:11;11140:39;11112:2;11109:1;11105:10;11100:15;;11076:113;;;11207:6;11204:1;11201:13;11198:101;;;11287:1;11278:6;11273:3;11269:16;11262:27;11198:101;11047:258;10998:307;;;:::o;11311:344::-;11389:3;11417:39;11450:5;11417:39;:::i;:::-;11472:61;11526:6;11521:3;11472:61;:::i;:::-;11465:68;;11542:52;11587:6;11582:3;11575:4;11568:5;11564:16;11542:52;:::i;:::-;11619:29;11641:6;11619:29;:::i;:::-;11614:3;11610:39;11603:46;;11393:262;11311:344;;;;:::o;11661:108::-;11738:24;11756:5;11738:24;:::i;:::-;11733:3;11726:37;11661:108;;:::o;11775:::-;11852:24;11870:5;11852:24;:::i;:::-;11847:3;11840:37;11775:108;;:::o;11889:99::-;11960:21;11975:5;11960:21;:::i;:::-;11955:3;11948:34;11889:99;;:::o;12080:2110::-;12189:3;12225:6;12220:3;12216:16;12321:4;12314:5;12310:16;12304:23;12340:63;12397:4;12392:3;12388:14;12374:12;12340:63;:::i;:::-;12242:171;12500:4;12493:5;12489:16;12483:23;12553:3;12547:4;12543:14;12536:4;12531:3;12527:14;12520:38;12579:73;12647:4;12633:12;12579:73;:::i;:::-;12571:81;;12423:240;12749:4;12742:5;12738:16;12732:23;12768:63;12825:4;12820:3;12816:14;12802:12;12768:63;:::i;:::-;12673:168;12930:4;12923:5;12919:16;12913:23;12949:63;13006:4;13001:3;12997:14;12983:12;12949:63;:::i;:::-;12851:171;13109:4;13102:5;13098:16;13092:23;13128:63;13185:4;13180:3;13176:14;13162:12;13128:63;:::i;:::-;13032:169;13290:4;13283:5;13279:16;13273:23;13309:63;13366:4;13361:3;13357:14;13343:12;13309:63;:::i;:::-;13211:171;13466:4;13459:5;13455:16;13449:23;13519:3;13513:4;13509:14;13502:4;13497:3;13493:14;13486:38;13545:73;13613:4;13599:12;13545:73;:::i;:::-;13537:81;;13392:237;13718:4;13711:5;13707:16;13701:23;13737:57;13788:4;13783:3;13779:14;13765:12;13737:57;:::i;:::-;13639:165;13890:6;13883:5;13879:18;13873:25;13911:59;13962:6;13957:3;13953:16;13939:12;13911:59;:::i;:::-;13814:166;14067:6;14060:5;14056:18;14050:25;14088:65;14145:6;14140:3;14136:16;14122:12;14088:65;:::i;:::-;13990:173;14180:4;14173:11;;12194:1996;12080:2110;;;;:::o;14196:256::-;14315:10;14350:96;14442:3;14434:6;14350:96;:::i;:::-;14336:110;;14196:256;;;;:::o;14458:138::-;14553:4;14585;14580:3;14576:14;14568:22;;14458:138;;;:::o;14692:1111::-;14861:3;14890:79;14963:5;14890:79;:::i;:::-;14985:111;15089:6;15084:3;14985:111;:::i;:::-;14978:118;;15122:3;15167:4;15159:6;15155:17;15150:3;15146:27;15197:81;15272:5;15197:81;:::i;:::-;15301:7;15332:1;15317:441;15342:6;15339:1;15336:13;15317:441;;;15413:9;15407:4;15403:20;15398:3;15391:33;15464:6;15458:13;15492:114;15601:4;15586:13;15492:114;:::i;:::-;15484:122;;15629:85;15707:6;15629:85;:::i;:::-;15619:95;;15743:4;15738:3;15734:14;15727:21;;15377:381;15364:1;15361;15357:9;15352:14;;15317:441;;;15321:14;15774:4;15767:11;;15794:3;15787:10;;14866:937;;;;;14692:1111;;;;:::o;15809:473::-;16002:4;16040:2;16029:9;16025:18;16017:26;;16089:9;16083:4;16079:20;16075:1;16064:9;16060:17;16053:47;16117:158;16270:4;16261:6;16117:158;:::i;:::-;16109:166;;15809:473;;;;:::o;16288:169::-;16372:11;16406:6;16401:3;16394:19;16446:4;16441:3;16437:14;16422:29;;16288:169;;;;:::o;16463:364::-;16551:3;16579:39;16612:5;16579:39;:::i;:::-;16634:71;16698:6;16693:3;16634:71;:::i;:::-;16627:78;;16714:52;16759:6;16754:3;16747:4;16740:5;16736:16;16714:52;:::i;:::-;16791:29;16813:6;16791:29;:::i;:::-;16786:3;16782:39;16775:46;;16555:272;16463:364;;;;:::o;16833:313::-;16946:4;16984:2;16973:9;16969:18;16961:26;;17033:9;17027:4;17023:20;17019:1;17008:9;17004:17;16997:47;17061:78;17134:4;17125:6;17061:78;:::i;:::-;17053:86;;16833:313;;;;:::o;17152:118::-;17239:24;17257:5;17239:24;:::i;:::-;17234:3;17227:37;17152:118;;:::o;17276:222::-;17369:4;17407:2;17396:9;17392:18;17384:26;;17420:71;17488:1;17477:9;17473:17;17464:6;17420:71;:::i;:::-;17276:222;;;;:::o;17504:114::-;17571:6;17605:5;17599:12;17589:22;;17504:114;;;:::o;17624:184::-;17723:11;17757:6;17752:3;17745:19;17797:4;17792:3;17788:14;17773:29;;17624:184;;;;:::o;17814:132::-;17881:4;17904:3;17896:11;;17934:4;17929:3;17925:14;17917:22;;17814:132;;;:::o;17952:179::-;18021:10;18042:46;18084:3;18076:6;18042:46;:::i;:::-;18120:4;18115:3;18111:14;18097:28;;17952:179;;;;:::o;18137:113::-;18207:4;18239;18234:3;18230:14;18222:22;;18137:113;;;:::o;18286:732::-;18405:3;18434:54;18482:5;18434:54;:::i;:::-;18504:86;18583:6;18578:3;18504:86;:::i;:::-;18497:93;;18614:56;18664:5;18614:56;:::i;:::-;18693:7;18724:1;18709:284;18734:6;18731:1;18728:13;18709:284;;;18810:6;18804:13;18837:63;18896:3;18881:13;18837:63;:::i;:::-;18830:70;;18923:60;18976:6;18923:60;:::i;:::-;18913:70;;18769:224;18756:1;18753;18749:9;18744:14;;18709:284;;;18713:14;19009:3;19002:10;;18410:608;;;18286:732;;;;:::o;19024:373::-;19167:4;19205:2;19194:9;19190:18;19182:26;;19254:9;19248:4;19244:20;19240:1;19229:9;19225:17;19218:47;19282:108;19385:4;19376:6;19282:108;:::i;:::-;19274:116;;19024:373;;;;:::o;19403:1068::-;19704:4;19742:3;19731:9;19727:19;19719:27;;19756:71;19824:1;19813:9;19809:17;19800:6;19756:71;:::i;:::-;19874:9;19868:4;19864:20;19859:2;19848:9;19844:18;19837:48;19902:78;19975:4;19966:6;19902:78;:::i;:::-;19894:86;;19990:72;20058:2;20047:9;20043:18;20034:6;19990:72;:::i;:::-;20072;20140:2;20129:9;20125:18;20116:6;20072:72;:::i;:::-;20154:73;20222:3;20211:9;20207:19;20198:6;20154:73;:::i;:::-;20237;20305:3;20294:9;20290:19;20281:6;20237:73;:::i;:::-;20358:9;20352:4;20348:20;20342:3;20331:9;20327:19;20320:49;20386:78;20459:4;20450:6;20386:78;:::i;:::-;20378:86;;19403:1068;;;;;;;;;;:::o;20477:1237::-;20591:6;20599;20607;20615;20623;20631;20680:3;20668:9;20659:7;20655:23;20651:33;20648:120;;;20687:79;;:::i;:::-;20648:120;20807:1;20832:53;20877:7;20868:6;20857:9;20853:22;20832:53;:::i;:::-;20822:63;;20778:117;20962:2;20951:9;20947:18;20934:32;20993:18;20985:6;20982:30;20979:117;;;21015:79;;:::i;:::-;20979:117;21120:63;21175:7;21166:6;21155:9;21151:22;21120:63;:::i;:::-;21110:73;;20905:288;21232:2;21258:53;21303:7;21294:6;21283:9;21279:22;21258:53;:::i;:::-;21248:63;;21203:118;21360:2;21386:53;21431:7;21422:6;21411:9;21407:22;21386:53;:::i;:::-;21376:63;;21331:118;21488:3;21515:53;21560:7;21551:6;21540:9;21536:22;21515:53;:::i;:::-;21505:63;;21459:119;21617:3;21644:53;21689:7;21680:6;21669:9;21665:22;21644:53;:::i;:::-;21634:63;;21588:119;20477:1237;;;;;;;;:::o;21720:114::-;21787:6;21821:5;21815:12;21805:22;;21720:114;;;:::o;21840:184::-;21939:11;21973:6;21968:3;21961:19;22013:4;22008:3;22004:14;21989:29;;21840:184;;;;:::o;22030:132::-;22097:4;22120:3;22112:11;;22150:4;22145:3;22141:14;22133:22;;22030:132;;;:::o;22168:179::-;22237:10;22258:46;22300:3;22292:6;22258:46;:::i;:::-;22336:4;22331:3;22327:14;22313:28;;22168:179;;;;:::o;22353:113::-;22423:4;22455;22450:3;22446:14;22438:22;;22353:113;;;:::o;22502:732::-;22621:3;22650:54;22698:5;22650:54;:::i;:::-;22720:86;22799:6;22794:3;22720:86;:::i;:::-;22713:93;;22830:56;22880:5;22830:56;:::i;:::-;22909:7;22940:1;22925:284;22950:6;22947:1;22944:13;22925:284;;;23026:6;23020:13;23053:63;23112:3;23097:13;23053:63;:::i;:::-;23046:70;;23139:60;23192:6;23139:60;:::i;:::-;23129:70;;22985:224;22972:1;22969;22965:9;22960:14;;22925:284;;;22929:14;23225:3;23218:10;;22626:608;;;22502:732;;;;:::o;23240:373::-;23383:4;23421:2;23410:9;23406:18;23398:26;;23470:9;23464:4;23460:20;23456:1;23445:9;23441:17;23434:47;23498:108;23601:4;23592:6;23498:108;:::i;:::-;23490:116;;23240:373;;;;:::o;23619:234::-;23759:34;23755:1;23747:6;23743:14;23736:58;23828:17;23823:2;23815:6;23811:15;23804:42;23619:234;:::o;23859:366::-;24001:3;24022:67;24086:2;24081:3;24022:67;:::i;:::-;24015:74;;24098:93;24187:3;24098:93;:::i;:::-;24216:2;24211:3;24207:12;24200:19;;23859:366;;;:::o;24231:419::-;24397:4;24435:2;24424:9;24420:18;24412:26;;24484:9;24478:4;24474:20;24470:1;24459:9;24455:17;24448:47;24512:131;24638:4;24512:131;:::i;:::-;24504:139;;24231:419;;;:::o;24656:442::-;24805:4;24843:2;24832:9;24828:18;24820:26;;24856:71;24924:1;24913:9;24909:17;24900:6;24856:71;:::i;:::-;24937:72;25005:2;24994:9;24990:18;24981:6;24937:72;:::i;:::-;25019;25087:2;25076:9;25072:18;25063:6;25019:72;:::i;:::-;24656:442;;;;;;:::o;25104:116::-;25174:21;25189:5;25174:21;:::i;:::-;25167:5;25164:32;25154:60;;25210:1;25207;25200:12;25154:60;25104:116;:::o;25226:137::-;25280:5;25311:6;25305:13;25296:22;;25327:30;25351:5;25327:30;:::i;:::-;25226:137;;;;:::o;25369:345::-;25436:6;25485:2;25473:9;25464:7;25460:23;25456:32;25453:119;;;25491:79;;:::i;:::-;25453:119;25611:1;25636:61;25689:7;25680:6;25669:9;25665:22;25636:61;:::i;:::-;25626:71;;25582:125;25369:345;;;;:::o;25720:332::-;25841:4;25879:2;25868:9;25864:18;25856:26;;25892:71;25960:1;25949:9;25945:17;25936:6;25892:71;:::i;:::-;25973:72;26041:2;26030:9;26026:18;26017:6;25973:72;:::i;:::-;25720:332;;;;;:::o;26058:180::-;26106:77;26103:1;26096:88;26203:4;26200:1;26193:15;26227:4;26224:1;26217:15;26244:180;26292:77;26289:1;26282:88;26389:4;26386:1;26379:15;26413:4;26410:1;26403:15;26430:320;26474:6;26511:1;26505:4;26501:12;26491:22;;26558:1;26552:4;26548:12;26579:18;26569:81;;26635:4;26627:6;26623:17;26613:27;;26569:81;26697:2;26689:6;26686:14;26666:18;26663:38;26660:84;;;26716:18;;:::i;:::-;26660:84;26481:269;26430:320;;;:::o;26756:180::-;26804:77;26801:1;26794:88;26901:4;26898:1;26891:15;26925:4;26922:1;26915:15;26942:233;26981:3;27004:24;27022:5;27004:24;:::i;:::-;26995:33;;27050:66;27043:5;27040:77;27037:103;;;27120:18;;:::i;:::-;27037:103;27167:1;27160:5;27156:13;27149:20;;26942:233;;;:::o;27181:148::-;27283:11;27320:3;27305:18;;27181:148;;;;:::o;27335:377::-;27441:3;27469:39;27502:5;27469:39;:::i;:::-;27524:89;27606:6;27601:3;27524:89;:::i;:::-;27517:96;;27622:52;27667:6;27662:3;27655:4;27648:5;27644:16;27622:52;:::i;:::-;27699:6;27694:3;27690:16;27683:23;;27445:267;27335:377;;;;:::o;27718:435::-;27898:3;27920:95;28011:3;28002:6;27920:95;:::i;:::-;27913:102;;28032:95;28123:3;28114:6;28032:95;:::i;:::-;28025:102;;28144:3;28137:10;;27718:435;;;;;:::o;28159:230::-;28299:34;28295:1;28287:6;28283:14;28276:58;28368:13;28363:2;28355:6;28351:15;28344:38;28159:230;:::o;28395:366::-;28537:3;28558:67;28622:2;28617:3;28558:67;:::i;:::-;28551:74;;28634:93;28723:3;28634:93;:::i;:::-;28752:2;28747:3;28743:12;28736:19;;28395:366;;;:::o;28767:419::-;28933:4;28971:2;28960:9;28956:18;28948:26;;29020:9;29014:4;29010:20;29006:1;28995:9;28991:17;28984:47;29048:131;29174:4;29048:131;:::i;:::-;29040:139;;28767:419;;;:::o;29192:173::-;29332:25;29328:1;29320:6;29316:14;29309:49;29192:173;:::o;29371:402::-;29531:3;29552:85;29634:2;29629:3;29552:85;:::i;:::-;29545:92;;29646:93;29735:3;29646:93;:::i;:::-;29764:2;29759:3;29755:12;29748:19;;29371:402;;;:::o;29779:167::-;29919:19;29915:1;29907:6;29903:14;29896:43;29779:167;:::o;29952:402::-;30112:3;30133:85;30215:2;30210:3;30133:85;:::i;:::-;30126:92;;30227:93;30316:3;30227:93;:::i;:::-;30345:2;30340:3;30336:12;30329:19;;29952:402;;;:::o;30360:967::-;30742:3;30764:148;30908:3;30764:148;:::i;:::-;30757:155;;30929:95;31020:3;31011:6;30929:95;:::i;:::-;30922:102;;31041:148;31185:3;31041:148;:::i;:::-;31034:155;;31206:95;31297:3;31288:6;31206:95;:::i;:::-;31199:102;;31318:3;31311:10;;30360:967;;;;;:::o;31333:348::-;31373:7;31396:20;31414:1;31396:20;:::i;:::-;31391:25;;31430:20;31448:1;31430:20;:::i;:::-;31425:25;;31618:1;31550:66;31546:74;31543:1;31540:81;31535:1;31528:9;31521:17;31517:105;31514:131;;;31625:18;;:::i;:::-;31514:131;31673:1;31670;31666:9;31655:20;;31333:348;;;;:::o;31687:305::-;31727:3;31746:20;31764:1;31746:20;:::i;:::-;31741:25;;31780:20;31798:1;31780:20;:::i;:::-;31775:25;;31934:1;31866:66;31862:74;31859:1;31856:81;31853:107;;;31940:18;;:::i;:::-;31853:107;31984:1;31981;31977:9;31970:16;;31687:305;;;;:::o;31998:171::-;32037:3;32060:24;32078:5;32060:24;:::i;:::-;32051:33;;32106:4;32099:5;32096:15;32093:41;;;32114:18;;:::i;:::-;32093:41;32161:1;32154:5;32150:13;32143:20;;31998:171;;;:::o;32175:182::-;32315:34;32311:1;32303:6;32299:14;32292:58;32175:182;:::o;32363:366::-;32505:3;32526:67;32590:2;32585:3;32526:67;:::i;:::-;32519:74;;32602:93;32691:3;32602:93;:::i;:::-;32720:2;32715:3;32711:12;32704:19;;32363:366;;;:::o;32735:419::-;32901:4;32939:2;32928:9;32924:18;32916:26;;32988:9;32982:4;32978:20;32974:1;32963:9;32959:17;32952:47;33016:131;33142:4;33016:131;:::i;:::-;33008:139;;32735:419;;;:::o;33160:191::-;33200:4;33220:20;33238:1;33220:20;:::i;:::-;33215:25;;33254:20;33272:1;33254:20;:::i;:::-;33249:25;;33293:1;33290;33287:8;33284:34;;;33298:18;;:::i;:::-;33284:34;33343:1;33340;33336:9;33328:17;;33160:191;;;;:::o;33357:180::-;33405:77;33402:1;33395:88;33502:4;33499:1;33492:15;33526:4;33523:1;33516:15"},"methodIdentifiers":{"BUYER_ROLE()":"7a01a1da","DEFAULT_ADMIN_ROLE()":"a217fddf","SELLER_ROLE()":"dbe4613d","TRADER_ROLE()":"f0a56fc8","addCurrency(bytes32,address)":"c7d63a13","addressCurrency(bytes32)":"46da743e","agreeToTrade(uint256)":"3d1d6a7f","allCurrenciesAllowed()":"a8ca9f68","allTradingNumbers()":"c47d62bd","batchDetailsTrades(uint256[])":"770994d0","createtrade(uint256,string,bytes32,address,uint256,uint256)":"b4b83e93","getRoleAdmin(bytes32)":"248a9ca3","getTradingHash(uint256)":"954679da","grantRole(bytes32,address)":"2f2ff15d","hasRole(bytes32,address)":"91d14854","removeCurrency(bytes32)":"efd4ad5a","renounceRole(bytes32,address)":"36568abe","revokeRole(bytes32,address)":"d547741f","supportsInterface(bytes4)":"01ffc9a7","totalTrades()":"e275c997","totalTradesNumberByIndex(uint256)":"a4a591b7","tradingDetails(uint256)":"af4a9fe5","updateBL(uint256,string)":"2c535497","updateBaseUri(string)":"39f7e37f","verifyBL(uint256)":"43786014"}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AllReadyAgreed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyAddedBL\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"CurrencyNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBuyer\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidCallerAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidSeller\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTradeNumber\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTradeType\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidTrader\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotAcceptedYet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotBLAddedYet\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"TradeCompleted\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"BUYER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SELLER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"currency\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"currencyAddress\",\"type\":\"address\"}],\"name\":\"addCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"currency\",\"type\":\"bytes32\"}],\"name\":\"addressCurrency\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradeNumber\",\"type\":\"uint256\"}],\"name\":\"agreeToTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allCurrenciesAllowed\",\"outputs\":[{\"internalType\":\"bytes32[]\",\"name\":\"\",\"type\":\"bytes32[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allTradingNumbers\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tradingNumbers\",\"type\":\"uint256[]\"}],\"name\":\"batchDetailsTrades\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"tradeNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"assetName\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"currency\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"fromAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"toAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"blHash\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"acceptTrade\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"verifyBl\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"tradeType\",\"type\":\"uint256\"}],\"internalType\":\"struct tradingInCryptoStorage.trading[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradeNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"assetName\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"currency\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"walletAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"totalAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tradeType\",\"type\":\"uint256\"}],\"name\":\"createtrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradeNumber\",\"type\":\"uint256\"}],\"name\":\"getTradingHash\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"currency\",\"type\":\"bytes32\"}],\"name\":\"removeCurrency\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalTrades\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"totalTradesNumberByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradeNumber\",\"type\":\"uint256\"}],\"name\":\"tradingDetails\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"TradeNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"AssetName\",\"type\":\"string\"},{\"internalType\":\"bytes32\",\"name\":\"Currency\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"FromAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"ToAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"TotalAmount\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"TradeBL\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradeNumber\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"hash\",\"type\":\"string\"}],\"name\":\"updateBL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"uri\",\"type\":\"string\"}],\"name\":\"updateBaseUri\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tradeNumber\",\"type\":\"uint256\"}],\"name\":\"verifyBL\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allCurrenciesAllowed()\":{\"details\":\"use this function to get all erc20 allowed as payment method in the contract.\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `account`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tradingInCrypto.sol\":\"tradingInCrypto\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/AccessControl.sol\":{\"keccak256\":\"0x67e3daf189111d6d5b0464ed09cf9f0605a22c4b965a7fcecd707101faff008a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cbbb1a75e4064d564bf69e74970eef35064e51fcc09cbf3589aee7faa60d6afe\",\"dweb:/ipfs/QmYfAtQwFSGmxomnyAV3tpBDbfDwiFXV61osWW2zzQVg5Q\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0x59ce320a585d7e1f163cd70390a0ef2ff9cec832e2aa544293a00692465a7a57\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bb2c137c343ef0c4c7ce7b18c1d108afdc9d315a04e48307288d2d05adcbde3a\",\"dweb:/ipfs/QmUxhrAQM3MM3FF5j7AtcXLXguWCJBHJ14BRdVtuoQc8Fh\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"@openzeppelin/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"@openzeppelin/contracts/utils/introspection/ERC165.sol\":{\"keccak256\":\"0xd10975de010d89fd1c78dc5e8a9a7e7f496198085c151648f20cba166b32582b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb0048dee081f6fffa5f74afc3fb328483c2a30504e94a0ddd2a5114d731ec4d\",\"dweb:/ipfs/QmZptt1nmYoA5SgjwnSgWqgUSDgm4q52Yos3xhnMv3MV43\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"@openzeppelin/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0xc3ff3f5c4584e1d9a483ad7ced51ab64523201f4e3d3c65293e4ca8aeb77a961\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7d3dd6067a994690471b5fc71b6f81fac3847798b37d404f74db00b4d3c3d0e\",\"dweb:/ipfs/QmRHF1RarifjNi93RttouNPkYZGyu6CD926PgRDzD5iL35\"]},\"contracts/allowances.sol\":{\"keccak256\":\"0xcf7e7770ba68ec5e825d096e34da08bcdc5d767a9a817f14e6de889cfb6025b8\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://8bed24691840052a78948815ae801e010dcd49e4a6f69de7ddb4ad883bb9c767\",\"dweb:/ipfs/QmRbE8ywn3yvT58UWZ2ga5z7WRYn9FuRfi1UNNzicbeuFM\"]},\"contracts/tradingInCrypto.sol\":{\"keccak256\":\"0xff86a134e9c571527f80793b0170796830a466b18f1c85df98fcce137a0fbe93\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://49e28b04c2d9e5dad4f1c15ae5b1c7453478ff99163d7d645433e88e978d3176\",\"dweb:/ipfs/QmbKHVyeq1kUurGaVtEUPkHt57YMcBn5sdbTysECU4dYb3\"]},\"contracts/tradingInCryptoStorage.sol\":{\"keccak256\":\"0x65e104af2d688bb3db304ecc967836e8228b9a1a8f643d647f1be01e12112139\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a68a7d1994bb76c522a30a7f955a98b6a16e0dd5cf4ac96bbd9930d6c1b9a5c5\",\"dweb:/ipfs/QmThM4ubKqq1YrWc5AEm3Dx91eXdh9LiaFKTW8Tw5DteCG\"]}},\"version\":1}"}},"contracts/tradingInCryptoStorage.sol":{"tradingInCryptoStorage":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc8087a1f9bdd32802f2abad03cef3de86e0bc46e01ae7b4aff056427755761664736f6c63430008090033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC DUP1 DUP8 LOG1 0xF9 0xBD 0xD3 0x28 MUL CALLCODE 0xAB 0xAD SUB 0xCE RETURN 0xDE DUP7 0xE0 0xBC CHAINID 0xE0 BYTE 0xE7 0xB4 0xAF CREATE JUMP TIMESTAMP PUSH24 0x55761664736F6C6343000809003300000000000000000000 ","sourceMap":"64:3335:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220dc8087a1f9bdd32802f2abad03cef3de86e0bc46e01ae7b4aff056427755761664736f6c63430008090033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDC DUP1 DUP8 LOG1 0xF9 0xBD 0xD3 0x28 MUL CALLCODE 0xAB 0xAD SUB 0xCE RETURN 0xDE DUP7 0xE0 0xBC CHAINID 0xE0 BYTE 0xE7 0xB4 0xAF CREATE JUMP TIMESTAMP PUSH24 0x55761664736F6C6343000809003300000000000000000000 ","sourceMap":"64:3335:16:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/tradingInCryptoStorage.sol\":\"tradingInCryptoStorage\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/tradingInCryptoStorage.sol\":{\"keccak256\":\"0x65e104af2d688bb3db304ecc967836e8228b9a1a8f643d647f1be01e12112139\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://a68a7d1994bb76c522a30a7f955a98b6a16e0dd5cf4ac96bbd9930d6c1b9a5c5\",\"dweb:/ipfs/QmThM4ubKqq1YrWc5AEm3Dx91eXdh9LiaFKTW8Tw5DteCG\"]}},\"version\":1}"}}}}}